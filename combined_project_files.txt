
--- START FILE: .gitignore ---

agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json

--- END FILE: .gitignore ---

--- START FILE: add_dummy_target_data.py ---

import pandas as pd
import numpy as np
import os

# --- Configuration ---
ORIGINAL_DATA_FILE = "cleaned_sensor_data.csv"
MODIFIED_DATA_FILE = "cleaned_sensor_data_with_dummy_targets.csv"

# --- Dummy Data Ranges ---
SOIL_MOISTURE_MIN = 30.0
SOIL_MOISTURE_MAX = 70.0

LIGHT_INTENSITY_MIN = 1000.0
LIGHT_INTENSITY_MAX = 10000.0

GROWTH_FACTOR_MIN = 0.3
GROWTH_FACTOR_MAX = 1.0

# --- Load CSV ---
print(f"Loading data from {ORIGINAL_DATA_FILE}...")
try:
    df = pd.read_csv(ORIGINAL_DATA_FILE)
    print("Data loaded successfully.")
except FileNotFoundError:
    print(f"Error: {ORIGINAL_DATA_FILE} not found. Please ensure the CSV file is in the same directory.")
    exit()
except Exception as e:
    print(f"Error loading data: {e}")
    exit()

print("Generating dummy data for target features...")

# --- Generate Features ---
df['soil_moisture'] = np.random.uniform(SOIL_MOISTURE_MIN, SOIL_MOISTURE_MAX, size=len(df)).round(2)
df['light_intensity'] = np.random.uniform(LIGHT_INTENSITY_MIN, LIGHT_INTENSITY_MAX, size=len(df)).round(2)
df['growth_factor'] = np.random.uniform(GROWTH_FACTOR_MIN, GROWTH_FACTOR_MAX, size=len(df)).round(2)

# --- Growth Trigger Logic ---
# If soil_moisture > 40 and temperature > 25, then trigger growth
df['growth_trigger'] = ((df['soil_moisture'] > 40) & (df['temperature'] > 25)).astype(int)

# --- Show Sample ---
print("New columns added: 'soil_moisture', 'light_intensity', 'growth_factor', 'growth_trigger'")
print("First 5 rows of the modified data:")
print(df[['soil_moisture', 'light_intensity', 'growth_factor', 'growth_trigger']].head())

# --- Save to CSV ---
print(f"\nSaving modified data to {MODIFIED_DATA_FILE}...")
df.to_csv(MODIFIED_DATA_FILE, index=False)
print("✅ Modified data saved successfully.")

# --- Training Tips ---
print("\nTo use this modified data for training:")
print(f"1. Update the 'DATA_FILE' variable in your 'retrain_tdann_model_final.py' script to point to '{MODIFIED_DATA_FILE}'.")
print("2. Set: target_columns = ['soil_moisture', 'light_intensity', 'growth_factor', 'growth_trigger']")
print("3. If 'N', 'P', and 'K' exist, you can also compute and add:")
print("     df['npk_sum'] = df['N'] + df['P'] + df['K']")
print("     target_columns.append('npk_sum')")
print("4. Run your model retraining script.")


--- END FILE: add_dummy_target_data.py ---

--- START FILE: agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json ---

{
  "type": "service_account",
  "project_id": "agriastrax-website",
  "private_key_id": "d98ac1d8eae6979ddd957f6bf836379067a91150",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDpHIYaN3KSJLwT\nPFA7I90NgUVK60WglM2QqqRZ+bMZS10l85dWrr53pUlFMrqHUNL38vaO3uNjuVuL\ny2hR5gZDUI4pjto1OcIzZEEIC7bc3OGHMKX1cr1oSdgy9AUz1xQ8bFqmesSCHDvI\nyELOOTURh4nuWVEaoxuEVlTNsrFGxZyDRPa1uDFmjOlImqsvLUCtFwjL9G97+ERH\nnfffpxpPH/2YmCOHGuP+p5G31D3ukIRBEm9fwOj725MXePxzehQtmpV7XsaqIX7z\nzQuRiWj7WgR8GPp4jUL7O8541T3zcjDu8gUeAwwzUF8Ya37IwfGeFYjk3cQ6EKZb\nbmUyXLTlAgMBAAECggEASX9DzMpEpk1MuyfeB/dzv8lNRqTNTCb+dSlILlIrJMN9\nN/UIdz0bMm/7nQS0iOtzyNdi44Lk4NFVSss0NfY3bUvdtr6ij/uI/lkSo+3FlvdR\naCVvfebSTypRLyd+6GxcpfxnzGuSv48VTmXNomWpFMDOPUcN6j8Y8u2hSUWY3T3g\nx6G8cxSbpYtWwm+gZTVSEq7vVAe9dAdDl6ulrGTBZsozxkOywDdMq9GEEL+pyoNg\nvBk9zeNxMjsSVhZEIE+8uUGHDo6qSnqHC8ePRNMuQFv01aVmq39DWVdGXeGGAuWK\n6oml6UTw+VC2OoEtJtum641vrX9IiesqUMiGNSubNQKBgQD9gyzlZ3INGofDjcua\nz0V18m2l5Y16lfzMBKQhdr4XQ+kh+ivm5QgE+U1j8i62RXOZ3/2WBQfVU9AkUnSp\noUpjsS70I+1RPmlKTfqTssXcxKTnKMMeJeLQabUcM6qMfWcnleVYsfl6cuUmQwiE\nXn9bYhChOgEhiBfCDRhXxA6elwKBgQDrZhngHDIclsPQmwzgUY/pQZ4/ipi+Q7LM\ngnfVGJXIfDjSH3OSNP9r35MyHg9aQ5fNSIOGGMJhTd8+1V0A4iuQNkTlvef20z8r\nCs/qWtl2oyLRwXkqjNjF5DEzk0hawW//y3H81F6U6GDSFiDJVAlAf3yh2sWQ84Po\nwR/8VmIz4wKBgQCs7uiXbOOOMMTgD0AO0MmPVdqaSmcicmJKQfg8o6W0dSz5cpC0\nJxQ7YFz8it52lBXxp6xyw+e+DDh2LpFKja4TJ3DiNgfTXgGxIFSIoHD80l+zGElR\nrYJ1rUZQgKYcxAa0KDqVMIMAlpPeb+fFdDjoe5LgiJLw7sdWJlyush1O7QKBgQC0\npuOeuSTACff2xLcqA44U7ZW7n+q+wYebKVk7gaWZebPFlfuErgWDTM5S/Py9Qfhi\nw46kP6YVNMTqHKZGQkw6XVuckJRPOSlWJ/MOIHCZenMDVJ5fSD4oCIq10QcLFz6T\nqRcud/CqCHgdYnwA5ew/wlbsg89xAWEvI98fMVAmDwKBgEgCFLXBUG2rP6wqgw2g\n/N5lNPQZyti1ZMgvHX0PWcx44mZb4ruuRfeCsVEcmBexhktZ31YkIAOI99zEqFEo\n3HxKQlFx4TX8USRzdE3A9/3BARrPTx6iLJr9NRSpxStwJ3jNRcOYYuyETg90k8jE\nN/vg/tRMYBFFoc4crg1q2V58\n-----END PRIVATE KEY-----\n",
  "client_email": "firebase-adminsdk-fbsvc@agriastrax-website.iam.gserviceaccount.com",
  "client_id": "111150654307454866295",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40agriastrax-website.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}


--- END FILE: agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json ---

--- START FILE: cleaned_sensor_data.csv ---

N,P,K,temperature,humidity,ph,rainfall,label,soil_moisture,light_intensity,growth_factor,growth_trigger
90,42,43,20.87974371,82.00274423,6.502985292000001,202.9355362,rice,66.56,5155.62,0.85,0
85,58,41,21.77046169,80.31964408,7.038096361,226.6555374,rice,54.91,5953.09,0.4,0
60,55,44,23.00445915,82.3207629,7.840207144,263.9642476,rice,43.26,4259.84,0.88,0
74,35,40,26.49109635,80.15836264,6.980400905,242.8640342,rice,46.58,8622.68,0.35,1
78,42,42,20.13017482,81.60487287,7.628472891,262.7173405,rice,38.63,7834.61,0.43,0
69,37,42,23.05804872,83.37011772,7.073453503,251.0549998,rice,43.55,3942.21,0.48,0
69,55,38,22.70883798,82.63941394,5.70080568,271.3248604,rice,31.91,8750.5,0.72,0
94,53,40,20.27774362,82.89408619,5.718627177999999,241.9741949,rice,54.22,8546.19,0.47,0
89,54,38,24.51588066,83.53521629999999,6.685346424,230.4462359,rice,30.41,6142.78,0.8,0
68,58,38,23.22397386,83.03322691,6.336253525,221.2091958,rice,63.4,7984.94,0.52,0
91,53,40,26.52723513,81.41753846,5.386167788,264.6148697,rice,65.45,7719.96,0.77,1
90,46,42,23.97898217,81.45061596,7.50283396,250.0832336,rice,68.52,4906.28,0.63,0
78,58,44,26.80079604,80.88684822,5.108681786,284.4364567,rice,64.59,4254.05,0.45,1
93,56,36,24.01497622,82.05687182,6.98435366,185.2773389,rice,44.28,2765.99,0.43,0
94,50,37,25.66585205,80.66385045,6.94801983,209.5869708,rice,47.88,6276.04,0.5,1
60,48,39,24.28209415,80.30025587,7.042299068999999,231.0863347,rice,57.28,1412.09,0.68,0
85,38,41,21.58711777,82.7883708,6.2490506560000005,276.65524589999995,rice,60.32,4212.55,0.81,0
91,35,39,23.79391957,80.41817957,6.970859754,206.2611855,rice,68.49,2501.03,0.51,0
77,38,36,21.8652524,80.1923008,5.953933276,224.55501690000003,rice,62.07,4661.73,0.44,0
88,35,40,23.57943626,83.58760316,5.85393208,291.2986618000001,rice,46.07,1609.81,0.6,0
89,45,36,21.32504158,80.47476396,6.442475375,185.4974732,rice,54.42,3426.85,0.57,0
76,40,43,25.15745531,83.11713476,5.070175667,231.3843163,rice,51.99,1963.8,0.86,1
67,59,41,21.94766735,80.97384195,6.012632591,213.3560921,rice,47.32,4386.93,0.52,0
83,41,43,21.0525355,82.67839517,6.254028451,233.1075816,rice,42.1,2047.81,0.8,0
98,47,37,23.48381344,81.33265073,7.375482851,224.0581164,rice,47.33,1389.87,0.5,0
66,53,41,25.0756354,80.52389148,7.778915154,257.0038865,rice,53.95,3607.25,0.72,1
97,59,43,26.35927159,84.04403589,6.2865001760000006,271.35861370000003,rice,47.23,3228.88,0.77,1
97,50,41,24.52922681,80.54498576,7.070959995,260.2634026,rice,41.2,1577.55,0.68,0
60,49,44,20.77576147,84.49774397,6.244841491,240.0810647,rice,55.77,8328.04,0.64,0
84,51,35,22.30157427,80.64416466,6.043304899,197.9791215,rice,64.09,9282.71,0.31,0
73,57,41,21.44653958,84.94375962,5.824709117,272.2017204,rice,56.72,6146.44,0.78,0
92,35,40,22.17931888,80.33127223,6.3573893660000005,200.0882787,rice,54.04,5817.83,0.53,0
85,37,39,24.52783742,82.73685569,6.364134967999999,224.67572310000003,rice,65.23,3563.08,0.35,0
98,53,38,20.26707606,81.63895217,5.01450727,270.4417274,rice,32.55,7103.75,0.35,0
88,54,44,25.7354293,83.88266234,6.149410611,233.1321372,rice,44.76,4484.18,0.56,1
95,55,42,26.79533926,82.1480873,5.950660556,193.3473987,rice,63.76,2746.9,0.35,1
99,57,35,26.75754171,81.17734011,5.960370061,272.29990560000005,rice,40.78,1924.11,0.47,1
95,39,36,23.86330467,83.15250801,5.561398642,285.2493645,rice,60.07,4828.7,0.78,0
60,43,44,21.01944696,82.95221726,7.416245107000001,298.40184710000005,rice,39.94,6358.08,0.46,0
63,44,41,24.17298839,83.7287574,5.583370042,257.0343554,rice,60.44,3506.52,0.75,0
62,42,36,22.78133816,82.06719137,6.430010215,248.7183228,rice,63.64,7348.19,0.98,0
64,45,43,25.62980105,83.52842314,5.534878156,209.9001977,rice,62.07,7946.97,0.37,1
83,60,36,25.59704938,80.14509262,6.903985986,200.834898,rice,45.36,6004.83,0.81,1
82,40,40,23.83067496,84.81360127,6.271478837999999,298.5601175,rice,34.02,8110.97,0.4,0
85,52,45,26.31355498,82.36698992,7.224285503,265.5355937,rice,45.14,5117.71,0.51,1
91,35,38,24.8972823,80.52586088,6.13428721,183.6793207,rice,40.83,6171.66,0.58,0
76,49,42,24.958779,84.47963372,5.206373153,196.95600080000003,rice,44.73,3284.51,0.89,0
74,39,38,23.24113501,84.59201843,7.782051312999999,233.0453455,rice,62.0,2955.21,0.64,0
79,43,39,21.66628296,80.70960551,7.062779015,210.8142087,rice,33.87,8003.44,0.31,0
88,55,45,24.63544858,80.41363018,7.730367824,253.7202781,rice,36.75,1593.49,0.34,0
60,36,43,23.43121862,83.06310136,5.286203711000001,219.9048349,rice,49.04,3083.23,0.75,0
76,60,39,20.0454142,80.3477562,6.766240045,208.5810155,rice,44.68,6909.27,0.96,0
93,56,42,23.85724032,82.22572988,7.382762603,195.0948311,rice,61.52,1650.56,0.37,0
65,60,43,21.97199397,81.89918197,5.658169482000001,227.3637009,rice,35.25,2404.73,0.44,0
95,52,36,26.22916897,83.83625819,5.543360237999999,286.5083725,rice,43.88,9078.54,0.33,1
75,38,39,23.44676801,84.79352417,6.215109715,283.9338466,rice,52.02,6686.47,0.61,0
74,54,38,25.65553461,83.47021081,7.120272972,217.3788583,rice,38.92,1970.85,0.97,0
91,36,45,24.44345477,82.45432595,5.950647577000001,267.97619480000003,rice,61.24,2390.23,0.59,0
71,46,40,20.2801937,82.1235421,7.236705436,191.9535738,rice,69.61,8070.79,0.89,0
99,55,35,21.7238313,80.2389895,6.501697816,277.9626192,rice,63.95,7656.49,0.36,0
72,40,38,20.41447029,82.20802629,7.592490617,245.1511304,rice,47.82,3395.23,0.34,0
83,58,45,25.75528612,83.51827127,5.875345751,245.6626799,rice,64.21,3183.91,0.44,1
93,58,38,20.61521424,83.77345559,6.932400225,279.5451717,rice,67.05,6319.83,0.51,0
70,36,42,21.84106875,80.72886384,6.9462098810000015,202.3838319,rice,53.86,9309.42,0.83,0
76,47,42,20.08369642,83.29114712,5.739175027000001,263.6372176,rice,32.0,9081.3,0.62,0
99,41,36,24.45802087,82.74835604,6.738652179,182.5616319,rice,43.68,1064.68,0.32,0
99,54,37,21.14347496,80.33502926,5.5948196260000005,198.6730942,rice,63.86,9031.69,0.7,0
86,59,35,25.78720567,82.11124033,6.946636369,243.5120414,rice,39.37,7782.48,0.63,0
69,46,41,23.64124821,80.28597873,5.012139669,263.1103304,rice,36.64,2246.97,0.96,0
91,56,37,23.43191632,80.56887849,6.363472207999999,269.5039162,rice,44.42,6305.75,0.91,0
61,52,41,24.97669518,83.891805,6.880431223,204.8001847,rice,33.56,2215.93,0.45,0
67,45,38,22.72791041,82.17068809999998,7.300410836,260.8875056,rice,60.99,6985.53,0.84,0
79,42,37,24.87300744,82.84022551,6.587918707999999,295.6094492000001,rice,45.94,5188.7,0.48,0
78,43,42,21.32376327,83.00320459,7.283736617000001,192.3197536,rice,51.08,5882.75,0.56,0
75,54,36,26.29465461,84.56919326,7.023936392,257.4914906,rice,31.02,7458.08,0.5,0
97,36,45,22.2286982,81.85872947,6.939083505,278.0791793,rice,67.31,8879.08,0.87,0
67,47,44,26.73072391,81.78596776,7.868474653,280.4044392,rice,46.82,9314.75,0.58,1
73,35,38,24.88921174,81.97927117,5.005306977,185.9461429,rice,41.68,3445.61,0.58,0
77,36,37,26.88444878,81.46033732,6.136131869,194.5766559,rice,41.92,8337.47,0.96,1
81,41,38,22.67846116,83.72874389,7.5240800760000015,200.9133156,rice,37.44,5729.09,0.71,0
68,57,43,26.08867875,80.37979919,5.706943251,182.9043504,rice,53.35,4461.86,0.88,1
72,45,35,25.42977518,82.94682591,5.758506323,195.3574542,rice,33.45,3110.67,0.62,0
61,53,43,26.40323239,81.05635517,6.349606327,223.3671883,rice,54.61,1826.06,0.52,1
67,43,39,26.04371967,84.96907151,5.9999690260000005,186.7536773,rice,46.24,1387.64,0.37,1
67,58,39,25.2827223,80.54372813,5.453592032,220.1156708,rice,34.63,8176.57,0.82,0
66,60,38,22.08576562,83.47038318,6.372576327000001,231.7364957,rice,56.27,2579.74,0.46,0
82,43,38,23.28617173,81.43321641,5.105588355,242.3170629,rice,48.44,6194.98,0.35,0
84,50,44,25.48591986,81.40633547,5.9353444060000005,182.6549356,rice,56.96,6590.49,0.49,1
81,53,42,23.67575393,81.03569343,5.17782304,233.7034975,rice,38.09,7375.31,0.61,0
91,50,40,20.82477109,84.1341879,6.462391607000001,230.22422230000004,rice,56.51,6740.2,0.52,0
93,53,38,26.92995077,81.91411159,7.069172227,290.67937830000005,rice,52.92,5926.48,0.31,1
90,44,38,23.83509503,83.88387074,7.473134377,241.20135130000003,rice,42.56,3859.47,0.94,0
81,45,35,26.52872817,80.12267476,6.158376967000001,218.9163567,rice,49.03,1047.19,0.52,1
78,40,38,26.46428311,83.85642678,7.549873681,248.2256491,rice,37.92,2350.87,0.83,0
60,51,36,22.69657794,82.81088865,6.028321557999999,256.9964761,rice,37.49,7059.35,0.32,0
88,46,42,22.68319059,83.46358271,6.604993475,194.2651719,rice,40.77,4013.65,0.35,0
93,47,37,21.53346343,82.14004101,6.500343222000001,295.9248796,rice,40.09,4812.13,0.74,0
60,55,45,21.40865769,83.32931909999998,5.935745417000001,287.5766935000001,rice,32.0,5059.4,0.6,0
78,35,44,26.54348085,84.67353597,7.072655622,183.6222657,rice,42.3,9468.59,0.44,1
65,37,40,23.35905428,83.59512273,5.333322606,188.413665,rice,62.26,5673.18,0.64,0
71,54,16,22.61359953,63.69070564,5.7499144210000015,87.75953857,maize,38.14,7256.26,0.81,0
61,44,17,26.10018422,71.57476937,6.931756557999999,102.2662445,maize,42.54,6575.34,0.58,1
80,43,16,23.55882094,71.59351368,6.657964753,66.71995467,maize,63.87,6711.34,0.56,0
73,58,21,19.97215954,57.68272924,6.596060648,60.65171481,maize,44.31,3974.22,0.93,0
61,38,20,18.47891261,62.69503871,5.970458434,65.43835393,maize,32.16,7350.31,0.79,0
68,41,16,21.77689322,57.80840636,6.158830619,102.0861694,maize,31.75,3551.54,0.48,0
93,41,17,25.6217169,66.50415474,6.047906679,105.4654703,maize,41.32,9017.88,0.85,1
89,60,19,25.19192419,66.69029010000001,5.913664501,78.06639649,maize,36.3,3971.29,0.42,0
76,44,17,20.41683147,62.55424820000001,5.855442401,65.27798457,maize,42.85,8580.23,0.35,0
67,60,25,24.92162194,66.78627406,5.750254943,109.2162279,maize,30.2,7135.4,0.56,0
70,44,19,23.31689124,73.4541537,5.852607099,94.29712821,maize,37.93,5094.55,0.53,0
90,49,21,24.84016732,68.3584573,6.4725232870000005,74.05474936,maize,46.99,9199.23,0.34,0
62,52,16,22.27526694,58.84015925,6.9670577620000005,63.87020584,maize,48.51,9099.22,0.89,0
92,44,16,18.87751445,65.76816093,6.082973754,94.76189431,maize,46.21,1972.54,0.62,0
66,54,21,25.19008683,60.200168700000006,5.919045532,72.12375573,maize,61.66,5752.06,0.81,1
63,58,22,18.25405352,55.28220433,6.204747652999999,63.72358154,maize,30.65,9998.92,0.55,0
70,47,17,24.612911800000006,70.4162444,6.600827017,104.1626147,maize,45.63,8925.63,0.74,0
61,41,17,25.1420613,65.26185135,6.021902237000001,76.68456006,maize,54.87,9069.83,0.69,1
66,53,19,23.09348056,60.11593810000001,6.033550195,65.49730729,maize,69.98,2892.67,0.88,0
74,55,19,18.05033737,62.89366992,6.28886807,84.23613484,maize,66.06,8178.72,0.6,0
77,57,21,24.9321581,73.80435276,6.550563822999999,79.74078719,maize,52.18,8611.32,0.97,0
99,50,15,18.14710054,71.09445342,5.573286437,88.07753741,maize,52.21,3105.33,0.58,0
74,56,22,18.28362235,66.65952796,6.829199275,80.97573281,maize,59.86,9878.96,0.62,0
83,45,21,18.83344471,58.75082029,5.716222912,79.75328959999999,maize,47.75,5249.4,0.59,0
100,48,16,25.71895816,67.22190688,5.54990242,74.51490791,maize,35.43,7858.96,0.75,0
79,51,16,25.33797709,68.49835977,6.586244581,96.46380213,maize,32.86,6556.96,0.47,0
94,39,18,23.89114571,57.48775781,5.893093135,102.8301942,maize,42.16,8656.69,0.91,0
75,49,15,21.53574127,71.50905983,5.918263801,102.4852929,maize,46.14,6431.24,0.77,0
78,48,22,23.08974909,63.10459626,5.588650585,70.43473609,maize,49.77,1713.66,0.83,0
87,54,20,25.61707368,63.4711755,6.576418207000001,108.8303762,maize,45.94,5255.96,0.54,1
87,35,25,21.44526922,63.1621551,6.178056304,65.88951188,maize,56.57,5319.69,1.0,0
63,43,19,18.51816776,55.53128131,6.641906353,90.988051,maize,36.25,3113.4,0.37,0
84,57,25,22.53510514,67.99257471,6.489040367,64.40866039,maize,45.75,7952.83,0.81,0
64,35,23,23.02038334,61.89472002,5.680361037999999,63.03843397,maize,36.15,2105.63,0.66,0
60,46,22,24.89364635,65.61418761,6.625404347999999,87.9298085,maize,57.57,3604.34,0.4,0
98,44,21,25.77175115,74.089114,6.524478032,107.4931917,maize,35.95,2419.67,0.49,0
75,56,18,19.39851734,62.35750641,5.696205468,60.95197486,maize,49.76,5135.84,0.41,0
86,55,21,21.54156232,59.64024162,6.803931519,109.7515385,maize,35.74,3311.51,0.41,0
98,35,18,23.79746068,74.82913698,6.252797547999999,91.76337172,maize,67.02,7639.66,0.67,0
76,57,18,18.9802729,74.52600826,6.092725883,94.26249353,maize,40.8,7576.74,0.57,0
99,56,17,24.10859207,73.13112261,6.234330356,71.07562236,maize,65.39,3930.79,0.68,0
60,44,23,24.7947077,70.04556743,5.722579819,76.72860067,maize,48.12,8557.71,0.83,0
74,48,17,21.63162756,60.27766379,6.430616465,69.21803098,maize,61.98,8467.76,0.38,0
89,60,17,25.37548751,57.21025565,5.983952675,101.7004306,maize,44.43,3067.31,0.58,1
69,51,23,22.21738222,72.85462807,6.80163854,106.6213157,maize,31.54,6708.36,0.75,0
96,46,22,20.58314011,69.00128641,6.499936446,66.29390357,maize,31.84,4889.72,0.47,0
61,60,15,24.87502824,68.74248334,6.265564338,91.26056654,maize,50.83,7900.98,0.93,0
74,58,18,20.03728219,56.35606753,6.727303282,109.024141,maize,35.37,7494.45,0.35,0
74,43,23,25.95263264,61.89082199,6.325235159,99.57981207,maize,53.58,2218.21,0.36,1
63,43,17,19.28889933,65.47050802,6.807487794,71.3195307,maize,34.14,4862.33,0.67,0
99,36,20,20.57981887,65.34583901,6.671085817000001,78.34604471,maize,58.72,2860.48,0.31,0
77,36,23,24.71417533,56.73426469,6.648725327,88.45361858,maize,53.6,8362.62,0.52,0
87,60,23,20.27317074,63.91281869,6.439071996,62.50351892,maize,43.46,5663.4,0.82,0
60,38,17,18.41932981,64.23580251,6.474476516,76.41312437,maize,30.33,3504.3,0.47,0
94,54,17,23.39128187,61.74427165,5.871647806,107.3198135,maize,39.2,3315.58,0.48,0
95,38,22,19.84939404,61.24500053,5.730617109,100.7689246,maize,31.3,6641.64,0.84,0
84,44,21,21.869274,61.91044947,5.850439831,107.2681929,maize,56.66,4913.11,0.79,0
77,58,19,22.8056033,56.50768935,5.791649933,101.5952794,maize,51.81,3532.48,0.66,0
66,44,20,19.0781471,69.02298571,6.740000687999999,80.72515943,maize,45.68,6402.24,0.48,0
63,35,16,22.02720976,65.35549924,6.272417541,83.73280082,maize,63.67,7171.25,0.43,0
79,45,20,23.80546189,59.24537979,5.715208817000001,89.96220140000001,maize,35.37,9225.97,0.51,0
72,60,25,18.52510753,69.0276233,5.773454729,88.10234397,maize,49.85,8371.95,0.9,0
67,51,24,23.50297882,61.32026065,5.584171461,64.77791424,maize,50.14,6857.47,0.93,0
86,36,24,26.54986394,72.89187265,5.787268394,73.33636055,maize,36.74,4989.7,0.51,0
76,48,18,19.29563411,69.63481219,5.77597783,83.21030571,maize,68.22,5128.99,0.56,0
75,53,18,20.68899915,59.4375337,6.864793607,103.651438,maize,42.28,7327.24,0.63,0
81,45,23,19.32666088,68.03449300000001,6.192360002999999,84.22969177,maize,36.56,7000.44,0.37,0
73,45,21,24.60532218,73.58868502,6.636803222999999,96.59195302,maize,32.04,4944.13,0.72,0
71,35,24,22.27373646,59.52193158,5.826426917,67.96704792,maize,67.57,6021.22,0.64,0
96,54,22,25.70196694,61.33450447,6.960358276,83.20711308,maize,45.26,3283.22,0.85,1
99,39,18,19.20129357,68.30578978,6.11275104,87.85092352,maize,66.22,2595.58,0.76,0
62,48,20,21.70181447,60.47470519,6.708446922,95.71388473,maize,60.74,8489.33,0.46,0
86,37,16,20.51716779,59.21235483,5.561510732,67.61013737,maize,56.59,1726.31,0.49,0
94,50,19,23.30355338,73.62548442,5.873242491,97.59081274,maize,50.39,3638.1,0.81,0
76,39,24,24.2547451,55.64709899,6.995843776,64.23845455,maize,51.97,6109.23,0.81,0
77,52,17,24.86374934,65.7420046,5.714799723,75.82270467,maize,66.94,3603.61,0.77,0
74,39,23,22.6265115,65.77472881,6.78073637,88.17251033,maize,48.53,2026.49,0.97,0
81,49,20,18.04185513,60.61494304,5.513697923,104.2321615,maize,44.9,3067.73,0.37,0
63,42,21,23.26237612,72.33125523,5.798423907999999,67.10225139,maize,55.02,5434.77,0.58,0
99,38,21,22.88330922,71.59722446,6.352471866,67.72777298,maize,49.52,6157.58,0.9,0
90,52,25,25.97482359,69.36385721,6.822586546,103.2234212,maize,43.74,4941.15,0.47,1
68,40,19,26.14384005,66.20569924,6.655426355,107.2361366,maize,58.32,6144.87,0.34,1
60,57,24,18.66116213,61.55327249,6.1212940410000005,75.03247667,maize,60.14,4638.5,0.76,0
71,52,18,25.10787449,55.97732754,5.790770202999999,78.16077693,maize,40.98,3910.03,0.83,1
61,59,17,23.33844615,59.24580604,6.47444292,105.0083144,maize,56.6,3569.98,0.38,0
88,38,15,25.08239719,65.92195844,6.455116637000001,62.49190812,maize,61.48,3584.66,0.32,1
65,60,22,25.36768364,72.52054555,6.6069840860000015,107.9124111,maize,53.06,3019.15,0.84,1
78,37,22,25.34217103,63.31801994,6.330554389,74.52082026,maize,59.91,5819.06,0.9,1
78,58,15,25.00933355,67.816568,6.5286312660000005,62.91359494,maize,31.4,3107.85,0.89,0
92,60,23,18.66746724,71.516474,5.721667141,69.93293255,maize,64.21,5732.11,0.74,0
79,59,17,20.37999665,63.73849998,6.644205485,108.5054416,maize,43.92,6295.84,0.88,0
91,55,15,18.09300227,72.61024172,6.376651091,78.96159541,maize,47.0,6408.25,0.73,0
76,51,18,26.16985907,71.96246617,6.247040422,79.84925393,maize,46.96,9595.28,0.37,1
87,48,25,18.65396672,61.37879671,6.656730007999999,93.62039175,maize,33.5,8415.19,0.7,0
71,60,22,26.07470121,59.37147589,6.2048017,85.75692395,maize,38.5,2119.78,0.72,0
90,57,24,18.92851916,72.80086137,6.158860284,82.34162918,maize,56.67,7886.17,0.93,0
67,35,22,23.30546753,63.24648023,6.385684213999999,108.7603001,maize,54.71,9418.49,0.48,0
60,54,19,18.74826712,62.49878458,6.417820493,70.23401597,maize,37.19,9158.39,0.62,0
83,58,23,19.74213321,59.66263104,6.381201909,65.50861389,maize,57.51,6756.29,0.47,0
83,57,19,25.73044432,70.74739256,6.877869005,98.73771338,maize,61.8,1901.34,0.79,1
40,72,77,17.02498456,16.98861173,7.485996067,88.55123143,chickpea,47.17,9515.81,0.96,0
23,72,84,19.02061277,17.13159126,6.920251378,79.92698081,chickpea,45.95,2328.76,0.76,0
39,58,85,17.88776475,15.40589717,5.9969320370000005,68.54932919,chickpea,47.85,6129.71,0.39,0
22,72,85,18.86805647,15.65809214,6.391173589,88.51048983,chickpea,41.01,3644.82,0.65,0
36,67,77,18.36952567,19.56381041,7.152811172000001,79.26357665,chickpea,53.36,3741.31,0.63,0
32,73,81,20.45078582,15.40312102,5.988992796000002,92.68373702,chickpea,66.73,3996.86,0.9,0
58,70,84,20.6543203,16.60820843,6.231049027999999,74.6631118,chickpea,41.59,3078.36,0.92,0
59,70,84,17.3348681,18.74926979,7.550808267000001,82.61734721,chickpea,42.57,3159.3,0.71,0
42,62,75,18.17912258,18.90426935,7.010570541,81.84997529,chickpea,42.61,6461.11,0.57,0
28,74,81,18.01272266,18.30968112,8.753795334,81.98568791,chickpea,43.65,6413.6,0.42,0
58,66,79,20.99373558,19.33470387,8.718192847000001,93.55280105,chickpea,34.18,7029.37,0.87,0
43,66,79,19.46233971,15.22538951,7.976607593,74.58565097,chickpea,62.61,5476.22,0.96,0
58,63,81,19.81344531,14.69765308,6.515499548999999,78.96514709,chickpea,60.11,7045.94,0.62,0
23,62,85,18.97424756,19.5161216,8.490127142,80.7108745,chickpea,46.11,8713.32,0.88,0
27,62,77,18.19737048,14.71070537,6.576415562,70.18185181,chickpea,64.2,5640.21,0.9,0
28,72,84,18.72963144,19.18197264,6.481783042999999,71.58010169,chickpea,56.34,2890.25,0.91,0
50,56,76,20.99502153,19.8601304,7.966605025,73.50734019,chickpea,60.31,7965.49,0.33,0
39,71,84,20.28155898,16.39535215,8.140825437,82.52339655,chickpea,51.18,5251.13,0.73,0
25,78,76,17.48042641,15.7559405,7.228963452,66.96980581,chickpea,36.15,1167.82,0.93,0
31,70,77,20.88818675,14.32313811,6.492546046,90.46228334,chickpea,42.37,1259.46,0.71,0
26,80,83,17.08498521,16.14565756,7.528599957000001,71.31007253,chickpea,54.38,2838.18,0.93,0
25,68,77,20.09340593,15.11279612,7.701446446,85.74904898,chickpea,66.89,8718.76,0.64,0
31,78,76,17.57212145,14.99927489,8.519975748,89.31050665,chickpea,49.2,4267.93,0.89,0
60,68,83,19.12065218,18.43475844,6.620900869,85.52950164,chickpea,50.52,8422.39,0.53,0
59,62,83,18.57665902,19.22008229,8.104396057999999,72.94940441,chickpea,46.29,2132.38,0.86,0
22,67,78,17.16606398,14.42457525,6.204090835,72.32667516,chickpea,59.37,4174.54,0.44,0
36,65,80,18.2872007,16.67921616,6.051091339,74.87445574,chickpea,64.35,9044.37,1.0,0
59,60,84,19.03025305,18.66725565,7.690962337999999,94.70992037,chickpea,41.89,4972.71,0.42,0
54,77,85,17.141861399999996,17.0662427,7.8292111439999985,83.74606679,chickpea,46.36,4615.09,0.38,0
43,68,81,17.47809436,17.93253975,6.761599706,78.92060234,chickpea,59.2,8472.66,0.79,0
28,76,82,20.56601874,14.25803981,6.654425315,83.75937135,chickpea,32.01,5726.7,0.4,0
42,79,85,17.22385224,15.82069268,6.129533877,76.57580954,chickpea,58.31,5139.16,0.82,0
32,60,83,19.69141713,19.44225438,8.829273328,91.76071648,chickpea,31.97,4700.5,0.7,0
22,78,76,17.84851658,19.09172907,8.621662982,76.32470713,chickpea,64.81,4139.35,0.6,0
31,79,75,18.8202251,16.1074793,8.204862075,89.73119396,chickpea,58.37,8962.97,0.66,0
28,58,81,17.47500984,16.54314829,6.18042747,93.35034262,chickpea,38.39,9336.84,0.96,0
57,58,77,18.72649425,17.58406365,7.978996755,81.20176515,chickpea,65.25,6901.59,0.44,0
49,55,78,18.65580107,16.17772668,7.863113671,81.70769297,chickpea,52.7,1813.25,0.64,0
46,76,77,18.2356751,19.68538502,6.967843048,83.74879344,chickpea,45.4,7307.02,0.32,0
54,61,77,18.81198127,15.21618225,6.206582192999999,77.54294240000002,chickpea,60.12,1006.09,0.36,0
38,60,76,18.65054116,17.80852431,8.868741443,77.92798682,chickpea,65.11,8727.97,0.4,0
59,55,79,20.36720401,16.89574311,8.766128654,82.2545577,chickpea,52.75,7062.87,0.76,0
36,76,75,18.38120357,16.63805158,8.736337905,70.52056697,chickpea,50.55,8608.43,0.39,0
57,68,81,17.17012591,17.30457712,8.081095263,72.78624223,chickpea,33.61,7914.13,0.3,0
35,66,81,19.37101121,15.77458129,6.138243973,85.24819851,chickpea,57.84,6369.53,0.4,0
35,64,78,17.92845928,14.27327988,7.496645259,85.37378769,chickpea,32.81,8669.81,0.98,0
52,60,79,19.45339934,18.23490739,8.380185271,75.6317566,chickpea,36.44,2444.56,0.8,0
27,76,83,19.12829388,14.92241479,6.289614016,89.61857826,chickpea,32.91,3754.18,0.49,0
57,60,84,19.1034283,17.26184541,6.586777189,75.49101167,chickpea,64.26,3543.12,0.39,0
52,68,78,17.48504075,16.96070581,6.89655198,86.05078037,chickpea,60.93,1251.09,0.79,0
43,79,79,19.40751744,18.98030507,7.8067476560000015,80.25064637,chickpea,57.9,4115.7,0.34,0
44,74,85,20.18649426,19.63719995,7.150681303,78.26039559,chickpea,66.96,9220.69,0.35,0
24,55,78,17.30287885,15.15405941,6.64919573,75.57790384,chickpea,30.62,6935.73,0.9,0
29,77,75,17.50361137,15.48083156,7.778591617999999,72.9446671,chickpea,38.39,4240.54,0.58,0
20,60,78,18.17234999,14.70085967,6.358740355,90.7760707,chickpea,52.97,3226.25,0.4,0
56,67,78,17.57445618,16.71826572,8.255450758,77.81891424,chickpea,43.85,8504.22,0.81,0
37,66,85,20.93175255,18.91295403,6.456148474,78.06910795,chickpea,30.45,8434.99,0.79,0
49,71,76,19.71098332,17.63879418,6.613072145,85.57925437,chickpea,61.35,4661.75,0.63,0
59,69,80,19.07937684,17.86754927,8.165359297,69.40619137,chickpea,42.28,9705.61,0.62,0
20,79,77,18.54988627,16.02542689,7.64867466,76.32565249,chickpea,61.99,8905.34,0.55,0
24,56,85,18.19903647,17.41333199,6.545888558,80.6405403,chickpea,59.96,2106.9,0.39,0
51,72,75,18.88852533,14.99451145,7.1042247970000005,80.11133840000002,chickpea,55.27,9110.92,0.93,0
57,73,85,18.49311205,14.72115044,7.358099622,91.94595352,chickpea,47.47,6811.19,0.68,0
22,64,82,19.48974337,17.17260319,6.4740245000000005,87.51312796,chickpea,50.22,9530.06,0.86,0
52,73,79,17.25769499,18.74943955,7.840339388999999,94.00287214,chickpea,55.5,3508.09,0.92,0
29,75,75,19.62416326,18.71483156,7.064790365,88.4585692,chickpea,45.87,5534.78,0.73,0
44,59,78,20.67526473,19.85388984,7.599033472,84.78344008,chickpea,42.31,2637.34,0.72,0
41,69,82,20.02381489,16.63294455,6.715587232000001,68.97806542,chickpea,67.94,6891.58,0.61,0
52,56,85,20.118744600000007,14.44228303,6.81712422,88.68168643,chickpea,52.63,2925.72,0.69,0
34,76,80,20.65691793,15.84572566,7.985417393,65.23811143,chickpea,36.84,5473.42,0.88,0
42,74,83,19.2582557,14.2804191,7.545258424,65.78042032,chickpea,30.54,9713.69,0.64,0
34,71,79,17.927806,15.85622899,7.728998197,74.63872762,chickpea,33.99,9962.94,0.93,0
27,73,79,19.16288268,15.83500655,7.354973451,82.69766829,chickpea,31.9,4028.82,0.58,0
30,70,79,20.26942271,19.96978871,7.313122235,69.64449182,chickpea,43.85,3888.11,0.5,0
57,57,75,17.09104223,18.25142068,7.785039076,87.27444866,chickpea,36.86,4889.39,0.79,0
27,79,82,17.06579293,17.54024066,6.307004922999999,70.87150577,chickpea,62.11,5956.24,0.35,0
32,71,85,20.62767492,14.44008871,6.4039823160000005,92.06630306,chickpea,47.69,8020.59,0.63,0
31,76,82,20.8248451,17.85057083,7.599279991,79.20509212,chickpea,60.6,5332.52,0.99,0
33,75,84,19.46210401,18.72831993,7.217018459,68.81405149,chickpea,43.7,6809.62,0.51,0
47,80,77,17.18248372,16.42891834,7.561108006,72.85017344,chickpea,34.52,9221.02,0.46,0
54,62,80,17.48911699,16.39055394,7.489545074,79.45758333,chickpea,66.93,4608.56,0.96,0
47,79,78,17.48395377,14.76014523,6.609696734,65.11365631,chickpea,59.0,9217.1,0.69,0
35,57,83,19.48316794,17.44534641,7.476800943,80.4986291,chickpea,55.8,4811.97,0.56,0
53,73,77,19.71359733,18.09665739,7.325451279,73.64476535,chickpea,40.27,1833.53,0.64,0
45,61,78,19.48649305,16.06240074,6.489389282,81.52842690000001,chickpea,31.35,9992.21,0.62,0
37,78,79,19.95264829,14.82633099,7.786366322,88.6810311,chickpea,34.95,2172.49,0.49,0
30,75,81,19.41789736,16.80472243,6.4084378860000015,68.4951189,chickpea,36.64,1900.49,0.78,0
37,55,82,19.45591848,18.02235902,8.423873703,78.44910564,chickpea,67.12,4478.21,0.52,0
53,65,76,20.19137759,16.41998269,8.719960893,77.33795356,chickpea,61.0,8410.2,0.94,0
22,60,85,18.8392908,14.74071856,7.811997977000001,94.78189594,chickpea,62.8,8290.03,0.7,0
60,61,78,20.71219282,19.83643308,6.317153205,94.03659867,chickpea,61.34,2531.0,0.31,0
42,67,77,18.99424448,15.9362937,7.114405288,78.69707199,chickpea,40.92,7186.62,0.44,0
39,76,76,19.96837462,15.57324389,8.135900726000001,69.15759062,chickpea,69.96,6387.61,0.49,0
35,63,76,17.81564548,17.60756635,7.714153037999999,90.82097601,chickpea,48.0,1913.9,0.92,0
30,65,82,20.71424384,15.27824066,7.103798069,76.77888672,chickpea,38.33,3915.74,0.96,0
57,56,78,17.34150229,18.75626255,8.861479668,67.9545435,chickpea,54.04,2737.97,0.57,0
48,65,78,17.43732714,14.33847406,7.861128148,73.0926704,chickpea,35.97,2474.4,0.67,0
36,56,83,18.89780215,19.76182946,7.4526709,69.09512477,chickpea,69.58,2181.76,0.88,0
40,58,75,18.59190771,14.77959596,7.168096055,89.60982451,chickpea,69.13,4982.24,0.32,0
49,69,82,18.31561493,15.36143547,7.26311855,81.78710463,chickpea,48.35,1420.29,0.87,0
13,60,25,17.13692774,20.59541693,5.68597166,128.256862,kidneybeans,58.27,5047.26,0.32,0
25,70,16,19.63474332,18.90705639,5.759237003,106.3598183,kidneybeans,69.78,5466.2,0.58,0
31,55,22,22.91350245,21.33953114,5.873171894,109.225556,kidneybeans,47.87,3207.05,0.66,0
40,64,16,16.43340342,24.24045875,5.926676985,140.3717815,kidneybeans,63.19,3205.65,0.96,0
2,61,20,22.13974653,23.02251117,5.95561668,76.64128258,kidneybeans,57.94,6132.71,0.84,0
26,65,22,17.84806561,18.77621951,5.9499490810000015,143.09841709999995,kidneybeans,53.61,6302.65,0.42,0
17,57,21,19.88394011,20.31564139,5.789214288999999,60.91974792,kidneybeans,34.99,8832.1,0.3,0
26,80,18,19.32509638,23.3334788,5.581021521,104.7783947,kidneybeans,68.13,9920.37,0.78,0
17,59,17,18.416700100000003,23.42829938,5.689858133,132.9801054,kidneybeans,50.94,7774.6,0.4,0
27,59,22,21.81167649,23.20591245,5.794158503999999,130.0608093,kidneybeans,55.24,7607.06,0.66,0
28,58,24,19.72702528,18.28173015,5.748190462999999,143.7630894,kidneybeans,49.69,6932.44,0.42,0
25,57,19,17.15432954,19.87070659,5.566522896,87.99669731,kidneybeans,48.97,8868.46,0.99,0
28,80,17,19.62207826,18.67170854,5.809419584,144.1567454,kidneybeans,44.65,8814.81,0.71,0
25,60,22,21.63149148,21.17919701,5.887263027,134.3649948,kidneybeans,30.34,7560.81,0.76,0
12,78,23,16.06522754,18.72479695,5.99812453,88.06638775,kidneybeans,53.74,5760.68,0.64,0
6,77,25,20.61162204,24.36314135,5.792744849,69.63833855,kidneybeans,62.42,5195.69,1.0,0
22,79,17,21.42451099,20.39659714,5.912289889,116.5206923,kidneybeans,50.11,1476.86,0.32,0
27,80,15,19.07096165,21.21092266,5.7883869510000014,86.21917578,kidneybeans,36.15,8631.04,0.42,0
10,55,23,21.18853178,19.63438599,5.728233081,137.1948633,kidneybeans,50.63,4759.41,0.97,0
23,65,20,23.0429097,22.42610972,5.833940084,108.3684316,kidneybeans,39.97,9540.69,0.93,0
19,78,16,20.65375833,23.10538637,5.967533236,67.71768947,kidneybeans,54.03,5552.71,0.92,0
19,65,25,18.09551014,18.29318436,5.6250964460000015,144.7902323,kidneybeans,64.42,1293.27,0.72,0
22,70,19,18.23775702,21.07643273,5.515615023,69.44951585,kidneybeans,40.11,7085.42,0.99,0
37,64,22,17.48189735,18.8251973,5.954665349,121.9401369,kidneybeans,31.04,3576.25,0.8,0
11,71,17,19.9191786,21.47324158,5.74644777,82.68554379,kidneybeans,62.85,4935.46,0.89,0
18,79,20,20.27514686,23.2353604,5.877347515,139.7521543,kidneybeans,41.43,1469.18,0.73,0
21,63,17,15.77370214,19.2303162,5.979973965,108.3441414,kidneybeans,46.5,8278.25,0.35,0
24,80,22,16.71170642,19.17651433,5.635993966,96.77285817,kidneybeans,41.84,3578.29,0.81,0
34,60,22,17.66148158,18.15302753,5.635231778,100.6711761,kidneybeans,59.82,5857.77,0.7,0
16,75,21,18.50692825,23.61670065,5.679224346,87.05132890000002,kidneybeans,44.02,1902.05,0.75,0
17,77,23,24.51324787,20.81527638,5.670062975,64.19497947,kidneybeans,58.83,5510.25,0.83,0
37,72,18,18.87614998,24.54038287,5.724242065,105.4120514,kidneybeans,54.79,7625.08,0.89,0
40,73,20,21.59343016,20.31871249,5.811314232000001,61.13872036,kidneybeans,62.6,6657.53,0.67,0
9,77,17,20.12373284,24.45202552,5.783425416,106.158201,kidneybeans,64.81,9992.4,0.53,0
1,62,23,15.43546065,18.37477907,5.607808432000001,139.0302034,kidneybeans,61.71,8790.77,0.55,0
33,59,22,22.64236876,21.59396123,5.946999529,122.3886015,kidneybeans,32.97,9579.71,0.9,0
23,59,19,21.98560799,24.87304788,5.852046999,129.5650601,kidneybeans,38.81,3334.17,0.72,0
6,62,22,20.53052663,18.09224048,5.824090984,120.4509288,kidneybeans,33.56,5771.81,0.94,0
25,63,20,15.78601387,21.14544088,5.502999119,95.17028129,kidneybeans,44.9,6470.93,0.71,0
7,79,23,19.6365349,19.68751084,5.821649914,96.65888933,kidneybeans,48.13,9083.39,0.44,0
8,72,17,20.57341244,19.7520218,5.711439256,87.87869161,kidneybeans,63.09,8464.59,0.96,0
27,64,15,20.16080524,24.84207559,5.514927264,138.2362122,kidneybeans,50.32,1454.94,0.37,0
28,66,23,21.53989176,24.25386207,5.99616119,120.6913038,kidneybeans,46.72,8000.58,0.36,0
32,57,18,15.53834801,23.75560241,5.695422862999999,107.3850593,kidneybeans,37.42,8080.71,0.37,0
27,56,22,19.91853092,20.70099804,5.833010957999999,108.6434544,kidneybeans,37.77,3624.13,0.47,0
17,77,24,20.76952209,18.93146941,5.568456899,109.0193712,kidneybeans,66.33,2925.72,0.65,0
0,65,15,23.46168338,23.22197648,5.645435626,95.84253438,kidneybeans,37.15,4205.99,0.79,0
13,72,21,24.32116642,21.0278674,5.821194486,60.27552528,kidneybeans,31.41,5433.56,0.98,0
34,60,23,20.12574053,24.96969858,5.659254981,100.0497183,kidneybeans,69.76,3796.06,0.83,0
9,80,19,21.80619564,18.57086554,5.945465949,125.0972687,kidneybeans,69.56,9746.16,0.32,0
11,72,20,19.52226241,24.92607153,5.9511774520000005,113.334026,kidneybeans,48.16,7477.18,0.64,0
3,67,24,17.00067625,19.90790546,5.520880013999999,103.2926407,kidneybeans,67.33,4375.08,0.99,0
35,69,23,16.78791503,24.96881755,5.578410206,75.45328039,kidneybeans,65.33,3911.93,0.37,0
3,77,25,24.84906168,22.89464642,5.608165195,62.21292186,kidneybeans,67.64,3990.4,0.88,0
23,62,19,16.51783455,20.4555596,5.609435127999999,98.77794225,kidneybeans,37.56,4404.28,0.71,0
22,71,17,18.15300153,19.38602098,5.509295379,107.6907964,kidneybeans,49.55,2746.18,0.64,0
31,79,25,23.18864385,22.3104551,5.902033406,63.38208822,kidneybeans,69.24,3609.32,0.31,0
34,59,18,23.38002569,21.98879437,5.744117663,87.66898664,kidneybeans,32.28,3764.39,0.43,0
12,63,17,18.358923,19.37703396,5.717143397,138.414764,kidneybeans,64.66,3626.07,0.4,0
27,56,20,19.25975367,20.51346956,5.542690119,94.9533526,kidneybeans,67.46,7263.23,0.36,0
7,63,24,22.95458237,24.03553105,5.858617867,107.7315386,kidneybeans,40.28,1193.55,0.51,0
24,67,22,20.120043,22.89845607,5.618844277000001,104.6252153,kidneybeans,66.81,7958.33,0.53,0
11,71,24,21.14011423,22.7182355,5.6066203460000015,141.6056722,kidneybeans,35.03,6665.92,0.71,0
37,74,15,24.92360104,18.22590825,5.582178402,62.7089169,kidneybeans,32.57,3239.97,0.47,0
25,76,24,15.33042636,24.91506728,5.56503533,135.3315583,kidneybeans,38.67,1561.66,0.6,0
34,66,17,18.81097271,21.27833035,5.889614577000001,125.084915,kidneybeans,55.54,1833.75,0.7,0
20,69,15,23.44260668,22.77255917,5.934136378,107.4137246,kidneybeans,43.52,1676.5,0.48,0
37,65,16,22.8352024,18.97267518,5.683548308,63.59276673,kidneybeans,67.51,8802.52,0.52,0
18,74,15,24.9035819,22.27512704,5.70836603,146.4727237,kidneybeans,33.96,8835.45,0.5,0
4,67,25,23.78709569,24.35679348,5.948164454,119.6404412,kidneybeans,66.16,2800.63,0.54,0
37,56,25,22.05592283,19.60379304,5.774755143999999,126.7265372,kidneybeans,39.44,7796.2,0.39,0
5,59,15,18.87492997,20.18238348,5.97229163,134.1811718,kidneybeans,33.8,1109.35,0.68,0
11,61,21,18.62328774,23.02410338,5.532100554,135.33780330000002,kidneybeans,46.62,2875.91,0.54,0
22,80,20,23.00884744,18.86880997,5.669560726,100.118612,kidneybeans,40.06,8853.27,0.77,0
12,61,19,19.33162606,24.13995025,5.655726817000001,68.51253427,kidneybeans,65.36,2055.85,0.79,0
5,74,21,16.24469193,21.35793891,5.591704013999999,66.97053257,kidneybeans,66.84,7054.67,0.38,0
27,69,22,17.91652287,24.90814655,5.932323085,69.14681022,kidneybeans,30.31,3207.75,0.9,0
31,75,18,15.46789263,21.43780702,5.824208308999999,88.88796102,kidneybeans,62.11,4525.72,0.54,0
36,68,20,17.06104474,23.77201471,5.86442953,81.83420522,kidneybeans,64.09,3483.48,0.37,0
5,65,16,21.32776028,18.48522915,5.866744372,109.1013261,kidneybeans,69.66,8501.22,0.79,0
32,79,15,23.90910104,20.74619325,5.706198621,81.60211243,kidneybeans,56.98,1845.44,0.97,0
11,78,22,23.89756791,22.74378977,5.940546818,112.6616435,kidneybeans,30.29,5295.67,0.52,0
0,55,22,22.98666928,20.57940608,5.916779289,143.85849380000005,kidneybeans,67.87,2079.38,0.41,0
14,59,15,21.35135729,22.91244883,5.779090476,146.4548645,kidneybeans,65.07,8922.86,0.54,0
29,68,23,24.1638445,19.27907819,5.82738029,116.7324324,kidneybeans,37.3,2251.53,0.46,0
32,68,19,24.62835037,18.18325169,5.514234138,149.7441028,kidneybeans,43.57,8639.23,0.64,0
17,64,17,21.02213209,24.93896255,5.662699104,124.6118471,kidneybeans,56.56,6924.64,0.92,0
13,69,19,17.30844532,20.01730914,5.86390397,115.199245,kidneybeans,64.85,3529.07,0.54,0
14,67,22,23.82576704,24.75485098,5.624690247999999,84.64143632,kidneybeans,47.13,6240.05,0.86,0
9,69,20,19.30607278,23.96362799,5.591560999,129.3449326,kidneybeans,44.51,4193.78,0.76,0
20,73,22,16.03768615,22.33195853,5.976312537999999,130.3900798,kidneybeans,56.85,5234.41,0.34,0
40,78,20,19.18572809,20.83398341,5.669236258,80.15293435,kidneybeans,64.18,6956.38,0.62,0
27,72,23,19.92889503,21.79992115,5.961934481,64.02640797,kidneybeans,67.46,4214.37,0.36,0
14,67,15,19.56376468,24.67385131,5.690065688,139.2921004,kidneybeans,50.62,9865.14,0.37,0
7,56,18,18.31357543,24.32991649,5.698371311,76.14153904,kidneybeans,57.54,6601.86,0.91,0
27,65,18,20.10993761,23.22323766,5.59503163,73.36386477,kidneybeans,43.0,1325.6,0.71,0
30,63,16,23.60506572,21.90539577,5.5259045260000015,100.5978728,kidneybeans,48.36,6707.32,0.98,0
37,70,25,19.73136909,24.89487354,5.819403771,84.06354115,kidneybeans,35.52,8876.59,0.38,0
27,63,19,20.93409877,21.1893007,5.562201934,133.1914419,kidneybeans,31.17,8095.7,0.49,0
22,60,24,18.78226261,20.24768314,5.630664753,104.2570723,kidneybeans,37.29,9458.74,0.81,0
3,72,24,36.51268371,57.92887167,6.03160778,122.6539694,pigeonpeas,41.95,2165.22,0.68,1
40,59,23,36.89163721,62.73178224,5.269084669,163.7266551,pigeonpeas,52.81,3947.05,0.39,1
33,73,23,29.23540524,59.38967583,5.985792703,103.3301803,pigeonpeas,45.35,5417.58,0.94,1
27,57,24,27.33534897,43.35795962,6.09186275,142.33036769999995,pigeonpeas,55.26,5239.41,0.95,1
10,79,18,21.0643684,55.46985938,5.624731337999999,184.6226709,pigeonpeas,68.51,8150.61,0.57,0
30,75,25,30.33276599,42.35249879,6.446091759,149.299952,pigeonpeas,44.36,4709.41,0.32,1
40,70,20,31.80130272,45.03186173,5.623490042999999,147.03614419999997,pigeonpeas,69.97,3746.23,0.38,1
38,55,19,33.18184225,38.23184742,5.864623352000001,198.8298806,pigeonpeas,68.9,2626.57,0.68,1
35,58,20,29.38538562,63.47742011,5.761702519,90.05422663,pigeonpeas,66.15,4347.11,0.46,1
38,61,21,30.27374995,67.38680755,4.696518678,127.7767134,pigeonpeas,46.25,3403.14,0.81,1
33,58,24,35.45790488,68.75810535,5.269504214,108.6333046,pigeonpeas,39.03,3388.15,0.45,0
16,56,17,33.80020039,40.03262418,7.445444882999999,176.6165894,pigeonpeas,49.0,1914.56,0.54,1
31,72,17,28.69180475,49.47225353,5.833031707999999,96.36222901,pigeonpeas,55.74,7046.24,0.67,1
16,80,20,31.24021696,56.67369054,7.3393209289999986,122.0146733,pigeonpeas,34.05,6189.19,1.0,0
27,72,17,28.98039357,57.23265151,6.347929353,120.7435664,pigeonpeas,53.65,1362.23,0.7,1
40,62,19,27.32198928,34.13737127,4.697750704,96.51524028,pigeonpeas,64.29,6847.44,0.6,1
18,58,16,21.47607807,38.80023714,4.962661422,180.382234,pigeonpeas,67.65,2921.52,0.39,0
3,68,16,18.31910448,34.69776639,4.964887857,107.4721605,pigeonpeas,31.98,2845.9,0.34,0
26,67,24,36.97794384,37.73992903,5.642813116,161.48129630000005,pigeonpeas,69.0,6838.02,0.93,1
16,70,20,24.80467592,40.1242747,5.6093956,121.5639121,pigeonpeas,41.29,9029.53,0.93,0
24,63,19,19.3479443,55.96805489,4.681576043,194.5921148,pigeonpeas,33.39,4040.41,0.36,0
9,76,25,28.88302142,50.12323801,5.70951224,179.2155874,pigeonpeas,30.46,1460.97,0.31,0
16,55,19,19.54314136,47.19188279,6.413543781,192.4372194,pigeonpeas,65.08,3475.74,0.5,0
28,75,21,24.7741949,50.54621094,6.007508163,114.2821387,pigeonpeas,34.21,2825.21,0.37,0
16,71,24,18.33124824,38.40975482,4.946369874,139.64833169999997,pigeonpeas,52.48,9903.51,0.85,0
24,70,21,19.14729038,45.3733757,5.517208078,132.7748215,pigeonpeas,66.38,7934.58,0.59,0
38,72,21,28.23416057,49.4421345,5.902103172,186.5008581,pigeonpeas,68.35,6406.22,0.38,1
9,66,21,30.11812084,34.13307843,5.719889876,157.0858232,pigeonpeas,63.1,5620.42,0.45,1
34,56,17,33.4126864,35.42910045,4.548202098,139.6702541,pigeonpeas,51.66,6428.66,0.54,1
1,76,19,24.18553163,46.68746847,6.6695294160000005,177.3377996,pigeonpeas,55.27,9015.95,0.45,0
6,69,19,26.88630675,41.69617915,4.7509292180000005,94.46748008,pigeonpeas,56.55,2961.18,0.41,1
26,73,21,31.33170829,57.97429171,4.946263888,161.7820226,pigeonpeas,33.85,1188.82,0.47,0
27,61,18,33.30711818,67.07780816,5.266227032,108.5090168,pigeonpeas,37.88,3720.88,0.71,0
27,71,23,23.45379018,46.48714759,7.10959773,150.87122019999995,pigeonpeas,58.85,8608.72,0.8,0
36,61,21,34.53823889,39.04468913,5.617008201,168.5948318,pigeonpeas,33.42,6736.43,0.41,0
17,73,18,19.50112224,34.51086611,5.632353113,197.3752649,pigeonpeas,66.97,6569.05,0.5,0
26,72,22,28.76794904,37.57792132,4.674941549,91.72084869,pigeonpeas,60.75,6495.7,0.76,1
17,64,16,30.97758716,32.24914235,7.161797643,180.716828,pigeonpeas,45.64,6679.89,0.45,1
14,74,19,18.39759147,36.82639309,6.624966131,93.12330644,pigeonpeas,64.5,1879.25,0.37,0
39,60,15,35.09357419,30.98685456,5.004074623999999,116.9106908,pigeonpeas,61.19,3179.96,0.82,1
6,66,15,34.93174223,30.40046769,6.3458060110000005,159.2649827,pigeonpeas,35.14,3221.22,0.94,0
8,59,18,29.50523036,35.72032498,6.216814453,187.8961851,pigeonpeas,59.36,8275.23,0.72,1
2,67,18,34.51934775,47.52980027,5.921666758,129.0064612,pigeonpeas,63.76,9000.9,0.43,1
1,76,17,28.43430726,52.10010827,6.012719118,147.0414824,pigeonpeas,32.55,4109.01,0.66,0
16,73,19,18.41645629,34.80541039,4.684079249,163.27474730000003,pigeonpeas,54.02,4659.47,0.41,0
23,75,25,31.07508973,47.19847683,7.077170002000001,91.31256412,pigeonpeas,49.52,6990.24,0.7,1
32,70,20,20.89342749,46.24856523,6.208843215,195.5697875,pigeonpeas,34.51,3001.11,0.36,0
28,59,22,30.90607799,52.79913039,7.05181629,170.99198280000005,pigeonpeas,48.56,3527.56,0.85,1
5,62,23,27.9348279,66.45457122,4.722222454,145.3728801,pigeonpeas,59.79,8225.12,0.56,1
36,67,25,35.95176642,36.52780776,6.418062652000001,136.0456753,pigeonpeas,35.58,5207.35,0.56,0
1,66,23,19.54317155,56.92831399,4.803564468,173.1686574,pigeonpeas,53.32,5592.25,0.63,0
24,73,20,19.63736208,32.31528909,4.608695247,176.4134092,pigeonpeas,38.42,6004.77,0.88,0
17,67,18,31.2192752,56.46868874,5.611510977000001,129.20286529999998,pigeonpeas,46.14,2917.17,0.33,1
5,55,18,33.50876355,45.70976142,7.322097972000001,126.6738117,pigeonpeas,69.7,9572.36,0.52,1
5,56,24,24.80710166,45.01110015,5.023115055,188.4928637,pigeonpeas,39.51,5868.34,0.76,0
37,77,17,36.20970524,31.94550613,5.617122801,191.0658531,pigeonpeas,68.17,4097.04,0.95,1
13,73,20,30.50420876,35.48885969,5.391560417999999,162.59277230000004,pigeonpeas,32.84,5642.32,0.51,0
6,63,23,26.01630259,49.94704718,5.906596905,160.33374469999995,pigeonpeas,67.89,7691.41,0.99,1
16,77,22,31.48469278,35.6395615,6.574209678,100.546816,pigeonpeas,42.99,5189.72,0.56,1
25,64,20,33.15122581,32.45974539,4.807776748999999,105.03802749999998,pigeonpeas,67.56,9224.92,0.81,1
34,75,24,23.50222822,51.29019509,4.760038038999999,192.3023991,pigeonpeas,52.57,3961.92,0.88,0
20,77,23,34.87248659,38.83786012,5.180271502,148.25027859999997,pigeonpeas,56.77,6312.01,0.86,1
35,80,25,28.09269012,44.93322042,4.895927306,197.1144011,pigeonpeas,35.05,3911.81,0.86,0
14,75,24,24.54757829,57.3414485,6.436160044,118.3606557,pigeonpeas,50.62,5818.98,0.55,0
36,80,21,33.64769646,48.41490082,7.066087261,100.4673278,pigeonpeas,59.68,6256.09,0.49,1
7,77,18,20.5591255,60.54880693,6.655918077999999,191.0895109,pigeonpeas,43.78,5711.59,0.79,0
29,78,25,19.95991719,59.33157782,5.982854522999999,195.787103,pigeonpeas,36.73,6693.7,0.46,0
30,60,21,28.87667593,62.4901206,5.457871272999999,182.2688175,pigeonpeas,47.52,7561.0,0.82,1
20,74,16,36.04353699,43.61444121,4.759490199,159.8938645,pigeonpeas,47.33,4679.03,0.81,1
19,57,23,23.6734328,47.2879691,7.342409555,141.12507219999995,pigeonpeas,50.46,9275.56,0.71,0
3,60,19,25.74679443,40.7192594,4.820788186000001,100.7791633,pigeonpeas,56.8,4576.05,0.54,1
5,77,19,31.08564994,66.68832981,6.242052013,175.9303271,pigeonpeas,34.4,4249.05,0.59,0
5,68,20,18.72987676,61.33186249,5.001038726,139.8710041,pigeonpeas,42.73,8477.63,0.99,0
37,73,21,29.50304807,63.46513414,5.560224582999999,189.5208915,pigeonpeas,37.43,5227.16,0.43,0
9,59,24,20.43517772,39.37252634,4.747352458,137.22796619999997,pigeonpeas,63.08,1415.92,0.73,0
20,72,15,36.00415838,56.01334416,7.313517308,134.8596466,pigeonpeas,56.9,2006.24,0.64,1
31,56,23,31.46846241,35.39454002,5.661826398,174.5723999,pigeonpeas,61.81,2510.04,0.35,1
0,70,21,36.30049702,56.03021253,4.672437054,101.6073988,pigeonpeas,30.18,2092.77,0.35,0
21,74,15,29.49096726,67.10604388,6.471862118,153.2504506,pigeonpeas,44.27,9417.69,0.37,1
13,67,18,30.5753044,34.75591197,5.384762927000001,177.5764304,pigeonpeas,55.48,3474.68,0.43,1
27,74,20,24.69487673,59.96669215,5.8598134160000015,91.95792434,pigeonpeas,38.1,2416.32,0.77,0
29,72,24,23.17409556,36.67847052,6.962386495,162.5931264,pigeonpeas,56.59,8252.62,0.53,0
5,68,20,19.04380471,33.10695144,6.12166671,155.3705624,pigeonpeas,34.04,3169.43,0.91,0
39,57,19,29.32379604,45.93248374,6.421748487,165.4113371,pigeonpeas,55.91,7234.92,0.75,1
22,62,16,34.6455408,54.32342534,4.828936119,180.9009998,pigeonpeas,66.09,2356.04,0.54,1
18,55,23,21.9989826,56.31006755,6.98571967,136.82743119999998,pigeonpeas,47.85,4147.68,0.84,0
39,77,21,22.99774444,60.24218572,4.603563116,159.689339,pigeonpeas,47.16,8154.54,0.35,0
13,75,20,30.55992394,35.29006485,6.979540061,178.8998611,pigeonpeas,45.49,5120.72,0.72,1
27,71,24,31.46417866,48.17631461,7.064973419,165.40535400000005,pigeonpeas,58.62,2786.53,0.31,1
26,64,22,25.95058595,40.58227261,5.16516459,109.1821183,pigeonpeas,33.56,5133.55,0.47,0
23,55,16,21.01142393,69.69141302,5.111488821,185.2039114,pigeonpeas,31.82,1238.87,0.73,0
4,69,19,19.25100056,47.70351758,5.374358869,149.063196,pigeonpeas,58.57,8756.13,0.39,0
20,67,19,19.24462755,50.54495302,5.671419084,180.6465282,pigeonpeas,59.23,4900.1,0.37,0
7,74,17,22.47253208,62.56532471,5.667419697000001,96.74706956,pigeonpeas,36.18,1712.08,0.69,0
17,64,18,36.75087487,58.25799145,6.07938452,124.6028153,pigeonpeas,40.86,7921.06,0.92,1
35,71,17,29.89286629,66.35375127,6.931924962999999,198.1403003,pigeonpeas,57.26,6887.21,0.74,1
11,72,22,29.37735586,44.82294584,6.842744374,172.40168,pigeonpeas,45.2,6171.31,0.79,1
20,60,22,29.65052947,42.89833235,6.876572502999999,186.9226052,pigeonpeas,67.09,2887.05,0.4,1
10,71,18,19.54284889,66.34777265,6.151029296,173.11069819999997,pigeonpeas,51.06,4999.24,0.4,0
33,61,24,20.04611791,48.93905624,4.567446499,122.4564203,pigeonpeas,39.06,7568.08,0.31,0
3,49,18,27.91095209,64.70930606,3.692863601,32.67891866,mothbeans,65.62,6009.92,0.63,1
22,59,23,27.32220619,51.27868781,4.371745575,36.5037914,mothbeans,67.01,9506.41,0.39,1
36,58,25,28.66024187,59.3189118,8.399135957999999,36.92629678,mothbeans,34.69,1026.43,0.75,0
4,43,18,29.02955344,61.09387478,8.840656256,72.98016599,mothbeans,56.63,7890.75,0.72,1
29,54,16,27.78031515,54.65030015,8.153022903,32.05025323,mothbeans,57.63,4405.0,0.64,1
32,43,22,31.99928579,54.1077461,5.270749441,71.6266696,mothbeans,58.6,4674.18,0.63,1
14,55,15,27.33580911,55.27755933,8.050304395,73.44775287,mothbeans,48.07,1845.19,0.97,1
5,35,20,28.92952635,53.57014709,9.679240873,66.35634104,mothbeans,50.74,1975.5,0.98,1
25,57,24,27.65472156,58.59986279,6.974978386,36.94255012,mothbeans,48.5,6292.46,0.92,1
11,53,24,28.52396666,55.77264351,7.39389918,61.32935611,mothbeans,46.51,4148.22,0.32,1
40,49,17,31.02215872,45.89239456,6.68727523,53.56783314,mothbeans,67.97,9030.43,0.74,1
38,56,25,25.74095321,45.38497051,7.88118645,67.43488235,mothbeans,45.75,4788.79,0.3,1
27,43,23,31.70447482,56.85420099,5.875333778,44.94317432,mothbeans,60.0,1780.25,0.63,1
24,38,22,24.47876451,58.51663927,8.202706015,34.96933295,mothbeans,50.66,3611.4,0.47,0
23,45,21,31.46511256,51.79939437,8.985348193,74.44330654,mothbeans,68.55,3548.56,0.8,1
29,57,20,25.60973447,50.7330069,5.87707519,53.39249517,mothbeans,32.89,8124.48,0.38,0
31,35,23,30.30260453,47.18283631,7.707595055,68.04039813,mothbeans,60.7,9666.19,0.5,1
0,55,25,28.17489437,43.6672299,4.524171562,45.78172762,mothbeans,37.61,6335.42,0.35,0
7,45,22,25.50634557,44.8302551,9.926212291,74.32635105,mothbeans,55.64,8064.15,0.4,1
17,58,25,31.12896766,43.58788762,6.455592696,32.76742894,mothbeans,36.44,9798.3,0.48,0
11,44,17,26.34043268,55.59160391,8.016210782,35.1051197,mothbeans,33.22,2918.19,0.87,0
22,49,22,28.23494706,61.5620517,3.71105919,72.66666443,mothbeans,45.99,5498.77,0.84,1
9,51,19,27.04453473,49.32609633,5.49091063,48.25207759,mothbeans,51.28,2204.36,0.5,1
28,48,15,25.16125354,55.25435777,9.254089438,40.89732789,mothbeans,58.69,8868.45,0.55,1
26,50,19,27.3179125,51.66921088,6.005242945,32.55919573,mothbeans,63.81,2297.32,0.98,1
36,56,20,25.4123765,49.66474269,7.437078236,31.87416982,mothbeans,55.57,5828.64,0.45,1
8,60,18,31.21629982,46.01868196,3.808429173,53.1205277,mothbeans,54.86,9272.87,0.48,1
24,37,21,30.573999,58.22686794,5.818219385,62.74803826,mothbeans,68.26,1237.97,0.85,1
22,43,24,25.42517036,53.22082660000001,4.52363558,46.19374559,mothbeans,58.65,2654.56,0.72,1
36,43,24,27.09400578,43.65305437,3.510404312,41.53749535,mothbeans,55.33,3948.68,0.53,1
22,44,24,24.30935081,56.32938343,6.030447288,58.99536268,mothbeans,63.47,4383.52,0.55,0
17,43,22,30.06142622,45.90067655,5.498340807999999,41.0550915,mothbeans,66.98,8648.4,0.42,1
8,45,15,28.09568993,60.98353839999999,4.61136408,33.84110759,mothbeans,31.14,3658.39,0.62,0
7,56,23,26.33908791,40.00933429,5.545219232000001,55.50429227,mothbeans,63.24,3496.71,0.72,1
36,57,16,28.61409059,57.14218792,8.292875733999999,57.02891698,mothbeans,63.04,7644.35,0.53,1
11,45,19,28.70012137,44.359648,3.828031463,44.11622138,mothbeans,43.67,3185.29,0.56,1
6,36,22,24.21610338,59.79236306,8.869532817,42.24783476,mothbeans,33.49,4261.8,0.9,0
17,57,20,28.50677929,45.20094476,3.793575185,66.1761456,mothbeans,64.53,5957.38,0.38,1
4,47,20,25.97948991,64.95585424,4.193189124,72.19245835,mothbeans,44.37,3856.86,0.47,1
9,49,16,30.88482722,41.36561835,7.661537347999999,55.053805,mothbeans,44.87,3020.28,0.86,1
25,51,24,25.5042419,61.66852372,9.392694614,65.07981523,mothbeans,51.18,8947.74,0.32,1
36,44,21,25.12528913,51.33189406,4.516154055,38.48678973,mothbeans,31.68,1164.84,0.98,0
21,38,20,27.10508014,63.56791363,5.794289715,62.20279647,mothbeans,40.79,9636.04,0.92,1
37,57,20,31.1006247,44.82069159,7.354286985,70.79934452,mothbeans,51.2,4650.25,0.48,1
32,48,18,26.45707778,56.40226277,5.993513566,64.16167699,mothbeans,36.7,5032.11,0.98,0
29,44,20,30.04132304,63.56222995,8.620107545,31.83192392,mothbeans,48.28,8104.59,0.39,1
25,51,18,27.77799528,54.82130787,9.45949344,50.28438729,mothbeans,30.2,9315.91,0.31,0
10,44,24,30.99256944,43.02151392,8.0344125,58.27600682,mothbeans,33.25,8191.53,0.81,0
23,35,18,26.4908332,47.36534833,5.414492777,36.99362831,mothbeans,32.3,3736.3,0.53,0
9,60,23,31.96987867,57.17377029,6.2760043360000015,64.25520357,mothbeans,62.05,4599.28,0.76,1
3,58,21,25.36140526,46.82652785,9.160691747,55.60523179,mothbeans,34.7,6851.89,0.62,0
22,42,22,25.54249137,56.96640758,7.887658711,48.46797044,mothbeans,59.58,9246.64,0.73,1
12,39,21,28.99319096,62.85948245,8.183844843,70.4713043,mothbeans,34.72,4525.14,0.65,0
39,36,22,29.34317422,60.50320928,9.072011412,34.03335472,mothbeans,49.49,6896.2,0.92,1
32,41,16,28.63618921,61.39451307,7.702287236,68.54877876,mothbeans,58.68,7038.93,0.83,1
30,41,15,24.83206631,44.17085032,5.88509677,52.0810886,mothbeans,53.98,9252.45,0.43,0
19,36,22,25.44689075,58.55363573,6.16496284,57.04826619,mothbeans,62.97,7330.97,0.92,1
4,46,15,31.01274943,62.40392519,3.504752314,63.77192383,mothbeans,46.3,5212.86,0.46,1
21,39,20,27.06179658,52.3003173,7.388007482999999,60.74583498,mothbeans,44.2,5628.09,0.81,1
35,57,25,27.0956288,42.26206161,8.340398059,71.12710390000002,mothbeans,58.82,8170.78,0.8,1
22,55,24,28.56800579,57.30636014,8.66077954,64.53027638,mothbeans,49.0,8335.44,0.61,1
35,51,17,28.79929247,49.84213387,3.558822825,40.85534718,mothbeans,48.1,6432.94,0.91,1
17,56,17,27.94293692,45.41393636,5.9565851,69.66289997,mothbeans,42.44,6794.62,0.73,1
28,57,17,30.47757686,61.58245338,9.416003106,61.86633917,mothbeans,45.53,7696.8,0.43,1
22,36,16,30.58139475,50.77148138,8.18422855,64.58559639,mothbeans,69.92,2912.01,0.92,1
11,41,19,26.85911286,41.81420849,5.131779302,44.13827124,mothbeans,67.05,8198.46,0.37,1
38,38,18,26.31051759,61.18749126,6.294130312999999,35.73403813,mothbeans,32.37,3860.02,0.73,0
23,37,24,28.77833449,44.2252605,7.991902443,33.95825723,mothbeans,45.59,4088.65,0.71,1
25,35,20,28.90245417,43.35365671,8.923095695,71.90018566,mothbeans,37.28,1293.24,0.58,0
40,45,20,29.37687468,57.69622912,6.878498176,38.34303462,mothbeans,63.06,2025.47,0.8,1
23,58,19,24.17093241,58.25204566,5.243634848999999,59.18953429,mothbeans,30.16,3309.74,0.38,0
2,56,23,26.65333029,59.79023382,7.550090941,36.91852635,mothbeans,68.25,3238.54,0.88,1
3,56,17,28.19912143,53.50567601,8.709291687999999,52.13580529,mothbeans,44.24,1278.86,0.49,1
26,51,25,28.76488954,52.62741529,7.792508067999999,55.21606732,mothbeans,45.97,4597.63,0.63,1
39,42,20,29.3499706,61.25353851,8.055908857999999,40.82840673,mothbeans,39.24,9900.82,0.45,0
27,59,20,28.00937423,52.60950014,4.397698806,36.01203025,mothbeans,68.74,8114.04,0.9,1
24,45,19,26.85851927,48.8246387,5.9523849570000005,34.7426459,mothbeans,39.31,3167.31,0.62,0
7,40,17,31.2123945,40.92604945,8.532078732999999,53.78769958,mothbeans,67.16,8629.06,0.92,1
15,45,23,24.20422636,61.43378674,7.224193642,46.0203959,mothbeans,32.63,5062.16,0.4,0
26,52,23,29.98835437,49.60384796,4.931890506,52.92929636,mothbeans,36.25,5515.92,0.62,0
20,45,16,29.93964907,54.61813464,4.626212446,45.43669946,mothbeans,49.0,6796.51,0.42,1
34,54,24,31.2119298,41.55934359,5.026003659,68.80141783,mothbeans,53.77,8434.25,0.62,1
19,51,25,26.80474415,48.23991436,3.5253661,43.87801983,mothbeans,47.67,1050.11,0.77,1
29,41,21,31.49398069,62.84916863,8.86979671,64.56807592,mothbeans,41.71,6575.46,0.8,1
20,50,22,30.99694676,46.42693735,9.406887533,38.31597852,mothbeans,53.66,8394.61,0.77,1
11,40,23,29.61253065,63.04749127,5.80428611,50.1978269,mothbeans,33.23,6172.03,1.0,0
15,54,15,29.97604322,57.03184356,8.35495812,44.86052932,mothbeans,40.65,5733.33,0.66,1
35,55,22,30.88883074,52.62696801,8.634929739,55.51932414,mothbeans,52.63,4195.39,0.55,1
9,59,25,30.39321309,60.16299493,7.699200949,35.37493212,mothbeans,49.08,8147.22,0.51,1
40,45,18,30.43683729,55.20522037,5.261285926,30.92014047,mothbeans,62.9,5145.11,0.93,1
35,38,19,25.32688786,63.18180319,9.112771682,32.71129281,mothbeans,43.42,3878.43,0.43,1
14,58,17,30.53684308,59.96664731,4.605700542,33.48919022,mothbeans,59.04,4693.26,0.32,1
40,55,18,30.38257873,40.5926071,7.115994051,47.95406479,mothbeans,69.83,3110.34,0.91,1
18,36,23,24.01825377,53.76623369,7.214078621,35.03404425,mothbeans,52.16,1886.36,0.38,0
35,52,15,28.69841277,61.14754363,9.93509073,65.67591794,mothbeans,63.21,8817.59,0.77,1
4,59,22,29.33743412,49.00323081,8.914074888,42.44054315,mothbeans,56.9,4821.61,0.34,1
22,51,16,27.96583691,61.34900107,8.639586199,70.10472076,mothbeans,53.03,4116.8,0.49,1
33,47,17,24.86803974,48.27531965,8.621514073,63.9187654,mothbeans,57.25,8549.84,0.32,0
2,51,17,25.87682261,45.96341933,5.838508699,38.53254678,mothbeans,50.8,6075.62,0.33,1
16,51,21,31.01963639,49.97675220000001,3.532008668,32.81296548,mothbeans,63.49,8445.65,0.97,1
19,55,20,27.43329405,87.80507732,7.18530147,54.73367631,mungbean,54.65,6702.33,0.59,1
8,54,20,28.3340432,80.77275974,7.034214276,38.7976407,mungbean,50.64,1529.75,0.79,1
36,55,20,27.01470397,84.34262707,6.635968697999999,55.296354,mungbean,60.99,4956.58,0.81,1
10,56,16,28.17432665,81.04554836,6.828187498999998,36.35720652,mungbean,55.92,6162.2,0.6,1
22,56,17,29.87888063,87.32761241,6.89077995,44.75215854,mungbean,60.47,8630.24,0.9,1
9,57,24,29.89232778,89.71503316,7.165121108999998,42.99498978,mungbean,43.34,5747.33,0.95,1
34,59,23,28.56212158,83.24855855,6.935804256,56.48265193,mungbean,55.8,9443.63,0.76,1
31,51,25,27.53592929,85.57019009999998,7.196774236,53.01899249,mungbean,56.41,7626.78,0.47,1
0,49,18,29.68361658,87.93598094,6.990095452,41.82490236,mungbean,36.88,7775.11,0.96,0
21,39,20,28.14448546,82.1193047,7.064782137999999,46.75690086,mungbean,46.26,8023.51,0.75,1
28,35,22,29.53037621,86.73346018,7.156563094,59.87232071,mungbean,31.51,2971.89,0.65,0
17,52,17,27.88352946,86.45147631,6.364967184,44.64407105,mungbean,31.04,2706.24,0.55,0
24,42,23,28.22471276,82.35916228,6.428054409,44.01206619,mungbean,43.39,8511.29,0.94,1
28,46,16,29.008124,84.96089355,6.664187809,45.91011391,mungbean,55.72,5502.4,0.97,1
21,38,21,29.75538903,86.45193297,6.637677489,37.54602719,mungbean,60.63,7741.03,0.46,1
34,60,25,29.78416743,85.16906976,6.79385576,40.77872823,mungbean,59.81,1103.41,0.96,1
19,53,22,27.8640132,80.4513142,6.852884642999999,42.83053902,mungbean,61.11,2381.38,0.35,1
31,58,15,27.11026483,84.96771717,7.121571293,51.52617423,mungbean,67.22,5921.1,0.88,1
19,35,24,27.11030369,83.64274107,6.883308033,49.11964582,mungbean,60.72,6072.75,0.68,1
24,53,17,28.95451232,89.07866095,6.421271178,57.65901369,mungbean,68.15,6238.4,0.9,1
13,47,20,29.21780035,87.93724219,6.54450214,43.1386631,mungbean,42.17,7897.12,0.49,1
31,53,16,28.7420098,85.81675947,6.452006451,48.54598575,mungbean,40.22,4298.9,0.89,1
28,45,23,29.65021184,80.29868321,6.489259136,56.76278363,mungbean,56.37,4644.32,0.42,1
31,37,21,27.23924995,86.404241,6.713410626,37.31236904,mungbean,33.46,7356.2,0.57,0
33,60,15,28.95172351,81.67085323,6.510840928,56.51103293,mungbean,47.96,3144.11,0.47,1
34,45,21,28.18837136,82.60629652,6.2873801170000005,37.01110438,mungbean,30.31,7187.34,0.42,0
13,57,25,28.30041493,86.20681554,6.86308576,50.47333854,mungbean,56.73,6366.62,0.7,1
33,57,17,27.89636126,88.71782287,6.78415271,57.79863368,mungbean,68.1,8879.74,0.6,1
32,57,22,28.6899851,87.50436797,6.769415887999999,44.56598352,mungbean,35.04,9861.54,0.99,0
23,59,25,27.826262300000003,88.73100226,6.320768488,56.68833819,mungbean,58.26,2954.75,0.59,1
35,41,18,28.70562673,81.59200689,6.705008503999999,59.87065439,mungbean,62.28,7726.14,0.68,1
6,48,24,28.6362812,84.61431076,6.790736339,48.48319335,mungbean,32.77,7428.38,0.76,0
29,36,25,28.28511547,88.4393979,7.130278657000001,48.56690235,mungbean,53.96,4666.09,0.5,1
4,36,22,27.60887393,86.13316408,7.012740397000001,43.80041104,mungbean,46.2,1518.65,0.54,1
10,59,22,28.60901145,86.99495766,7.1556850160000005,36.94616965,mungbean,30.87,1729.51,0.93,0
14,48,21,29.24598976,84.80084105,6.991242362,53.43228915,mungbean,67.79,3217.79,0.9,1
8,50,21,28.62911222,89.11480590000002,6.218923893,50.49913241,mungbean,36.58,8577.81,0.71,0
20,40,15,29.57329479,88.07505524,7.199495367999999,45.04467075,mungbean,43.38,9696.94,0.76,1
36,43,22,27.82684262,87.16679147,6.3898821660000005,58.37249772,mungbean,38.93,5422.46,0.44,0
14,57,15,29.8757015,83.14796296,6.623438282,40.12044158,mungbean,30.82,6705.1,0.91,0
11,60,23,27.33684386,88.50229102,7.033012777000001,51.09802625,mungbean,66.53,2227.33,0.46,1
10,59,15,29.83040388,89.30428305,6.32400451,58.86687093,mungbean,66.7,9654.99,0.66,1
7,60,25,28.2753171,82.76020821,6.397636709,56.04995423,mungbean,66.54,6201.74,0.64,1
2,47,15,29.86860065,85.99127934,6.401455706,58.41394143,mungbean,35.38,7795.53,0.76,0
20,45,22,29.5888162,89.9939693,6.904587016,54.96121262,mungbean,36.8,9583.21,0.43,0
2,39,15,28.07219563,82.9116472,6.478557136,49.61865305,mungbean,34.81,2999.79,0.68,0
27,40,24,27.84026517,89.99615558,7.063022095,52.84626009,mungbean,43.21,2776.83,0.73,1
35,48,15,27.10818093,87.45126690000002,6.981758362000001,55.03723979,mungbean,35.88,1179.38,0.86,0
4,59,25,27.68515114,81.94268594,6.227134139,54.62243308,mungbean,46.33,6416.74,0.61,1
1,48,24,29.34594634,85.60472562,6.232836962,59.03629954,mungbean,52.29,6812.62,0.98,1
36,43,21,28.36319404,84.8593608,7.140437859,52.93031105,mungbean,44.12,4290.77,0.77,1
11,46,24,27.65280218,89.80650642,6.459252023,56.52558045,mungbean,38.68,4043.56,0.32,0
34,47,19,27.31372793,85.44815232,6.568795403999999,53.15223123,mungbean,64.21,7135.03,0.82,1
21,44,18,27.06909959,86.89934108,7.12851089,50.46746116,mungbean,44.22,7553.1,0.31,1
17,58,20,28.06642822,85.91625451,6.42937879,39.23831035,mungbean,59.93,2013.91,0.57,1
25,40,21,27.73329078,81.13903037,6.248900919,44.17580911,mungbean,39.51,9816.25,0.93,0
2,38,18,27.53632932,89.92908171,6.619891497999999,45.48591922,mungbean,38.06,7235.72,0.57,0
9,48,20,29.66461594,84.28187572,6.377568542000001,56.09542002,mungbean,38.73,1635.06,0.45,0
37,49,25,29.914544300000006,85.85384444,6.415459592,41.39081525,mungbean,48.4,2762.43,0.97,1
36,38,15,28.36363858,87.59810657,6.3206620120000006,57.99524359,mungbean,46.58,5735.14,0.4,1
40,58,15,29.46416042,87.60890009,6.978400282000001,43.15411472,mungbean,49.83,5175.22,0.37,1
30,44,16,29.73013036,82.89166381,6.442335592999999,50.91511275,mungbean,48.7,1681.57,0.64,1
1,59,23,27.46852989,87.17649,7.184398832,43.78420984,mungbean,36.06,8129.64,0.88,0
9,48,22,27.77076285,87.09979549,6.402926221,49.50812624,mungbean,52.06,6502.84,0.58,1
14,41,17,29.12939524,88.48312598,7.085982325,36.45012824,mungbean,33.41,1189.1,1.0,0
35,52,19,27.10606808,89.89593328,6.698574085,37.45680611,mungbean,67.11,9210.48,0.87,1
31,48,17,28.88078945,86.94206817,6.594739424,53.79732545,mungbean,47.23,1326.52,0.39,1
4,41,20,28.14720892,83.8001509,6.647965508,37.44800463,mungbean,57.35,8734.29,0.41,1
30,37,25,29.89129144,80.14487166,7.120032489,54.7960127,mungbean,55.76,9692.46,0.44,1
9,35,20,27.41503453,80.98004661,6.91380932,40.53173216,mungbean,35.83,2357.69,0.92,0
20,41,20,29.27308605,89.4875022,7.073048264,50.9246554,mungbean,57.05,7480.21,0.87,1
37,50,23,29.65296893,88.48587386,6.5304707,56.01913159,mungbean,65.51,7285.06,0.79,1
34,35,21,28.44524991,82.67639542,6.684381357,58.18713162,mungbean,53.52,5752.72,0.77,1
14,37,15,27.96235681,83.97586797,6.581351374,48.9366954,mungbean,51.6,6305.18,0.65,1
23,39,22,29.25649321,81.97952224,6.86483915,42.02483277,mungbean,67.42,8701.24,0.46,1
5,45,21,28.36291385,88.00989267,6.487124217000001,43.05130077,mungbean,30.87,8364.6,0.38,0
22,37,20,27.62749466,86.49366929,6.605733067999999,39.26137642,mungbean,62.82,8299.54,0.37,1
40,51,17,28.66086349,86.12194568,6.860602782000001,50.01534317,mungbean,33.91,8942.48,0.75,0
27,56,20,29.2114218,87.11497805,6.41874299,51.53848218,mungbean,51.03,1007.66,0.94,1
31,40,22,29.40889385,86.16063492,6.365513634,53.35486977,mungbean,46.74,8869.02,0.55,1
38,36,21,28.02952623,84.8845732,6.5563729660000005,36.12042927,mungbean,65.36,8650.26,0.79,1
6,37,17,28.08657178,80.35005927,6.760694227999999,38.14476781,mungbean,52.28,6815.1,0.93,1
6,47,18,29.16174608,80.28038146,6.715276662999999,40.16545979,mungbean,63.19,6100.45,0.34,1
24,44,17,29.8596912,80.03499648,6.666380512000001,50.66487502,mungbean,65.24,2300.82,0.81,1
25,59,19,29.06631494,83.6869203,6.626629798,43.95183726,mungbean,61.97,9816.84,0.97,1
32,56,21,27.38538997,88.66663953,6.702772465,58.29933073,mungbean,47.86,7333.95,0.48,1
8,45,18,27.93034941,85.42058715,7.011030515,43.25095608,mungbean,41.39,7388.08,0.31,1
19,39,17,29.2808618,81.8009244,6.890156495,44.47427436,mungbean,47.6,7636.9,0.85,1
39,37,15,28.9973145,83.78911515,6.821747052,59.84499208,mungbean,37.12,9262.34,0.72,0
33,37,19,27.92678579,86.5543196,7.183189922,43.4826194,mungbean,44.83,1485.92,1.0,1
26,54,17,28.5474135,88.9570454,6.27258822,49.4897245,mungbean,46.87,7635.31,0.36,1
21,51,15,29.36488409,89.1886954,6.679127482,48.30159325,mungbean,36.57,2635.6,0.34,0
22,54,20,28.56149805,83.63802195,6.689825155,41.013132,mungbean,68.93,4974.35,0.73,1
29,45,16,28.43683487,87.91332682,6.583381939,43.12063289,mungbean,59.99,6842.19,0.36,1
4,40,21,28.79728147,80.45744422,6.725551062,44.30070517,mungbean,31.07,3699.63,0.91,0
10,37,22,28.7275267,89.12760359,7.069747813999999,58.52974279,mungbean,50.05,4163.48,0.3,1
4,44,19,27.95639663,83.52706038,6.921993877999999,43.25726752,mungbean,59.89,1492.28,0.73,1
20,45,17,28.17458662,83.69659318,6.770955317,37.2464655,mungbean,44.67,4733.21,0.71,1
23,45,23,28.77653519,86.69133979,6.983130466,56.12443206,mungbean,39.43,3324.71,0.4,0
25,48,21,28.438097,83.48991368,6.267684328,52.55469976,mungbean,39.78,8864.18,0.75,0
56,79,15,29.48439992,63.19915325,7.454532137,71.89090748,blackgram,61.85,4055.6,0.71,1
25,62,21,26.73433965,68.13999721,7.040056094,67.15096376,blackgram,36.57,3422.2,0.38,0
42,61,22,26.27274407,62.28814857,7.418650668,70.23207557,blackgram,51.28,4251.09,0.8,1
42,73,25,34.03679184,67.21113844,6.501869314,73.23573601,blackgram,69.55,1078.08,0.91,1
44,58,18,28.03644051,65.06601664,6.814410927999999,72.49507741,blackgram,54.05,4899.34,0.32,1
50,55,16,28.81460716,65.33538112,7.581442888,62.26242533,blackgram,57.66,6586.63,0.95,1
35,72,21,34.03619494,64.28791388,7.741418772,66.85510868,blackgram,55.2,4878.52,0.92,1
30,64,20,33.8642935,61.57072498,6.573531614,68.02199825,blackgram,37.06,3526.31,0.6,0
27,64,21,32.84213012,68.68401492,7.543804222999999,73.67166182,blackgram,67.76,2152.53,0.33,1
50,74,17,27.10053268,63.36085585,6.5408208,73.84949872,blackgram,61.76,5983.37,0.83,1
39,73,24,25.65842532,61.18235808,7.22405917,69.28607828,blackgram,55.45,1705.85,0.84,1
57,67,25,32.34744009,66.61452812,7.551364319,64.55882254,blackgram,34.94,4773.79,0.38,0
52,63,19,29.58949031,68.32176769,6.928898659,67.53021213,blackgram,46.3,2803.54,0.6,1
55,66,22,30.91219459,68.79427388,7.747775262999999,66.63830637,blackgram,54.49,2893.77,0.67,1
51,56,18,28.12787838,64.2097765,6.706505915,70.86340755,blackgram,38.37,7658.34,0.56,0
36,66,15,30.08545364,69.34811988,6.668238556,67.1367443,blackgram,56.87,9429.96,0.49,1
59,55,19,31.74379487,62.51007687,7.332375138,68.97097538,blackgram,47.79,9224.93,0.89,1
50,58,23,27.81326852,62.50460464,7.596802025,69.75555541,blackgram,68.9,2193.5,0.33,1
30,65,25,32.88733849,64.59457409,7.70650895,71.50569456,blackgram,69.44,6656.57,0.48,1
20,62,18,29.36358721,64.98742947,7.366542647,61.91208707,blackgram,66.85,3789.9,0.74,1
58,71,15,27.82592799,67.58618829999999,6.919243702,74.01229707,blackgram,30.75,2707.93,0.72,0
25,71,24,28.49538735,60.44848407,7.187721817999999,74.91559514,blackgram,48.52,4136.91,0.64,1
52,71,16,27.74274761,68.53997144,7.0758864720000005,71.78615328,blackgram,45.26,4916.28,0.53,1
40,63,18,30.41588462,67.66323804,6.74441168,63.02473185,blackgram,41.39,2877.16,0.3,1
20,60,25,27.3254209,69.09047809,6.726469087999999,61.19250859,blackgram,34.74,3906.0,0.52,0
48,61,21,30.28496619,61.69295127,6.628264883,65.62859526,blackgram,69.58,6963.5,0.85,1
49,68,22,28.56840626,61.53278622,7.127064207,63.49726331,blackgram,44.84,9303.69,0.43,1
48,62,15,25.36586097,66.6379724,7.538631462000001,65.81655892,blackgram,61.11,1027.52,0.31,1
32,66,17,34.9466155,65.26774011,7.162357641,70.1415139,blackgram,67.1,4475.94,0.78,1
21,63,22,25.09737391,67.72837887,6.859409487000001,74.61649888,blackgram,63.65,7649.52,0.39,1
20,72,19,32.47648301,64.34848735,7.397190844,65.82045699999999,blackgram,60.82,8436.85,0.33,1
25,65,21,33.86351172,68.59232289,6.880245789,69.24464096,blackgram,51.29,2454.77,0.55,1
41,78,21,25.19857725,60.37332688,6.581313137,70.88787207,blackgram,32.3,9043.04,0.58,0
53,67,17,31.77681682,69.01852894,7.296972161,61.46892873,blackgram,40.53,8358.39,0.74,1
39,60,21,34.89814946,63.59948557,6.97297656,64.72797143,blackgram,52.56,4332.72,0.46,1
25,76,17,31.74105409,68.63525428,7.241148507,62.3061735,blackgram,64.89,7144.67,0.96,1
21,78,19,27.16159076,66.76017239,6.92009048,69.85112265,blackgram,40.5,7252.23,0.42,1
57,60,17,26.23773129,67.88521396,7.504608385,73.58663968,blackgram,64.36,7359.31,0.58,1
56,75,15,30.20157245,60.06534859,7.152272256,66.37171179,blackgram,37.79,4207.08,0.56,0
49,72,15,31.55846339,67.83563765,7.137004749,74.86960831,blackgram,41.82,8118.78,0.69,1
24,80,19,29.67892453,69.0854554,6.8080417220000005,65.66436565,blackgram,64.03,6293.07,0.6,1
49,76,18,27.05365239,67.7017527,7.393631868,60.4693835,blackgram,34.12,1340.52,0.61,0
28,68,19,34.63880966,61.38597868,7.69950698,72.43169115,blackgram,58.96,2516.21,0.53,1
55,78,21,33.39438752,62.93692886,6.602888248999999,63.57445989,blackgram,58.0,7451.79,0.38,1
50,64,25,28.84079155,63.37230676,6.734447425,70.25496749,blackgram,45.17,4589.44,0.72,1
34,80,19,31.49338309,63.0563645,6.521217963,71.48327008,blackgram,56.31,5851.17,0.33,1
20,68,23,25.54960633,63.95425534,7.707332484,63.1830529,blackgram,67.49,1769.85,0.9,1
55,67,16,34.37329112,69.69366426,6.596719015,70.27184748,blackgram,61.96,8454.26,0.76,1
23,70,15,34.600824700000004,63.11296779,7.403623355,60.41790253,blackgram,40.9,9198.31,0.4,1
53,74,15,29.43463808,64.94329356,7.517097,72.17818157,blackgram,52.73,6863.26,0.43,1
26,67,16,29.10713092,67.90577375,7.17620823,67.83345933,blackgram,47.99,4394.16,0.8,1
33,80,22,28.57006111,65.71765781,6.593961761,70.0866434,blackgram,58.96,5707.2,0.5,1
37,79,19,27.54384835,69.3478631,7.143942758,69.40878198,blackgram,55.64,4191.79,0.64,1
33,75,21,33.04687968,68.93875631,6.690655045,62.30278274,blackgram,37.43,8594.49,0.73,0
22,55,20,33.95309131,69.96100028,7.423530351,61.16350463,blackgram,56.75,3509.22,0.3,1
20,68,17,30.11873003,60.11680815,6.578714842999999,71.72980375,blackgram,38.67,2519.79,0.38,0
43,68,20,29.57812712,66.17587668,7.497469256,69.43895491,blackgram,35.56,7321.98,0.8,0
44,76,22,27.26458947,68.01232937,7.775306272000001,68.91754359,blackgram,37.78,2875.99,0.86,0
34,60,16,31.35730791,64.24992106,7.322555222999999,63.85668948,blackgram,38.66,6897.51,0.63,0
21,72,17,31.52104732,66.55723677,7.580527339,61.71111448,blackgram,49.38,8922.45,0.99,1
25,68,19,29.39982732,64.25510719,7.1084501210000015,67.47677295,blackgram,63.38,7948.08,0.83,1
41,62,15,29.38400259,64.14928485,7.358974541,65.24194361,blackgram,56.68,5838.83,0.72,1
28,65,23,28.38686534,61.88871127,7.405176138,74.24459122,blackgram,54.69,2092.05,0.94,1
35,64,15,28.47442276,63.53604453,6.500144962,69.5274407,blackgram,59.47,6861.29,0.81,1
52,58,16,30.64095781,61.14508627,7.167435834,71.36947525,blackgram,31.96,2375.33,0.3,0
58,75,25,25.25596239,61.36669662,7.261791753,68.64685069,blackgram,37.25,1189.86,0.83,0
34,66,19,32.97030511,60.18122078,7.586642101,73.44678678,blackgram,52.21,6411.55,0.94,1
52,70,16,33.66855394,66.60416867,7.534811832999999,67.32520551,blackgram,49.22,8672.21,0.97,1
23,57,19,32.83963757,67.99803573,7.251000789,73.40452716,blackgram,54.37,5139.66,0.53,1
42,58,25,27.45853567,62.90020977,6.513620917999999,69.46020927,blackgram,62.7,1037.07,0.49,1
37,62,17,25.68576704,69.84354028,7.121254928,74.62068748,blackgram,52.31,7726.55,0.54,1
44,75,22,30.0328403,64.14800537,7.574561547,71.21006868,blackgram,55.21,2984.25,0.9,1
21,80,20,28.20667264,68.27085245,7.350869792,64.32887142,blackgram,68.74,8412.26,0.87,1
56,76,16,28.27265858,61.18956161,7.5131510760000015,63.29900785,blackgram,52.49,7568.99,0.66,1
29,76,15,28.541723600000005,64.2020154,7.0256077060000015,69.68862306,blackgram,47.77,5042.63,0.62,1
43,61,20,26.87187036,61.61367264,6.804253866,63.51822045,blackgram,49.11,6567.18,0.55,1
55,60,15,32.79766751,68.77994074,7.163043872,64.11411069,blackgram,41.98,4951.75,0.61,1
44,63,15,26.42333018,64.51136845,7.338929556,63.46546487,blackgram,44.35,9363.82,0.72,1
29,67,21,29.79181107,63.38789228,6.621323612,63.02169909,blackgram,33.99,6223.92,0.84,0
47,63,16,27.44003279,67.10464369,6.661870999,72.50669768,blackgram,68.02,8320.83,0.85,1
40,68,17,34.1262979,65.14877461,7.733149554,70.40795007,blackgram,46.29,6585.99,0.53,1
58,61,15,30.94908189,64.23364112,7.402891666,62.78730907,blackgram,37.62,6259.99,0.6,0
41,74,18,28.75751783,61.02701476,6.599147297999999,73.37686831,blackgram,68.95,1994.24,0.74,1
58,79,17,27.24766491,66.10123083,7.04174124,62.31842057,blackgram,58.1,5759.32,0.54,1
27,62,24,28.63005477,66.770943,7.353876754,62.2737345,blackgram,61.72,6694.71,0.62,1
27,60,17,26.41768321,63.64698302,7.026795358999999,64.42177127,blackgram,45.55,8137.42,0.9,1
52,65,20,32.81705216,66.15665137,6.814301033,68.83924882,blackgram,36.24,7264.63,1.0,0
44,55,25,29.6321052,65.91359954,7.42160832,71.16331975,blackgram,68.16,5516.83,0.59,1
21,62,24,33.49077065,62.73317204,6.8473828910000005,65.45328463,blackgram,30.5,4647.59,0.86,0
60,59,22,31.86847286,66.74217464,7.191522601,74.22238583,blackgram,68.94,8144.77,0.52,1
33,77,21,30.32992227,65.62971858,7.01285529,71.64631281,blackgram,44.78,6392.58,0.56,1
59,58,17,28.546224,66.31394098,7.368318809,62.83469851,blackgram,49.41,4986.44,1.0,1
29,63,17,30.02629908,67.88811637,7.26154329,66.47264636,blackgram,35.71,8369.17,0.49,0
59,63,18,31.65531175,60.13263713,6.52669158,66.69096751,blackgram,69.35,6660.68,0.48,1
29,70,15,30.33499674,63.54718862,6.872594461,74.16699119,blackgram,33.36,6246.28,0.84,0
58,73,16,33.36984395,65.67718163,6.874142175,64.89517488,blackgram,66.77,2515.9,0.48,1
55,77,22,31.4345059,62.99303471,7.76061831,64.77651469,blackgram,64.96,4819.73,0.52,1
42,79,23,27.71678273,63.29103387,6.781841984,68.56507978,blackgram,30.0,2129.16,0.58,0
44,77,21,32.63918668,61.3009051,7.326980454,61.83876146,blackgram,30.46,1821.32,0.34,0
38,62,25,32.7477393,67.77954584,7.453975408,63.37784443,blackgram,60.63,1576.34,0.87,1
32,76,15,28.05153602,63.49802189,7.604110177000001,43.35795377,lentil,33.3,4145.87,0.96,0
13,61,22,19.44084326,63.27771461,7.728832424,46.83130119,lentil,46.13,9597.11,0.92,0
38,60,20,29.84823072,60.63872613,7.491217102,46.80452595,lentil,59.79,5158.63,0.92,1
11,74,17,21.36383757,69.92375891,6.633864582,46.6352865,lentil,57.36,3566.13,0.85,0
37,71,16,26.28663931,68.51966729,7.324863481,46.13833007,lentil,38.58,5547.7,0.48,0
29,71,18,22.17499963,62.13873825,6.410441476,53.46622584,lentil,57.86,7035.69,0.71,0
2,72,18,26.57597546,60.97876599,7.836719564,50.89110726,lentil,37.23,4745.49,0.94,0
6,59,21,26.58972517,66.14007674,6.139215944,50.90994463,lentil,68.14,9330.54,0.83,1
13,64,20,19.1345771,62.57526895,6.590571088,36.46946971,lentil,57.59,6350.34,0.79,0
8,58,17,28.75273118,69.15640149,7.286049977999999,35.15426171,lentil,66.84,9620.89,0.34,1
6,77,20,25.78746268,60.2816298,6.058306161,49.14337177,lentil,40.31,9508.45,0.41,1
2,75,22,23.89271875,61.78779413,6.658605362,52.55730112,lentil,57.29,7856.96,0.96,0
3,69,23,28.67408774,63.18832976,7.299360767,42.96018627,lentil,64.81,5055.02,0.72,1
27,80,24,28.42062847,61.77336343,7.815210661,49.02366803,lentil,63.92,4364.62,0.49,1
39,78,15,21.35499456,62.60136323,5.925391795,41.78219834,lentil,45.93,3337.02,0.51,0
40,79,17,21.12695586,63.18738532,6.403683619,38.71834464,lentil,50.91,4825.56,0.37,0
37,62,22,24.02037872,61.62313345,7.397546271,49.78102578,lentil,57.68,7670.12,0.31,0
31,60,24,25.40474421,65.8567539,7.722335992,51.92057267,lentil,51.12,5209.99,0.47,1
22,67,22,29.03017561,64.49166566,7.475926645,54.93937710000001,lentil,44.35,1143.42,0.66,1
3,78,18,20.21368219,68.65257685,6.887130053,50.89732989,lentil,64.93,4015.49,0.68,0
4,80,16,29.19585548,68.01965728,7.441976825,44.93261911,lentil,42.97,7052.72,0.83,1
13,61,24,18.29783597,69.6897615,7.629910252999999,49.39111479,lentil,64.48,1218.12,0.44,0
12,66,20,27.41434987,63.41785982,7.336117221,44.43177543,lentil,40.21,7927.58,0.41,1
4,61,21,24.84063998,60.09116626,6.75020529,48.77790371,lentil,62.37,6474.03,0.65,0
9,60,21,29.94413861,67.31323084,7.52178027,40.37113729,lentil,54.35,2446.42,0.63,1
18,66,22,25.87990287,67.55109024,6.347379185,47.89645224,lentil,33.88,5737.21,0.86,0
32,56,18,20.0467711,65.84395319,7.135251532000001,46.05333124,lentil,44.58,9698.05,0.9,0
6,72,15,22.99451999,66.70897237,7.670178119,54.49044154,lentil,49.49,3428.15,0.66,0
15,77,20,25.13163619,66.92642362,7.399749291,49.04015558,lentil,34.55,1765.83,0.51,0
0,65,24,28.49584395,62.44616219,7.841496029,53.14531023,lentil,49.6,3577.35,0.54,1
30,79,22,18.28766124,69.48515056,6.254216611,48.60449438,lentil,69.13,7717.47,0.38,0
3,63,16,24.38041875,61.18458224,6.868881707999999,53.13946695,lentil,42.18,9616.17,0.41,0
2,78,23,21.31852148,66.43934593,7.320514721,45.42616802,lentil,43.07,3697.98,0.36,0
10,78,18,18.54141834,62.70637578,6.296976913,44.07819743,lentil,44.65,9904.32,0.35,0
14,67,25,25.28710601,60.85993533,7.241151936,49.37369982,lentil,54.77,6732.7,0.79,1
39,65,23,25.43459777,69.12613376,7.685959305,41.02682925,lentil,55.93,4799.66,0.94,1
19,72,15,28.83600962,69.76112921,6.890760124,44.08562546,lentil,56.74,9078.14,0.9,1
18,57,21,27.37659643,63.93927841,6.155915975,49.47371773,lentil,66.68,7608.49,0.89,1
31,58,15,28.31886863,60.19461399,6.167855382000001,45.36521251,lentil,57.13,1654.41,0.51,1
28,58,25,27.4818649,62.04814951,6.861640036,37.81123974,lentil,35.52,3304.33,0.36,0
5,65,19,18.28072173,68.10365387,6.978361689,48.80253285,lentil,59.46,4764.52,0.87,0
16,65,19,27.61204997,69.29786244,7.043160241,42.72374404,lentil,68.08,8933.53,0.9,1
34,65,19,23.43974653,63.22011726,5.94239222,45.40277297,lentil,43.92,8496.92,0.31,0
14,69,19,20.95628486,63.68128841,7.239455147,52.39881209,lentil,67.69,7295.86,0.81,0
22,55,16,23.7937153,68.03209183,6.516317561,49.73922097,lentil,37.04,2327.38,0.6,0
24,61,17,22.6371424,65.44544859,6.233269045,38.30411077,lentil,42.81,6417.2,0.58,0
2,79,15,21.53577883,65.47227704,7.505283615,35.75107592,lentil,44.6,6635.12,0.32,0
26,63,17,29.87854588,65.73085206,6.950300686,44.95654782,lentil,53.42,9939.67,0.72,1
27,61,15,25.2653291,67.10004577,6.958054839,48.33941188,lentil,48.71,3709.34,0.67,1
24,70,16,25.17885316,68.93307305,6.54803469,35.03484812,lentil,32.0,4075.68,0.35,0
13,74,25,24.12192608,61.09533545,6.461618577,44.23629285,lentil,55.16,3257.32,0.3,0
6,64,23,23.33565221,67.40460704,7.065264073,36.18678721,lentil,69.31,2069.37,0.84,0
12,58,23,21.74600081,63.39503184,6.765091462000001,50.43306085,lentil,53.0,5842.76,0.58,0
32,79,22,27.60195453,63.46170674,5.91645379,54.37814199,lentil,37.14,1529.48,0.69,0
6,68,18,24.388717,62.50453062,6.711341147000001,47.26052494,lentil,46.62,8434.94,0.8,0
10,79,20,24.98287462,66.895409,6.379881442,38.21370568,lentil,56.82,4703.1,0.61,0
38,77,22,28.234829,69.3159965,6.313284267999999,35.36831423,lentil,39.15,7990.97,0.71,0
17,74,17,26.03026959,69.55863145,7.393210848,37.11395801,lentil,64.91,9306.33,0.94,1
26,68,24,28.04849594,64.07691942,7.504930973,37.15824966,lentil,66.83,9172.44,0.61,1
23,75,17,24.87425505,64.00213929,7.198076286,48.28137482,lentil,64.4,3671.8,0.66,0
32,78,22,23.97081395,62.35557553,7.007037515,53.40906048,lentil,56.91,1579.89,0.38,0
19,79,19,20.06003985,67.76252583,6.677262562,42.89509057,lentil,38.2,8552.59,0.93,0
22,60,18,19.59221047,61.28633405,6.74398035,41.7704893,lentil,39.41,9153.49,0.64,0
28,69,16,29.77013109,66.29327012,6.547361617999999,35.69674138,lentil,65.71,4122.6,0.41,1
1,67,21,27.52135365,60.53657684,6.551577598,48.06491307,lentil,64.21,6499.14,0.37,1
12,67,23,25.62896213,63.14909763,6.585020302999999,45.49683991,lentil,44.4,5157.19,0.36,1
36,67,20,20.39078312,60.47528931,6.924042372000001,53.31508572,lentil,38.72,5123.81,0.78,0
28,70,21,25.39038396,60.4989659,7.437373666,39.18374505,lentil,43.67,7708.72,0.49,1
12,71,19,24.91079638,60.71367427,7.142611056000002,42.19740397,lentil,43.94,3696.28,0.94,0
22,68,16,27.70496805,63.20915034,7.74672376,37.46160727,lentil,32.85,4548.13,0.88,0
26,66,22,18.06486101,65.1034354,6.300479414,51.54922825,lentil,69.1,2746.21,0.97,0
16,65,16,18.13027797,62.45851612,6.078724107,50.6128521,lentil,57.7,7398.64,0.42,0
14,59,22,23.82723528,67.89815262,6.76660668,46.90725077,lentil,47.2,7339.84,0.68,0
33,59,19,23.19305333,62.74710773,7.641024177,49.55213308,lentil,50.57,6594.03,0.38,0
21,63,17,25.08966129,68.17543102,6.559681838,41.45486619,lentil,38.38,1602.32,0.53,0
0,69,21,25.86928193,61.88321072,7.072923306,36.68284038,lentil,31.74,4491.64,0.59,0
10,75,17,18.43966037,68.05394959,7.732194787999999,39.00992137,lentil,36.38,8787.12,0.71,0
30,61,18,27.14911056,67.02664337,6.157782589,52.50812701,lentil,33.28,3464.63,0.77,0
0,74,17,23.33375853,64.50515776,7.240988401,47.01510708,lentil,68.27,6242.56,0.79,0
35,74,22,26.7230014,62.96841833,6.898905799,42.87274897,lentil,49.64,6857.6,0.37,1
7,63,24,19.55750776,64.45268309,6.818681086000002,53.04669416,lentil,44.89,2846.61,0.99,0
9,56,17,26.13708256,66.7729209,6.261937875,46.48280681,lentil,47.44,3717.55,1.0,1
14,74,15,27.99990346,65.57653373,6.493036868,49.94043064,lentil,30.19,5787.89,0.87,0
14,76,20,29.05941162,62.10652364,7.042474679,36.5011366,lentil,60.47,8169.44,0.36,1
36,65,16,25.71269843,64.1123333,7.692013657,50.17067771,lentil,64.51,2647.04,0.53,1
28,67,21,21.79792649,63.73086065,6.250994222999999,46.62370222,lentil,68.74,9525.23,0.85,0
28,79,16,24.70626432,60.26854183,6.0521848810000005,53.12442925,lentil,37.2,4401.81,0.57,0
40,61,22,20.94981756,65.8108757,7.002216044,44.23913012,lentil,55.47,5100.38,0.9,0
10,70,19,24.84918386,68.98088448,7.272427638,41.61080544,lentil,31.46,3427.54,0.62,0
12,80,19,21.91041045,65.21662467,5.962001484,36.10211371,lentil,60.71,6828.59,0.97,0
37,77,20,25.93381964,68.70533022,7.080506001,51.02372773,lentil,37.2,1412.51,0.32,0
0,67,22,29.82112112,69.4073209,6.5937983870000005,51.56461082,lentil,55.62,6106.28,0.48,1
7,73,25,27.52185591,63.13215259,7.28805662,45.20841071,lentil,42.46,8991.24,0.67,1
10,56,18,27.99627907,68.6428593,7.32710972,46.10585191,lentil,33.26,5920.0,0.72,0
39,70,15,20.76774783,63.90164154,6.366355781,47.9271552,lentil,33.51,5333.18,0.7,0
26,56,22,23.05276444,60.424786,7.011121216,52.60285259,lentil,31.82,3165.37,0.32,0
9,77,17,21.65845777,63.58337146,6.280725549,38.07659414,lentil,55.21,6569.34,0.74,0
4,59,19,26.25070298,67.62779652,7.621494566,40.8106299,lentil,45.48,1914.46,0.79,1
34,73,15,20.97195263,63.83179889,7.630424082999999,53.10207889,lentil,57.09,5221.65,0.97,0
33,77,15,23.89736406,66.32102048,7.802212437,40.74536757,lentil,32.79,7144.19,0.4,0
2,24,38,24.55981624,91.63536236,5.922935513,111.9684622,pomegranate,36.91,2469.05,0.55,0
6,18,37,19.65690085,89.93701023,5.937649577999999,108.0458926,pomegranate,36.2,9744.25,0.79,0
8,26,36,18.78359608,87.4024767,6.804781106,102.5184759,pomegranate,45.85,2571.94,0.77,0
37,18,39,24.1469628,94.5110662,6.424670614,110.2316633,pomegranate,55.66,7250.07,0.92,0
0,27,38,22.44581266,89.90147027,6.7380162210000005,109.3905998,pomegranate,67.56,3934.08,0.82,0
31,25,38,24.96273236,92.40501423,6.4973666770000005,109.4169192,pomegranate,47.91,8276.81,0.66,0
21,21,38,22.5526059,89.32594859999998,6.327673765,104.8955643,pomegranate,37.74,6936.27,0.84,0
6,30,40,22.77035608,91.45498527,6.36137446,106.9659201,pomegranate,53.56,8003.25,0.37,0
25,27,41,19.20090378,94.27659596,6.9235093710000015,108.0423555,pomegranate,37.07,9974.99,0.58,0
15,11,38,23.12808226,92.68328358,6.630646082999999,109.3930157,pomegranate,45.12,8836.21,0.36,0
14,5,36,24.92639065,85.19098079,5.832525853,104.7693804,pomegranate,53.36,7517.48,0.6,0
16,10,41,24.77464458,85.63608688,6.738993954,105.7595811,pomegranate,48.67,6862.24,0.35,0
36,7,37,19.8671184,86.35590206,5.782435567,108.3168858,pomegranate,33.3,3308.89,0.78,0
4,20,41,24.26601316,93.7974061,6.537042717,104.5375109,pomegranate,65.48,8556.37,0.68,0
29,22,40,23.62600218,89.73266695,6.145104401,107.6836871,pomegranate,63.98,8472.81,0.72,0
16,15,42,19.67832052,89.08935702,6.890784045,108.5468633,pomegranate,52.87,9703.52,0.92,0
18,27,41,22.36509395,92.30882391,7.175344328,104.8216333,pomegranate,33.71,3613.4,0.4,0
11,18,42,21.57936934,94.88267728,5.938528744,102.8593382,pomegranate,45.69,1288.6,0.49,0
5,15,38,18.26233221,88.16779129,5.709380472,108.0756727,pomegranate,62.87,4599.57,0.92,0
18,23,44,23.71028128,89.61794165,6.184400085,105.64999070000002,pomegranate,42.62,6941.77,0.98,0
9,8,40,22.48720144,89.9224883,6.553509673,111.6631582,pomegranate,55.4,7314.06,0.73,0
40,27,45,21.66024980000001,94.79397419,5.885638185,112.4349689,pomegranate,58.13,6757.83,0.92,0
22,23,44,20.13037175,89.31505137,6.1438746910000015,107.3416913,pomegranate,37.39,4271.97,0.6,0
9,16,39,18.41164435,91.11927248,6.101198974,105.1834976,pomegranate,53.43,5162.09,0.9,0
12,29,40,19.68291173,89.75272999,6.594037135,111.2818551,pomegranate,59.94,8962.71,0.3,0
0,17,42,23.20242586,91.19442671,6.8598408210000015,109.0946323,pomegranate,47.98,4230.85,0.65,0
2,21,44,18.92157197,87.31290342,6.56893406,102.8013275,pomegranate,67.47,7389.51,0.65,0
28,6,40,22.10621387,91.34039616,6.769855664,106.8704803,pomegranate,67.71,7042.22,0.38,0
8,23,44,18.47412402,89.68919664,7.130837931,108.4758509,pomegranate,54.28,2994.5,0.96,0
29,16,36,19.81069447,88.92944254,5.7403380020000006,102.860084,pomegranate,69.72,2509.91,0.48,0
17,18,43,24.4880844,90.83687246,5.843005428,103.1969341,pomegranate,57.31,3335.52,0.45,0
34,21,42,18.75927679,89.93457597,6.648687273999999,111.0196744,pomegranate,66.93,7291.73,0.7,0
21,23,42,19.54128063,90.29751796,6.902751061,104.3739878,pomegranate,46.13,8223.1,0.63,0
25,17,40,18.91251245,87.74938524,6.608023872,111.28005159999998,pomegranate,63.91,1348.75,0.94,0
8,25,36,19.91330523,94.95031368,6.828522375,104.0277061,pomegranate,55.12,5143.13,0.61,0
26,18,42,19.72620525,89.64934166,6.910374919,108.22872759999998,pomegranate,33.94,8993.76,0.36,0
4,19,42,23.83185873,87.84034604,6.306605528,111.2232716,pomegranate,48.99,7327.13,0.82,0
36,24,41,24.94467632,94.25702672,7.009180374,103.8799347,pomegranate,56.01,1920.59,0.59,0
5,24,40,24.692258,93.87030088,6.297907578999999,104.6735454,pomegranate,32.93,1821.09,0.54,0
19,17,39,24.72485577,85.56083187,6.728599215,111.2787584,pomegranate,30.2,1028.29,0.49,0
39,30,38,20.12644921,87.59629625,6.965156737999999,108.065579,pomegranate,45.49,2587.11,0.79,0
5,29,44,21.02432943,93.0569505,5.578095745,104.7847006,pomegranate,68.89,4469.37,0.34,0
4,24,43,22.40423537,88.1508343,7.199504273,109.8695196,pomegranate,32.04,4686.96,0.58,0
38,21,35,20.33691147,89.38003827,5.841367187,110.9653137,pomegranate,44.69,5685.45,0.64,0
37,11,36,24.24779615,85.56033312,6.710143266,106.9216033,pomegranate,69.19,5094.88,0.32,0
9,25,41,24.81530144,91.90842992,5.972714857000001,109.2853418,pomegranate,40.88,1334.24,0.85,0
29,22,43,19.66329768,87.95158129,5.561851831,106.0380805,pomegranate,54.41,7701.38,0.64,0
5,21,38,22.43377991,90.3396556,6.107054807999999,112.459697,pomegranate,55.16,1608.44,0.52,0
22,26,38,22.92052307,85.12912161,6.988035315,110.2437841,pomegranate,62.06,8851.74,0.81,0
4,18,37,22.91843172,85.40695044,7.13147457,106.2817706,pomegranate,57.59,6987.47,0.8,0
21,6,41,24.88244467,89.39686219,7.086947687,107.1951707,pomegranate,36.45,3183.34,0.76,0
29,21,45,23.40981539,93.13277,6.749260456,105.2240743,pomegranate,53.24,4848.56,0.31,0
23,5,44,21.20725375,94.26304717,7.16300467,107.5660804,pomegranate,67.83,7654.03,0.75,0
13,7,43,18.20230419,91.12282162,7.013481515,109.66239740000002,pomegranate,36.47,6950.17,0.81,0
5,13,37,22.34375696,89.7870345,5.648243648999999,103.3183074,pomegranate,54.97,9699.74,0.9,0
27,24,41,24.32770134,90.88292835,6.610251186,110.4606459,pomegranate,62.95,6143.29,0.85,0
7,23,35,19.75088482,88.71691157,7.054313822999999,102.5538035,pomegranate,62.61,4847.91,0.87,0
12,20,39,19.86173586,86.19740917,6.026999326,111.0217929,pomegranate,67.88,4631.18,0.33,0
4,19,43,18.07132963,93.14554876,5.7794274020000005,106.3602023,pomegranate,55.7,6871.68,0.97,0
3,9,45,23.89162561,89.61850203,6.535244251,104.617522,pomegranate,44.68,7624.85,0.8,0
1,27,36,23.98598756,93.34236582,5.684995235,104.991282,pomegranate,31.24,5505.04,0.66,0
23,30,44,20.93892916,85.42912869,6.12476108,103.0295938,pomegranate,63.83,1838.63,0.75,0
24,21,42,20.82210727,87.22815682,6.999014379,109.4429934,pomegranate,57.14,6093.43,0.92,0
13,30,37,20.86474944,91.61793636,6.277148771,106.8685636,pomegranate,57.19,5524.51,0.8,0
40,11,44,24.45840036,86.10874614,6.322396027000001,111.3779693,pomegranate,49.89,7250.14,0.38,0
21,9,40,24.51147697,90.64498715,5.956401828,105.6209954,pomegranate,66.27,3674.92,0.33,0
3,27,44,24.56811204,92.03009222,6.591302797000001,110.9633894,pomegranate,50.1,6673.73,0.58,0
40,29,42,24.63228709,89.01574455,7.104094929,110.6956184,pomegranate,47.7,9365.19,0.53,0
14,25,40,20.07386547,90.97819712,6.407872061,103.7084055,pomegranate,45.64,6341.5,1.0,0
38,14,37,21.80523051,94.63612858,6.658402594,102.6488846,pomegranate,34.94,1227.64,0.98,0
34,9,36,22.8122645,86.34233767,6.276038961,110.4432293,pomegranate,32.04,3438.32,0.82,0
32,14,37,22.73031253,88.48567856,6.825256236,104.6843243,pomegranate,39.45,3921.79,0.67,0
18,21,35,23.2801227,94.94330457,6.368560522,111.1382096,pomegranate,65.07,5862.41,0.6,0
8,23,38,19.30106297,87.1775172,7.005410734,105.4766591,pomegranate,44.61,6011.0,0.51,0
15,6,41,19.0087067,88.83768149,6.8973684770000006,108.6793978,pomegranate,68.88,1862.07,0.51,0
0,5,36,24.35193812,90.88612388,6.152906502,105.529185,pomegranate,65.26,7506.21,0.98,0
22,9,44,24.72235539,88.87651295,5.744361602000001,112.1926517,pomegranate,52.45,6466.3,0.95,0
14,8,43,21.92513945,94.46485312,7.051654924,111.71620159999998,pomegranate,48.31,1356.85,0.35,0
31,11,45,24.83954414,86.88738076,6.034612928,107.6435771,pomegranate,32.08,5471.19,0.61,0
39,17,45,18.09691127,90.42177379,6.9244907310000015,104.88188999999998,pomegranate,69.23,5187.33,0.69,0
10,5,42,20.24104904,91.08706822,6.887005997,109.2537734,pomegranate,46.45,6515.59,0.47,0
8,28,38,23.22594,94.42971362,6.8444019,105.6917856,pomegranate,43.01,8325.03,0.49,0
32,13,42,23.50128217,92.97527546,5.786058032000001,106.61905,pomegranate,55.67,2588.25,0.94,0
18,9,40,19.44623085,89.02127045,5.627186257000001,106.1606833,pomegranate,35.37,3686.61,0.71,0
20,27,41,20.51343484,92.51675903,5.700088663,110.5764023,pomegranate,43.91,4871.87,0.75,0
39,25,36,18.90223032,94.99897537,5.567805185,107.6103211,pomegranate,42.43,4579.94,0.74,0
20,7,45,18.90592319,89.24126808,6.077886012,112.4750941,pomegranate,60.93,5925.62,0.9,0
11,10,45,22.63045168,88.45577158,6.397995609,109.0357597,pomegranate,53.86,7315.93,0.91,0
40,18,43,19.38603815,86.79058496,5.767372539,109.91309840000002,pomegranate,59.61,2171.37,0.98,0
3,26,39,24.38318965,91.19431555,7.079973241,103.6012114,pomegranate,56.71,7106.33,0.45,0
9,16,36,23.77989026,92.93386903,5.893332377999999,106.977723,pomegranate,64.79,9266.82,0.41,0
30,20,38,22.59890174,93.16343942,7.058222596,110.0932899,pomegranate,48.1,1546.17,0.7,0
40,9,41,24.37766782,85.4017118,5.78270695,106.128338,pomegranate,30.01,9351.31,0.53,0
40,30,35,20.89273273,91.07776977,6.269663962999999,104.4407083,pomegranate,47.44,2446.12,0.38,0
32,25,35,18.09903225,85.70786282,5.892913826,107.0050976,pomegranate,40.99,2010.7,0.78,0
33,23,45,20.00218987,85.83618191,7.116538883,112.337046,pomegranate,33.85,9728.26,0.82,0
4,14,41,19.85139326,89.80732335,6.430163481,102.8186358,pomegranate,67.03,2549.42,0.77,0
13,17,45,21.25433607,92.65058936,7.159520979,106.2784673,pomegranate,42.16,6026.47,0.78,0
39,24,39,23.65374106,93.32657504,6.431265737,109.8076178,pomegranate,34.5,4222.28,0.79,0
8,28,37,23.88404783,86.20613842,6.082571701,108.3121789,pomegranate,44.62,8331.58,0.37,0
91,94,46,29.36792366,76.24900101,6.149934034,92.82840911,banana,47.19,9674.41,0.73,1
105,95,50,27.33368994,83.67675197,5.849076099,101.0494791,banana,62.53,9825.65,0.56,1
108,92,53,27.40053601,82.96221306,6.276800323,104.9378,banana,66.25,1611.01,0.76,1
86,76,54,29.3159075,80.11585705,5.926824754,90.10978128,banana,41.41,2375.81,0.72,1
80,77,49,26.05433004,79.39654531,5.519088423,113.2297373,banana,68.09,7462.06,0.81,1
93,94,53,25.86632408,84.42379269,6.079178787999999,114.5357503,banana,46.06,8904.87,0.88,1
90,92,55,27.00932084,80.18546798,6.13465588,97.32531705,banana,39.33,4086.19,0.48,0
108,89,53,29.55054817,78.06762846,5.808497603999999,99.34482238,banana,68.8,8734.05,0.77,1
108,88,55,26.28845991,83.390039,5.891458107,113.8729798,banana,69.3,2415.99,0.43,1
105,77,52,29.16226551,76.16151562,5.816622478999999,100.0075679,banana,35.0,8450.9,0.58,0
118,88,52,28.65003945,82.68752542,5.8431631610000005,98.75084366,banana,34.87,7465.73,0.87,0
101,87,54,29.07311132,76.50045221,6.376756632999999,100.1692639,banana,45.16,3929.31,0.91,1
95,75,50,28.08166093,75.26429821,5.623615687000001,118.2761894,banana,67.41,9103.06,0.91,1
106,85,53,27.1994597,78.80860679999998,5.91505509,99.72430835,banana,54.72,4167.21,0.66,1
86,95,49,28.05484146,78.04602887,6.458714879,108.3957179,banana,53.61,9675.66,0.35,1
83,79,55,25.14748006,83.34688193,5.565028635,98.66679427,banana,38.77,1721.11,0.65,0
85,95,47,25.94019018,78.3422098,6.211833161,119.84797,banana,43.7,3246.79,0.8,1
109,79,45,27.66752761,79.68542782,6.490074429,108.66464,banana,63.73,3999.85,0.81,1
100,76,45,25.56703012,75.94067692,5.590236025,102.7867717,banana,44.68,4194.4,0.62,1
117,86,48,28.6956201,82.54195839,6.225225238999999,116.1616839,banana,53.93,7399.26,0.56,1
114,94,53,26.33544853,76.8532006,6.190757458999999,118.6858263,banana,58.93,2739.83,0.61,1
110,78,50,25.93730186,78.89864446,5.915568968,98.21747528,banana,68.38,8355.42,0.4,1
94,70,48,25.13686519,84.88394407,6.195152442,91.46442491,banana,59.79,1230.96,0.87,1
80,71,47,27.50527651,80.79783998,6.156373499,105.0776992,banana,68.5,9393.06,0.79,1
114,79,51,26.21009246,82.34429458,6.313197204,112.0700033,banana,47.29,6398.17,0.52,1
88,78,45,29.10403455,79.19588629,6.324270089,92.07835761,banana,68.69,5755.39,0.96,1
112,73,48,29.244063800000006,77.32017166,5.7074889870000005,90.66727868,banana,64.97,5941.43,0.74,1
117,76,47,25.56202173,77.38229006,6.119216009,93.10247183,banana,61.73,8870.5,0.82,1
111,87,48,26.3985515,81.36028902,5.571401169,98.16752001,banana,66.18,6393.42,0.78,1
89,83,47,28.09577643,77.79586769,5.63127166,109.5408614,banana,50.71,6566.41,0.67,1
93,91,47,27.84767901,83.31110751,6.101241579,117.2878912,banana,41.43,2746.95,0.35,1
92,81,52,27.39341554,81.4654833,6.438137278999998,94.31102057,banana,54.63,4475.26,0.89,1
105,74,45,25.14517635,81.38204104,6.098369122,119.218154,banana,40.53,9813.1,0.37,1
102,71,48,28.65456263,79.28693687,5.695267822000001,102.4633775,banana,66.5,6442.46,0.96,1
94,91,51,29.16093424,76.67484233,5.6180944460000015,109.575944,banana,34.37,6669.74,0.39,0
116,71,47,27.57278064,82.0638878,6.435785799,91.34276507,banana,67.42,5379.3,0.98,1
117,79,49,25.40909896,82.36208097,6.176644228,112.9794804,banana,33.65,3832.84,0.77,0
119,72,55,25.99069521,83.33983116,6.220643671,112.0777152,banana,35.95,4489.77,0.57,0
99,73,53,26.29039046,81.06003778,5.8717022110000014,118.6730366,banana,62.11,2752.88,0.98,1
91,84,52,29.14827211,78.71024836,6.390741836,117.536781,banana,50.31,8929.32,0.79,1
80,90,47,26.59743595,79.35898915,6.21084479,107.3944717,banana,38.32,6267.99,0.37,0
101,70,48,25.36059237,75.03193255,6.012696655,116.5531455,banana,57.32,6884.52,0.5,1
108,89,53,29.12036889,80.18080728,5.908770059,112.3982055,banana,31.2,7088.14,0.36,0
100,80,52,27.53911354,77.25629897,6.049801781,110.3262123,banana,66.64,1325.14,0.37,1
109,91,53,29.66727337,83.51014178,6.010095852999999,110.2511102,banana,69.16,2240.05,0.46,1
82,78,46,25.05802193,84.97323747,5.738678895,110.4408803,banana,45.52,7440.4,0.9,1
106,70,55,25.86824781,78.52399914,5.74055541,116.3019555,banana,50.11,4368.14,0.82,1
90,86,52,25.85036988,81.95580471,5.793260262,119.08561709999998,banana,31.27,9460.41,0.63,0
83,95,50,26.51682337,77.79913575,5.50947065,108.8547508,banana,47.26,9026.88,0.69,1
119,90,48,28.66725136,79.59242542,5.986442306,118.2583441,banana,56.01,5611.88,0.76,1
107,72,45,28.14938935,81.54448882,5.790768046,91.40508414,banana,42.81,9234.44,0.98,1
116,81,55,26.42313317,83.69950440000002,5.915546415,95.12322062,banana,42.21,1536.96,0.4,1
101,75,50,26.59386409,81.40740301,6.242528277999999,109.9825551,banana,54.48,6678.12,0.48,1
93,81,50,27.71822477,76.57853189,6.0360792660000016,102.2099836,banana,50.19,7260.72,0.83,1
95,75,45,28.98333432,82.95958244,5.829898502000001,109.022564,banana,42.63,3724.9,0.55,1
107,71,55,29.42017919,83.96754496,6.088064451,117.229079,banana,36.43,2494.06,0.71,0
83,94,47,27.39872329,81.10523402,6.469370954,112.1355384,banana,64.19,8207.66,0.34,1
102,73,54,26.4020227,84.41007614,5.720726906,111.0162259,banana,46.98,3898.8,0.35,1
86,79,45,27.81251452,82.69285419,5.80766417,99.20961514,banana,37.45,5285.81,0.89,0
117,86,53,25.19640218,83.55829874,5.703381727999999,115.8586081,banana,46.35,8028.66,0.92,1
111,79,53,28.31193338,75.77363772,6.165001277999999,119.695765,banana,61.13,4241.53,0.39,1
95,74,50,25.90113128,80.47152737,6.002481605,110.10323,banana,39.28,2644.75,0.8,0
91,75,55,27.48612983,76.11239849,6.212369363,109.2768851,banana,37.01,4093.19,0.97,0
93,83,46,29.38254012,83.50423735,5.765308943,109.2486647,banana,50.24,1808.44,0.48,1
92,85,51,29.22118628,81.08183635,5.740764682000001,108.8616474,banana,34.7,3962.36,0.66,0
104,80,54,27.09062164,81.33506906,5.879119455,110.1331182,banana,55.98,9503.57,0.32,1
103,72,51,26.12643374,81.81365007,6.099478745,104.4812858,banana,47.45,2664.36,0.5,1
92,75,45,29.01207743,77.95192527,5.674403358999999,90.43495443,banana,64.24,7890.01,0.65,1
93,85,49,27.96799119,79.28625709,5.694243847,119.4765557,banana,45.26,6193.38,0.31,1
120,87,52,28.0764455,76.05522115,5.905494703,118.99235729999998,banana,35.81,2646.5,0.36,0
108,72,46,25.16278237,84.97849241,6.110844721,90.94554618,banana,48.98,9971.13,0.36,1
105,88,54,25.78749808,84.51194224,6.020445317,114.2005455,banana,64.31,3757.58,0.59,1
98,79,50,25.34119774,84.47321314,6.435917308,91.06493353,banana,35.34,2395.44,0.77,0
111,88,55,29.44795403,78.34971537,5.505393832999999,96.45042585,banana,34.76,5603.25,0.45,0
97,74,45,26.47522633,78.51833782,5.677719902000001,113.1161095,banana,54.84,3979.18,0.99,1
95,82,48,27.39489579,83.31172003,5.719014989,92.78133617,banana,41.44,3694.75,0.66,1
89,91,55,25.08347445,80.26173100000003,6.275572297999999,94.32961456,banana,45.01,4419.05,0.63,1
89,85,55,26.671983500000003,76.48541655,6.275384607,91.73358569,banana,36.58,4767.19,0.88,0
118,88,51,25.44926208,79.49221962,6.201911642000001,100.6619171,banana,33.51,5612.64,0.69,0
101,92,45,28.22776705,80.64303840000002,5.758054257,98.00403016,banana,33.46,3361.99,0.66,0
99,92,47,28.127950899999995,77.48247073,6.3239336470000005,103.5045395,banana,50.29,5934.6,0.63,1
82,77,46,28.9470467,82.1888998,5.901100841,95.83016448,banana,61.44,4321.45,0.7,1
90,86,55,27.96236771,84.15403614,5.644486582000001,97.55986676,banana,33.98,3747.11,0.41,0
95,88,52,28.00316034,78.90085998,6.235461772000001,94.68180316,banana,67.96,2428.57,0.6,1
104,73,46,29.1400919,80.1190228,6.28236237,90.45142867,banana,48.58,9476.83,0.3,1
102,73,52,27.9122104,83.36307683,6.356090905,90.24211529,banana,51.84,7851.33,0.84,1
100,74,52,25.43480512,81.53977797,5.837258235,96.47800391,banana,63.87,2057.86,0.74,1
94,89,48,28.55980972,84.51602322,5.653437902,111.0843029,banana,30.91,1887.85,0.86,0
99,70,46,26.59580783,82.99556744,5.727469947,100.5123341,banana,64.17,9214.13,0.84,1
112,87,48,27.19711623,77.39706290000002,6.200111067999999,99.46950465,banana,36.36,5219.83,0.51,0
117,82,45,25.29391516,79.29122198,5.614471478,105.4220251,banana,53.37,1025.22,0.4,1
96,86,51,29.90888522,76.98740841,6.257369799,91.99964712,banana,55.58,4346.45,0.47,1
113,85,45,27.94972463,76.63713353,6.037430836,109.0921631,banana,30.13,4406.53,0.91,0
105,93,46,25.01018457,78.76260938,5.760457558,108.3690513,banana,44.17,7047.03,0.8,1
85,89,51,29.21144871,84.70189923,6.1581644220000005,108.5501443,banana,48.61,7816.1,0.84,1
108,94,47,27.35911627,84.54625006,6.387431382999999,90.81250457,banana,41.31,7826.56,0.62,1
92,81,52,28.0106804,76.52808057,5.891413895,103.7040783,banana,56.79,1426.85,0.63,1
110,71,54,28.67208915,82.20793613,5.725418961,94.37987496,banana,43.5,6740.07,0.92,1
82,75,55,27.34585147,78.48738349999998,6.281069505,92.15524332,banana,52.42,9438.05,0.86,1
117,81,53,29.50704598,78.20585613,5.507641777999999,98.12565829,banana,35.58,5415.65,0.91,0
2,40,27,29.73770045,47.54885174,5.954626604,90.09586854,mango,41.07,3086.45,0.4,1
39,24,31,33.55695561,53.72979826,4.757114897,98.67527561,mango,33.82,6345.25,0.53,0
21,26,27,27.00315545,47.67525434,5.6995869720000005,95.85118326,mango,66.51,6001.73,0.97,1
25,22,25,33.56150184,45.53556603,5.977413802999999,95.70525913,mango,38.04,5973.69,0.79,0
0,21,32,35.89855625,54.25964196,6.430139436,92.19721736,mango,34.21,4227.04,0.95,0
20,19,35,34.17719782,50.62161586,6.113935087000001,98.00687989,mango,43.05,3942.0,0.94,1
19,21,34,30.01592643,53.19212381,5.074272692,97.72843182,mango,45.86,6085.2,0.66,1
18,17,31,31.74592134,45.16127859,5.667507706,93.75441586,mango,36.68,8251.58,0.3,0
11,36,33,35.99009679,52.22780489,5.978634285,95.3713484,mango,38.84,3349.63,0.55,0
30,28,30,31.86641378,52.19331595,5.064613314,98.46768642,mango,40.2,7493.76,0.61,1
18,19,27,27.75518664,52.34605806,4.772385986000001,94.11213345,mango,68.67,5106.24,0.46,1
23,23,27,34.72413192,51.4271781,5.161148592,97.31258083,mango,60.44,8012.93,0.31,1
37,30,34,27.53907547,53.63549533,6.797779227,99.35408185,mango,38.18,2402.79,0.96,0
11,27,30,27.69637763,48.56224879999999,6.39474303,89.85646496,mango,32.52,3273.33,0.53,0
12,19,31,27.25373364,52.66319725,5.566704378,91.87312479,mango,66.71,3217.42,0.61,1
3,28,33,30.33723921,48.88704844,5.755049971,94.42850522,mango,62.44,8648.01,0.81,1
37,38,32,31.85744939,45.53106268,5.417340525,91.55845821,mango,49.69,1508.01,0.53,1
26,37,30,35.39986338,49.45962621,6.166173833999999,97.41054011,mango,40.41,1041.71,0.46,1
14,18,30,29.80747243,52.13797867,5.191265116,95.74606104,mango,54.07,6554.0,0.39,1
40,16,35,34.16438906,54.16482251,4.954739564,98.33351125,mango,40.44,4485.48,0.57,1
4,20,25,28.93270187,47.94053996,5.664587011,99.9834242,mango,57.22,5940.09,0.32,1
36,25,33,27.98392787,53.33018851,5.548584852,99.61465679,mango,45.9,6793.66,0.56,1
30,17,31,31.20478173,54.49960506,6.804437106,94.62954663,mango,55.3,3885.48,0.84,1
28,37,28,32.13409675,50.52559148,6.097869767000001,98.63333684,mango,67.38,8904.48,0.86,1
38,15,30,28.91862016,48.13974548,5.075504537,97.01331604,mango,36.84,4136.91,0.66,0
12,37,30,31.09779147,47.41196659,4.546466109,90.28624348,mango,56.68,6535.69,0.93,1
38,19,31,34.73823882,49.08864345,5.855119267999999,90.65022183,mango,34.91,4142.8,0.67,0
8,33,29,29.98080499,49.48613279,6.442393461,91.82271568,mango,66.86,2972.92,0.48,1
15,27,28,33.80398664,46.12866113,4.507523551,90.82549241,mango,57.29,2617.28,0.78,1
34,16,25,30.07202564,50.96040505,6.10729559,92.09609766,mango,56.98,4207.75,0.98,1
11,36,31,27.92063282,51.77965917,6.47544932,100.2585673,mango,50.05,8982.54,0.6,1
33,29,34,31.40948821,49.21729127,6.832979508999999,92.99739415,mango,46.06,5590.89,0.69,1
12,31,26,35.7877738,51.94190321,5.395275719,100.2160615,mango,54.44,8343.8,0.64,1
12,34,28,33.36140093,45.02236377,6.13526938,98.81596545,mango,56.57,7300.35,0.84,1
5,16,31,35.96054636,48.69677802,4.555688532,98.00644238,mango,68.63,5636.99,0.51,1
1,30,29,28.33333307,51.39586505,6.4341977560000005,91.67241761,mango,50.45,8376.3,0.43,1
16,35,31,32.27652024,50.19368841,5.316875978000001,95.99487068,mango,30.89,5524.34,0.54,0
35,18,26,31.99490489,50.84881347,5.279388967,97.38741498,mango,53.41,7936.99,1.0,1
4,40,26,27.58258929,48.56916221,6.720041791,95.8445641,mango,33.1,1875.78,0.37,0
9,29,34,29.38471637,45.88744691,5.72742254,100.8124659,mango,52.29,2195.04,0.91,1
2,38,33,32.38697531,53.2328243,4.691396195,90.21633216,mango,58.62,5906.84,0.89,1
26,32,32,30.91471455,49.92963856,6.810186079,90.14047759,mango,63.32,5194.55,0.97,1
34,38,31,35.37775595,45.58110023,6.454045329,97.41586402,mango,69.66,9234.47,0.78,1
5,32,33,32.32362177,52.58967710000001,5.842763773,93.36718816,mango,67.69,8337.25,0.91,1
31,29,26,28.22373428,47.40519056,5.024124683999999,97.76832322,mango,60.83,4083.8,0.47,1
34,34,35,27.27433181,47.16808054,6.422710539,95.257992,mango,30.85,5717.93,0.72,0
36,19,32,27.10710832,50.70880979,4.94295037,92.37238878,mango,55.93,3402.93,0.95,1
7,17,26,34.89226666,48.75613373,6.414526606,91.63074547,mango,38.18,5073.77,0.3,0
38,15,27,33.7462686,48.50387598,6.777788126,92.26439205,mango,51.07,6034.1,0.88,1
5,19,25,27.351105600000004,54.43945147,6.441328044,96.27792547,mango,46.45,8499.94,0.94,1
37,36,26,32.89300162,52.61323969,4.650536197,94.49161372,mango,45.84,1589.22,0.98,1
21,31,32,35.38598705,51.42664176,5.254532213,90.29643888,mango,47.27,2410.27,0.91,1
37,36,27,27.552973600000005,47.90859131,5.910634533,90.40332704,mango,62.49,2212.5,0.52,1
23,23,30,32.82141065,47.45553843,4.755273631000001,90.89173106,mango,45.16,3073.67,0.52,1
36,26,26,30.17294105,51.0845903,6.814630246,95.23444287,mango,66.22,1726.93,0.46,1
24,33,35,29.26382931,54.82257868,5.342866119,100.7586226,mango,57.19,5013.3,0.95,1
26,18,30,32.06097197,51.08494181,6.336234623999999,96.59816497,mango,60.41,3214.6,0.9,1
22,17,26,28.69818144,47.71875722,4.754435025,99.642454,mango,46.67,5748.44,0.86,1
11,34,32,29.14305008,49.40983294,6.831706773,97.55155537,mango,42.26,9806.13,0.61,1
29,35,28,28.347161100000005,53.53903102,6.9674177660000005,90.40260445,mango,33.89,7254.34,0.82,0
22,28,26,27.67256197,45.41692012,4.947683034,92.84991507,mango,35.81,1135.01,0.37,0
23,24,32,28.1218093,46.16888595,5.630619901,93.30247448,mango,40.63,6632.6,0.67,1
1,35,34,30.79375683,46.69536813,6.27339822,92.21318555,mango,50.69,1577.97,0.87,1
2,24,34,28.89409382,54.80750249,6.472774648,94.76322976,mango,65.64,5481.5,0.73,1
39,37,25,33.33024826,45.61143594,6.953246506,98.28583013,mango,33.59,1773.35,0.5,0
15,36,27,27.78912455,53.96886679,5.6437102160000014,91.01152997,mango,67.88,2882.14,0.83,1
3,18,31,31.65333432,48.20662669,6.392313972999999,91.09745581,mango,40.94,6306.52,0.56,1
8,38,32,29.75150773,46.73723302,4.981816523,91.405983,mango,32.62,5863.58,0.31,0
33,31,34,31.32995611,50.22287593,5.421265282999999,89.78216168,mango,62.14,1716.78,0.49,1
14,29,32,35.63627319,48.97047762,6.942520105,97.51952041,mango,38.23,2804.99,0.8,0
18,20,26,31.66524687,51.98594645,5.435840509,89.98024312,mango,52.23,7705.6,0.36,1
9,21,32,32.26935342,53.56092806,5.870116071,95.94035356,mango,49.82,7698.51,0.55,1
20,30,27,27.81005614,51.59445462,4.74910393,95.89898581,mango,41.27,4167.41,0.43,1
9,38,25,34.58561471,50.34035336,5.497946899,100.3060719,mango,34.68,1985.0,0.85,0
26,24,34,31.27180992,52.23810152,6.811291098,89.74409017,mango,54.15,2568.89,0.91,1
31,36,29,33.93679864,52.72170281,6.460542749,97.4611918,mango,32.64,7100.98,0.41,0
14,18,35,31.09154239,47.02058367,4.791146778,91.46664318,mango,33.6,1913.75,0.52,0
40,16,35,31.89356292,49.02450149,6.4841522000000005,89.59371481,mango,45.8,5396.24,0.58,1
28,27,34,32.45465292,50.69693751,6.526654345,95.04871605,mango,56.82,1773.23,0.52,1
0,17,30,35.47478322,47.97230503,6.279133738,97.79072474,mango,59.74,8915.79,0.6,1
1,29,29,27.32961444,49.30347234,6.052026047000001,93.53197359,mango,67.95,2649.17,0.39,1
2,36,31,30.90225239,49.95955487,5.73171945,91.77522598,mango,60.23,1183.61,0.47,1
12,27,26,29.09382275,45.5661059,5.32307197,96.23520043,mango,49.95,2040.95,0.42,1
7,28,35,30.02086169,46.78393776,4.66910839,96.63721027,mango,61.47,6574.72,0.95,1
0,36,26,34.13072188,51.25786185,5.101206389,96.38808001,mango,54.09,8227.88,0.45,1
26,35,31,33.44619894,53.05980465,5.339556562,98.05089394,mango,40.97,8682.69,0.31,1
27,21,30,35.3915464,52.48823147,5.061081874,91.22881052,mango,38.56,7868.25,0.72,0
22,38,31,31.53356352,53.06009323,5.8211060360000015,98.57025046,mango,39.64,8651.81,0.46,0
22,18,31,30.764551500000003,47.93791463,5.956027059,90.38503469,mango,45.23,3375.9,0.62,1
28,23,28,30.01821337,50.09831810000001,5.676032581,96.08745082,mango,64.39,2439.81,0.44,1
7,31,27,31.32863689,47.59319575,6.524114355,94.67344737,mango,32.74,9019.1,0.45,0
29,34,26,33.88004781,54.39416048,6.2739536760000005,89.29147581,mango,61.58,6327.43,0.72,1
8,37,33,28.07802689,54.9640534,6.128167757000001,97.45373619,mango,45.65,2702.04,0.63,1
39,16,27,35.53845018,52.94641947,4.934964765,91.54560427,mango,45.71,4586.89,0.35,1
40,24,25,28.70595247,50.44030129,5.445008416,95.8946444,mango,30.1,3425.66,0.79,0
19,38,26,31.48451729,48.77926304,4.525722333,93.17221967,mango,43.71,3462.12,0.61,1
21,21,30,27.69819273,51.41593238,5.403908327999999,100.7720705,mango,57.79,8272.3,0.59,1
22,18,33,30.41235793,52.48100602,6.621623545,93.92375879,mango,67.05,7870.8,0.41,1
31,20,30,32.17752026,54.01352682,6.207495815,91.88766069,mango,52.06,8609.11,0.37,1
18,26,31,32.611261400000004,47.74916499,5.418475257000001,91.10190759,mango,37.68,3962.27,0.94,0
24,130,195,29.99677232,81.54156612,6.112305667,67.12534492,grapes,42.2,2848.76,0.57,1
13,144,204,30.7280404,82.42614055,6.092241627000001,68.38135469,grapes,34.59,6752.6,0.92,0
22,123,205,32.44577836,83.88504863,5.896343436,68.73932528,grapes,34.45,8973.5,0.58,0
36,125,196,37.46566825,80.65968681,6.15526103,66.83872293,grapes,66.23,1395.84,0.31,1
24,131,196,22.03296178,83.74372787,5.732453638,65.34440794,grapes,60.97,9226.86,1.0,0
2,123,198,39.64851881,82.21079946,6.253034534,70.39906054,grapes,57.68,5783.33,0.55,1
35,140,197,16.77557314,82.75241875,6.106190557000001,66.76285469,grapes,68.54,7496.09,0.48,0
11,122,195,12.14190714,83.56812483,5.647202395,69.63122027,grapes,61.61,3964.78,0.57,0
6,123,203,12.7567962,81.62497448,6.130310493,66.77844567,grapes,33.58,7048.06,0.72,0
17,134,204,39.04071989,80.18393287,6.499604931,73.88467027,grapes,56.48,8491.64,0.86,1
25,130,197,39.70772192,82.68593454,5.554831977,74.91506217,grapes,61.47,4671.19,0.84,1
27,145,205,9.467960445,82.29335466,5.800242694,66.02765219,grapes,53.62,8980.17,0.64,0
9,122,201,29.58748357,80.91934392,5.570290539,68.06417307,grapes,53.85,3936.18,0.73,1
16,139,203,17.82803682,80.96093443,6.27564088,65.84748763,grapes,49.3,5372.08,0.68,0
32,141,204,8.825674745,82.89753705,5.536645599,67.235765,grapes,54.89,2185.77,0.46,0
22,138,195,27.83487131,83.51444973,6.208196881,73.02882766,grapes,64.37,4076.89,0.47,1
31,144,202,11.02105378,80.55557235,5.870600622,68.23963161,grapes,59.07,3205.75,0.59,0
3,136,205,17.5862944,80.84806564,6.334771461,71.40654520000002,grapes,37.59,2185.26,0.65,0
28,122,197,19.89363946,82.73366439,5.856575335,69.66256816,grapes,31.5,6967.73,0.82,0
4,136,204,29.93707596,81.77713468,5.898944282,65.52279323,grapes,61.25,7402.21,0.77,1
39,145,201,36.73126647,80.58931938,5.775600435,72.24230804,grapes,49.15,8992.75,0.59,1
38,132,197,20.42094753,81.54185044,5.931101816,66.93065667,grapes,40.13,3831.5,0.77,0
36,133,198,25.51939719,83.98351748,6.2286454,69.17281221,grapes,41.57,9380.54,0.78,1
25,121,201,30.50734778,82.71775569,5.594240602999999,70.08200379,grapes,41.11,5289.15,0.55,1
15,125,199,18.426993600000007,80.55625868,5.569230319,69.75734306,grapes,39.31,5029.87,0.77,0
24,140,205,12.087022,83.59398734,5.93202852,68.66813363,grapes,31.93,8894.39,0.6,0
13,132,203,23.60115364,82.48336987,6.423216506,73.23901752,grapes,50.39,5986.63,0.63,0
5,126,197,12.80000387,81.20876367,6.417500829,67.10439401,grapes,48.65,7510.02,0.95,0
30,120,200,38.06099482,82.24729637,6.234904253,65.70148216,grapes,68.88,2194.73,0.89,1
23,142,197,39.06555518,82.03812973,6.000573725,69.30772897,grapes,58.25,6117.79,0.4,1
26,135,203,33.78372897,81.16314317,5.6851027689999984,74.53557341,grapes,41.08,9607.41,0.39,1
7,126,203,16.76201707,82.00335557,5.662140095,73.28712806,grapes,35.48,2585.54,0.31,0
32,139,198,35.89307536,82.66850729,6.358186848,66.53946559,grapes,42.29,7605.62,0.91,1
9,141,202,21.01245395,81.17931863,6.119495295,66.38448261,grapes,37.11,2441.76,0.89,0
20,142,196,10.89875873,80.01639435,6.207600782999999,68.69420397,grapes,54.58,6632.55,0.78,0
32,129,201,16.36251869,83.00471609,6.48754639,71.55665483,grapes,65.41,4589.52,0.92,0
3,134,199,20.28370163,81.32235739,5.81717753,71.06611222,grapes,55.33,8758.72,0.88,0
38,138,204,25.11108456,83.25447587,6.325480034,73.01026829,grapes,31.7,8133.01,0.32,0
14,131,198,33.4641162,83.86742974,5.562790949,67.92204319,grapes,55.74,5298.44,0.37,1
20,122,204,11.7976469,80.86325389,6.487369687,65.06962486,grapes,39.86,1177.63,0.51,0
40,126,201,11.36300891,80.03100049,6.116982944,71.18289431,grapes,50.21,2639.09,0.86,0
36,128,204,25.23542319,80.68700527,5.695792761,67.03840888,grapes,61.43,7874.92,0.57,1
11,132,197,15.99050693,81.23966573,5.7343170070000005,74.40198861,grapes,49.54,2920.49,0.59,0
0,137,195,22.4359017,80.18612085,6.329499832000001,65.3973168,grapes,35.42,8801.19,0.55,0
19,123,200,34.76086052,81.03544763,6.167013532,65.70430027,grapes,47.09,3053.77,0.79,1
31,136,197,31.11047251,83.34010951,5.653776057999999,71.43001582,grapes,35.83,5803.51,0.81,0
4,134,200,28.57828803,80.95628959,5.840256272,73.34232097,grapes,56.84,5590.91,0.38,1
39,139,201,41.18664903,81.01783402,5.5399808120000005,68.68895899,grapes,32.32,2659.14,0.99,0
8,127,196,27.02766138,83.17093908,5.833302165,70.95666003,grapes,44.98,8387.3,0.96,1
39,138,203,21.19339319,82.33098331,6.399433771,74.62834921,grapes,32.4,3288.27,0.84,0
32,120,204,10.38004759,83.44518113,6.138958698,67.39173790000001,grapes,34.3,5548.07,0.34,0
12,142,203,31.3115978,82.56407013,5.972850837999999,65.01095312,grapes,41.25,1748.21,0.44,1
8,133,195,20.46657776,80.97598029,6.456079585,71.29813872,grapes,35.16,8827.68,0.48,0
8,139,199,29.36947679,81.53996362,6.3364266670000005,66.13442813,grapes,65.78,9135.78,0.69,1
21,134,202,10.72302459,80.02130636,6.425419926,65.29821120000001,grapes,64.43,9643.66,0.82,0
40,140,195,14.97846952,80.49979873,6.2943956760000015,71.63437433,grapes,64.83,5760.87,0.92,0
39,127,202,15.3246651,81.67215994,6.477768039,71.60102999,grapes,64.13,6989.44,0.95,0
19,120,195,18.73932187,81.12109244,5.931538447,73.55807954,grapes,55.5,6451.3,0.99,0
21,139,201,19.3642553,83.36094029,5.980598579,67.15094741,grapes,64.86,6634.5,0.4,0
17,136,195,41.20733624,81.61051026,6.389783283,65.90227462,grapes,31.48,5569.3,0.56,0
33,139,203,33.34214482,82.51034633,5.693287415,70.68098614,grapes,47.3,6562.22,0.47,1
22,133,201,23.81995682,80.12211649,6.00299607,67.27398640000001,grapes,43.53,2827.64,0.62,0
32,130,196,40.66012294,81.24995984,6.372959542,74.03030056,grapes,58.62,8465.34,0.56,1
37,135,205,11.82768186,80.2827185,5.510924848999999,74.10225057,grapes,40.27,3175.01,0.48,0
15,140,195,13.28504331,83.54193816,5.69945282,65.80006004,grapes,60.35,7721.05,0.96,0
39,132,196,35.83089092,83.32560104,5.778594403,73.67984885,grapes,63.06,4633.13,0.86,1
40,121,199,26.18159716,81.03886263,6.315586313,66.05911698,grapes,38.34,9065.19,0.55,0
40,132,202,24.57558351,80.70695797,5.9718130060000005,69.706113,grapes,42.46,4343.88,0.45,0
29,142,203,29.67229086,83.71498986,5.891195653,66.48490371,grapes,46.21,4555.05,0.34,1
32,121,199,39.37102553,81.25353895,6.129812716,74.08101744,grapes,65.5,1926.15,0.63,1
6,140,205,17.66558428,82.92903419,6.313085601,69.8671263,grapes,41.45,4906.62,0.98,0
8,120,196,24.06679352,82.66396666,6.053662544,69.81855775,grapes,66.07,8705.99,0.46,0
34,133,202,15.31413469,80.09711412,5.804799142,74.82144653,grapes,63.45,8628.29,0.51,0
35,135,199,21.77466746,80.54942557,6.400719746,69.39630398,grapes,36.8,9633.58,0.77,0
16,145,199,26.91624843,80.76838926,5.953966361,69.30927185,grapes,68.62,5859.76,0.89,1
8,136,201,41.65602996,82.22118237,5.6092559920000005,74.19664838,grapes,43.11,8498.63,0.63,1
25,129,195,17.98667801,81.17712085,5.777271492000001,72.37127689,grapes,59.25,5809.7,0.75,0
16,130,201,29.12033769,82.79092939,5.682395429,68.8503047,grapes,38.8,1633.43,0.51,0
39,129,203,34.38922481,83.18392806,5.863996687,71.03001556,grapes,35.25,5193.19,0.97,0
38,135,203,41.36106301,82.79782954,6.444373116,69.92107482,grapes,66.75,7326.18,0.54,1
33,120,205,35.12158265,82.26890793,5.550832177999999,69.71518491,grapes,39.33,5089.9,0.53,0
35,125,204,19.6491772,80.15215777,6.107741787999999,73.69529586,grapes,63.17,6443.6,0.42,0
1,132,200,16.27852801,82.94270065,5.620745638,66.57462809,grapes,44.24,3770.88,0.88,0
39,140,203,21.11903604,80.63399198,6.349875906,69.27779761,grapes,51.31,4647.69,0.41,0
28,145,202,19.2077707,82.90428409999998,6.484323189,66.83113717,grapes,59.37,7474.77,0.52,0
6,128,200,25.96308415,82.57813624,5.838748311,70.31782647,grapes,67.58,3782.13,0.48,1
6,139,199,25.67385024,81.6212135,6.29099842,74.10919422,grapes,40.98,7223.98,0.95,1
29,122,196,41.94865736,81.15595212,5.638328481,73.06862952,grapes,35.32,1895.13,0.37,0
37,144,197,11.18994268,80.8084305,6.415555956,66.34234944,grapes,35.13,9693.07,0.77,0
38,120,197,17.5438296,82.94703302,6.323722572,73.77063744,grapes,54.8,3398.8,0.44,0
38,141,198,13.05809741,80.28297993,5.757009965,70.75633584,grapes,62.12,1213.24,0.31,0
14,121,203,9.724457611,83.74765639,6.1586894060000015,74.46411148,grapes,45.81,1156.14,0.65,0
6,125,204,27.92004934,82.93262435,5.7335398070000005,69.92092839,grapes,68.95,2670.27,0.96,1
32,138,197,9.535585543,80.73112694,5.908724337000001,69.44115171,grapes,41.34,7810.47,0.82,0
11,124,204,13.42988625,80.06633966,6.361141107000001,71.40043037,grapes,67.9,1194.45,0.65,0
23,138,200,9.851242629,80.22631717,5.96537863,68.42802444,grapes,44.93,1514.91,0.83,0
40,143,201,24.97256132,82.72828653,6.476757723,66.70016285,grapes,56.72,9442.35,0.82,0
6,142,202,27.23708304,82.94573346,6.224542938,70.42508897,grapes,42.39,9764.58,0.72,1
37,124,195,18.70679077,83.4795292,6.209928251,66.5964488,grapes,55.96,3961.98,0.92,0
35,134,204,9.949929082,82.55138983,5.841138354,66.00817551,grapes,62.83,8413.1,0.66,0
119,25,51,26.47330219,80.92254421,6.283818329,53.65742581,watermelon,45.88,4423.32,0.41,1
119,19,55,25.18780042,83.44621709,6.818261382999999,46.87420883,watermelon,43.84,5722.23,0.48,1
105,30,50,25.29954705,81.77527562,6.37620108,57.04147057,watermelon,65.02,4524.04,0.65,1
114,8,50,24.74631269,88.30866319,6.581587932000001,57.95826144,watermelon,45.13,9158.54,0.95,0
93,22,52,26.58740671,81.32563243,6.932739726,41.87540028,watermelon,52.17,4582.51,0.95,1
80,26,55,24.53442564,88.989272,6.140099215,49.11618732,watermelon,43.56,9050.67,0.49,0
85,27,45,26.0713757,88.7285657,6.467095849,57.79652846,watermelon,52.11,8775.35,0.89,1
85,22,53,25.96534238,89.77076659,6.849471704,59.46338556,watermelon,59.92,7784.53,0.37,1
82,22,45,26.22338015,85.34866045,6.512196212,54.60159289,watermelon,38.37,2164.29,0.99,0
118,13,54,24.41311871,89.81574032,6.039584629,44.07843475,watermelon,52.39,5128.08,0.52,0
83,25,53,26.49195283,80.04678201,6.057697106,57.72799157,watermelon,48.58,1137.37,0.6,1
86,15,47,24.04355803,84.18406764,6.423898762,53.78929956,watermelon,44.18,8254.45,0.47,0
101,10,47,25.5421695,83.31883376,6.936997681,57.57343233,watermelon,35.34,2204.26,0.56,0
119,9,50,26.74550678,83.9195902,6.251286661,40.794305,watermelon,44.2,6803.33,0.51,1
104,17,46,25.7131428,80.22972777,6.190015912000001,43.08961827,watermelon,63.83,1860.87,0.76,1
95,12,51,25.76484262,84.17269959999999,6.681606702000001,44.22066914,watermelon,42.58,7922.14,0.36,1
102,14,52,26.79489868,89.64815231,6.51075991,57.74091817,watermelon,66.41,7373.61,0.54,1
109,21,55,24.9004602,89.73524177,6.770278088,57.44942094,watermelon,41.27,8204.77,0.9,0
81,18,50,26.80750629,88.22874955,6.429788072999999,58.79889057,watermelon,43.26,6187.41,0.97,1
103,17,51,25.11189154,80.02621335,6.209888345,44.20656987,watermelon,52.6,7387.11,0.68,1
105,14,50,26.2148837,87.68839820000002,6.419052193,59.65590798,watermelon,42.84,5414.34,0.61,1
97,8,52,24.9103226,86.97190046,6.237861736,49.48575692,watermelon,58.67,4490.07,0.33,0
120,19,49,25.79448878,84.26830701,6.762471628999998,56.45229202,watermelon,69.79,4560.74,0.55,1
95,16,55,25.26931156,87.55055105,6.612847999,40.12650421,watermelon,38.04,1401.43,0.65,0
83,29,52,25.76402693,87.5931128,6.704688865,46.05122728,watermelon,67.69,6057.25,0.54,1
83,9,45,25.85483596,89.13163965,6.049609892,46.85176955,watermelon,40.97,5370.86,0.81,1
91,21,50,24.33528185,81.44030363,6.762030215,48.32113628,watermelon,64.18,8729.6,0.44,0
116,5,54,25.37601283,80.99313508,6.65398725,57.23028471,watermelon,31.3,2391.88,0.79,0
112,28,54,24.86094646,85.05318563,6.738030547,55.29563514,watermelon,46.34,8163.82,0.81,0
88,29,51,24.71885473,88.94568335,6.095689937,48.45978627,watermelon,35.73,9831.48,0.54,0
118,15,45,24.21495706,84.20576992,6.538006356,48.01138482,watermelon,41.1,1535.34,0.87,0
92,21,48,25.81692236,82.043255,6.377427122,54.82963379,watermelon,35.68,1952.54,0.4,0
106,14,45,24.47018505,84.16390229,6.417011754,57.26773002,watermelon,38.6,7028.38,0.79,0
99,5,47,24.13078816,84.84494575,6.649086972,51.19470197,watermelon,53.35,1589.01,0.74,0
98,8,51,26.1793464,86.52258079,6.25933595,49.43050977,watermelon,38.79,7651.79,0.46,0
108,22,46,26.17668721,86.72952049999998,6.121168559,53.33484977,watermelon,41.59,8154.27,0.99,1
119,7,55,26.03867719,84.6378378,6.031424482,44.3993381,watermelon,31.14,5103.58,0.7,0
117,27,48,26.53259325,82.39053979,6.835268183999999,54.30660782,watermelon,57.76,3137.5,0.32,1
109,10,53,26.81938687,87.8274604,6.5517503060000015,46.06193778,watermelon,66.89,1926.1,0.57,1
80,16,46,25.50405534,81.40297428,6.940236218,48.47833278,watermelon,49.04,4362.59,0.36,1
100,18,52,26.20234499,80.38266489,6.87606733,56.47941847,watermelon,33.28,9455.01,0.81,0
91,7,53,25.13735887,89.28272716,6.457216535,43.52897517,watermelon,32.64,9106.1,0.64,0
86,6,53,25.92030221,83.47202566,6.921847887999999,42.10681516,watermelon,68.27,2721.03,0.72,1
107,5,52,26.6634609,89.98405233,6.8814257460000015,57.40847165,watermelon,51.15,9741.5,0.99,1
103,16,49,24.06731461,81.64075303,6.915717008,51.75212401,watermelon,39.19,8577.37,0.42,0
101,20,48,24.6774157,82.75411437,6.206247493999999,57.05709413,watermelon,38.4,4705.72,0.71,0
85,25,47,26.11440416,87.64081095,6.29542477,58.48160844,watermelon,58.54,5403.88,0.69,1
84,7,51,26.81530456,87.65694462,6.399669044,55.74073582,watermelon,68.86,9581.09,0.89,1
102,28,54,25.15623099,80.27525115,6.862157042000001,55.49541453,watermelon,61.93,4121.79,0.46,1
98,25,52,25.2801372,83.15393658,6.224066378,49.29456609,watermelon,30.73,6917.58,0.63,0
97,25,50,26.22005978,80.90127035,6.093814669,49.08553937,watermelon,53.17,8882.85,0.41,1
90,16,45,24.92093261,80.61750795,6.291540277999999,50.55710813,watermelon,35.67,4318.12,0.64,0
95,12,46,26.21667586,81.01009354,6.32281728,54.65423596,watermelon,66.29,2883.2,0.85,1
82,23,49,26.81383586,87.21986949,6.873283991,51.70497792,watermelon,51.52,4607.46,0.86,1
82,25,51,24.31334971,87.47409052,6.074209622000001,48.11248366,watermelon,62.14,1615.03,0.68,0
110,28,46,24.29105004,88.04541346,6.49889585,51.26046418,watermelon,59.68,1324.55,0.76,0
118,21,51,24.42998931,86.33904774,6.678805092,48.58241822,watermelon,51.71,5139.77,0.95,0
120,20,45,25.66576039,88.6984228,6.114128685,54.22722466,watermelon,59.42,2341.65,0.47,1
91,7,52,25.07803672,83.46230461,6.405054243,56.39962921,watermelon,56.21,9189.49,0.64,1
81,6,55,24.88910524,85.87059083,6.110142735,51.70699144,watermelon,46.21,4107.83,0.52,0
101,13,54,25.42900869,82.91481799,6.828982708,56.34144589,watermelon,36.84,5402.37,0.63,0
101,17,55,24.37118217,87.1269128,6.451499763999999,44.63907691,watermelon,63.94,1477.65,0.35,0
111,6,53,26.493064500000006,88.59143088,6.313512998999999,46.06382209,watermelon,48.86,1361.48,0.65,1
107,10,49,25.83202912,89.00481725,6.755192025,45.24690619,watermelon,68.97,2074.01,0.41,1
115,11,46,24.41592661,89.39655519,6.623167177000001,40.32161859,watermelon,34.37,3916.37,0.77,0
84,25,52,24.37190239,81.2514818,6.12532356,44.20899581,watermelon,67.03,9993.8,0.33,0
120,7,47,24.24782473,83.03687902,6.653867608,54.76576239999999,watermelon,32.05,9026.3,0.96,0
91,12,46,24.64458469,85.49938185,6.343942518,48.31219031,watermelon,48.81,3468.23,0.61,0
89,22,52,24.89681131,86.10782926,6.217300786,53.14626213,watermelon,39.08,6737.02,0.61,0
113,19,46,25.41864024,81.12122989,6.286387658,49.52320689,watermelon,60.88,6875.69,0.76,1
97,22,50,26.26028739,86.14585891,6.769893799999998,58.97878791,watermelon,32.87,2516.73,0.36,0
117,30,50,24.90123934,87.20772913,6.744966312000001,46.59207341,watermelon,61.2,6966.49,0.3,0
90,14,52,24.84740848,89.20454622,6.391858432,59.67927244,watermelon,31.65,4901.02,0.41,0
104,23,47,26.98212846,86.70068316,6.770434148,42.91292205,watermelon,41.28,5554.69,0.64,1
81,16,45,26.90435747,86.25426228,6.727468157000001,59.75980023,watermelon,50.51,9273.09,0.32,1
88,5,47,25.86475496,86.67468041,6.662244646,41.16554802,watermelon,48.74,3595.35,0.52,1
92,7,45,26.70607759,81.14149505,6.944640222,51.51033554,watermelon,62.56,1471.18,0.49,1
81,18,50,26.44019475,80.91934337,6.507110986,47.81847573,watermelon,60.55,9469.89,1.0,1
111,5,55,26.283443,84.42478917,6.520663422,50.78669728,watermelon,59.75,6525.51,0.58,1
108,23,51,26.84366082,83.85039964,6.106500787000001,40.228644,watermelon,50.46,8009.83,0.62,1
113,30,50,26.03967219,83.9862443,6.277484042999999,43.87712348,watermelon,49.43,1401.16,0.31,1
83,10,53,24.92994759,85.00802358,6.195142279,48.75859458,watermelon,41.43,3903.18,0.51,0
101,11,51,25.50736962,84.24340241,6.792035575,44.2068997,watermelon,55.3,3124.75,0.46,1
114,21,55,25.4438391,87.93923120000002,6.472756256,57.51549686,watermelon,55.83,7812.76,0.8,1
99,6,45,26.12588914,86.5507939,6.000975617000001,40.71210074,watermelon,47.22,3969.08,0.71,1
92,20,55,25.10474753,87.52676159999999,6.5877912620000005,59.26519444,watermelon,48.92,3750.5,0.9,1
92,7,48,26.27520631,86.63249555,6.956508826,54.38748495,watermelon,30.28,3973.26,0.93,0
91,24,55,26.27061608,83.09194521,6.259086582999999,46.76837499,watermelon,65.92,5651.19,0.71,1
110,21,54,26.73690828,87.82430156,6.747537642,47.46447019,watermelon,42.94,6228.39,0.7,1
112,25,51,25.04746944,85.5667282,6.932537231,56.72496677,watermelon,38.96,3920.82,0.99,0
89,25,54,24.69368934,85.56967628,6.353107392999999,48.99390828,watermelon,50.24,9044.05,0.68,0
100,10,53,24.54356968,84.60808277,6.211748957,42.00660251,watermelon,63.77,9483.05,0.43,0
83,22,54,25.89762315,81.96664832,6.277245253999999,54.49960057,watermelon,49.06,1595.11,0.84,1
95,14,50,26.6333118,84.31756844,6.560443519,56.31866159,watermelon,35.0,3281.94,0.68,0
119,30,49,25.35794749,80.45846265,6.903020221,47.72078245,watermelon,48.48,4740.46,0.37,1
97,12,47,25.28784623,89.63667876,6.765094963999998,58.28697664,watermelon,38.5,8254.45,0.79,0
110,7,45,26.63838589,84.69546874,6.189213927000001,48.32428609,watermelon,67.69,4552.42,0.72,1
96,18,50,25.3310446,84.30533791,6.904241707000001,41.53218699,watermelon,53.06,3123.68,0.39,1
83,23,55,26.89750174,83.89241484,6.463271076,43.97193745,watermelon,69.97,4239.98,0.64,1
120,24,47,26.98603693,89.4138489,6.260838965,58.54876687,watermelon,58.18,2446.16,0.95,1
115,17,55,27.57826922,94.11878202,6.776533055,28.08253201,muskmelon,58.8,7700.47,0.43,1
114,27,48,27.82054812,93.03555162,6.528404377999999,26.32405487,muskmelon,42.07,2684.43,0.88,1
101,25,52,29.09910406,94.22237826,6.750145572,22.52497327,muskmelon,51.35,4226.2,0.34,1
118,18,52,28.04943594,90.83130708,6.562832807,20.76223014,muskmelon,42.46,2293.92,0.47,1
95,26,45,29.91690582,94.55695552,6.117530021,28.16057247,muskmelon,64.36,6878.86,0.45,1
81,25,49,29.86895762,93.25103208,6.076459669,26.26243014,muskmelon,64.97,7737.76,0.85,1
117,24,53,29.17220859,92.21405224,6.293486295,21.30290472,muskmelon,53.85,3660.92,0.64,1
114,30,51,29.24908541,90.06998135,6.069171847000001,25.93496537,muskmelon,42.32,4216.73,0.57,1
113,6,52,27.76317235,90.35567642,6.740983646,25.21609113,muskmelon,45.61,2132.87,0.34,1
108,26,52,28.82629037,94.26765349,6.201797639,26.23838511,muskmelon,54.02,5016.27,0.41,1
81,30,48,28.52379742,92.09688432,6.041027474,29.86681385,muskmelon,49.45,4459.03,0.48,1
115,9,52,29.06785065,90.97685539,6.019372459,29.1194739,muskmelon,45.61,9638.72,0.57,1
83,7,45,29.08417927,90.73891887,6.704104127000001,25.33014238,muskmelon,39.66,4917.71,0.79,0
84,21,55,28.47090661,94.79453182,6.494251024,21.08484101,muskmelon,44.76,5046.47,0.91,1
109,26,45,28.27973674,90.38971208,6.224535448999998,21.58992507,muskmelon,44.99,9893.96,0.42,1
95,27,55,28.47212559,91.21322065,6.160414414,20.88620369,muskmelon,64.27,2473.67,0.9,1
119,5,55,29.68846716,94.30111601,6.168757984,26.83924845,muskmelon,53.14,1378.92,0.74,1
110,14,51,27.02415146,91.66737633,6.085444691,21.26034986,muskmelon,56.08,4370.91,0.61,1
82,18,48,29.09588297,94.16748386,6.1590508160000015,26.70581328,muskmelon,56.82,8251.04,0.82,1
87,14,48,29.69238699,92.58862544,6.606033244,29.1102594,muskmelon,38.15,9448.77,0.34,0
85,9,53,28.20619412,92.86798698,6.447662945,28.78654515,muskmelon,62.68,2892.59,0.42,1
100,6,53,29.05248036,93.92217834,6.105909623,23.66620626,muskmelon,42.12,6002.62,0.69,1
107,12,46,29.57240298,93.61870344,6.559763394,27.56918621,muskmelon,38.06,1856.62,0.67,0
91,13,47,29.10968327,92.43510994,6.14410903,27.95602304,muskmelon,69.96,2058.96,0.4,1
102,25,50,28.20480805,92.91440379,6.099662369,20.36001144,muskmelon,62.71,2223.97,0.7,1
117,25,53,29.11858526,92.12543021,6.413927319,24.52020164,muskmelon,55.22,7377.51,0.48,1
85,21,52,29.62800691,90.10051615,6.0751441160000015,23.69586761,muskmelon,43.11,5554.12,0.36,1
104,25,55,29.81196601,90.36881284,6.123802502,22.68766503,muskmelon,36.57,1400.21,0.51,0
102,24,54,27.72338349,90.93897939,6.698468621,22.81863447,muskmelon,43.33,5487.02,0.48,1
116,25,50,29.26092798,92.92367701,6.088885814,28.70627683,muskmelon,39.82,2330.19,0.49,0
100,17,48,29.72791119,94.29753295,6.367800632000001,26.52364146,muskmelon,54.14,5220.97,0.51,1
110,25,54,28.91105641,90.78413842,6.425930938,23.44398467,muskmelon,39.7,3841.33,0.52,0
104,25,51,28.96361426,93.88482153,6.469983276000002,23.56130173,muskmelon,47.71,5022.38,0.83,1
107,11,54,28.59052369,91.33617236,6.094016337999999,29.44008034,muskmelon,32.76,8431.97,0.53,0
98,26,52,27.33897716,90.69759008,6.150090898999999,28.69113835,muskmelon,30.67,5029.7,0.75,0
88,17,52,29.90415889,90.75284363,6.646962425,25.37828397,muskmelon,45.26,2779.93,0.69,1
87,25,46,27.42711692,90.02696201,6.379690748,21.7508774,muskmelon,62.18,8101.63,0.97,1
120,8,46,29.55657523,90.70937262,6.732834334,28.36535596,muskmelon,57.1,7401.33,0.92,1
95,13,46,29.84070774,93.76312893,6.126019932,23.28207838,muskmelon,64.18,4835.95,0.52,1
108,22,47,28.53545677,91.72742702,6.161123579,25.1290048,muskmelon,32.36,5874.81,0.43,0
82,13,52,27.11535046,94.86907886,6.442810053,26.51924782,muskmelon,45.18,2369.23,0.66,1
120,23,55,27.84492803,91.60666594,6.732049075,26.47844429,muskmelon,65.5,9934.59,0.74,1
110,22,47,29.03157242,91.82172592,6.243673725,24.93861254,muskmelon,66.67,3087.05,0.31,1
95,23,45,27.82424457,90.56698742,6.266208727,21.19014526,muskmelon,65.91,3930.43,0.65,1
106,10,49,27.72653142,92.00687531,6.350623739,20.21126747,muskmelon,39.98,7967.79,0.55,0
99,12,52,28.69708334,94.30759855,6.002927293,22.21807088,muskmelon,48.65,8432.99,0.75,1
106,20,51,29.73019662,90.97015715,6.342573112,20.49035619,muskmelon,46.53,5289.85,0.98,1
83,11,53,29.54097171,92.91778307,6.163921247999999,21.9653077,muskmelon,58.59,7739.91,0.34,1
117,19,55,28.80311922,91.78336933,6.121745389,25.16359891,muskmelon,55.27,9769.75,0.84,1
98,26,49,27.29035669,90.53330091,6.130160472999999,23.49535234,muskmelon,48.51,2652.29,0.9,1
113,20,48,27.46583649,94.87679041,6.440584681,27.27899847,muskmelon,63.56,8072.07,0.76,1
101,17,47,29.49401389,94.72981338,6.185053234,26.30820876,muskmelon,45.5,8365.77,0.45,1
98,7,45,27.79161808,92.51054946,6.157724816,26.85422624,muskmelon,48.97,9308.9,0.89,1
93,22,48,29.12533739,91.52291141,6.776987974,21.90440445,muskmelon,42.04,5639.33,0.88,1
95,21,47,27.93114233,93.56161439,6.431970877,20.66127836,muskmelon,50.81,3108.64,0.88,1
109,12,48,29.45771748,92.12534736,6.708743843,20.76212031,muskmelon,44.44,3274.58,0.77,1
118,12,47,27.96872279,92.17444796,6.010739645,28.94766949,muskmelon,36.71,5920.3,0.44,0
100,14,49,29.48882958,91.07574233,6.365956657999999,26.01909355,muskmelon,53.43,6102.26,0.31,1
89,9,47,29.47156259,90.77069618,6.6683827660000015,28.75226067,muskmelon,40.94,4306.63,0.43,1
95,16,46,27.076726500000003,90.14362622,6.74669542,24.4514648,muskmelon,61.34,1499.57,0.89,1
95,7,45,27.30008597,90.80015308,6.031665834,25.09484511,muskmelon,60.62,2904.17,0.85,1
87,6,45,29.82729394,90.79007335,6.40077205,22.84203589,muskmelon,41.39,1228.11,0.89,1
93,20,50,29.93061247,93.22980899,6.448792688999999,24.34814338,muskmelon,52.84,9037.19,0.83,1
84,29,49,29.94349168,93.90741192,6.251420275,20.39020503,muskmelon,53.09,9106.54,0.83,1
111,5,47,28.03306461,91.47355778,6.2744528110000015,21.17924769,muskmelon,37.3,9531.56,0.4,0
111,5,52,29.8843055,94.0371147,6.135996372,21.0000988,muskmelon,68.49,9900.49,0.41,1
111,15,54,27.7058373,92.91185695,6.194090172,22.06207161,muskmelon,46.88,4985.11,0.42,1
89,11,47,29.78714005,94.65343534,6.327822962000001,27.8659442,muskmelon,38.52,5147.83,0.95,0
110,15,48,28.57819995,92.86597437,6.2125672110000005,27.598717800000006,muskmelon,54.92,9158.89,0.42,1
95,30,52,29.48069921,90.33698678,6.640470862999999,26.0365768,muskmelon,50.08,3381.69,0.88,1
115,12,52,27.51492243,94.96218673,6.685553129,21.01796432,muskmelon,69.47,1376.52,0.72,1
120,25,50,28.05457761,94.81637388,6.327210469,21.84869328,muskmelon,69.74,6699.16,0.43,1
102,11,45,29.03167341,93.12603235,6.35544263,24.15591199,muskmelon,48.25,6842.78,0.85,1
94,5,55,28.5854649,91.89216849,6.085682343999999,26.88372572,muskmelon,43.29,1060.78,0.68,1
84,18,46,27.08808014,93.42402083,6.781050372999999,25.32159689,muskmelon,39.99,5531.0,0.73,0
107,22,54,27.99611732,90.84660317,6.630301421,21.61893763,muskmelon,51.0,1097.18,0.95,1
80,18,52,27.87317436,91.14849627,6.484799661,24.05207925,muskmelon,43.21,3398.26,0.83,1
86,18,45,28.96586565,90.71832938,6.566759102000001,22.25838137,muskmelon,51.0,1803.49,0.83,1
113,28,48,28.87726019,92.48839665,6.170520517999999,24.44267592,muskmelon,38.89,2146.71,0.87,0
115,18,53,29.17052093,94.19790371,6.0124803510000016,22.06994464,muskmelon,39.48,6449.6,0.43,0
82,20,54,29.34033587,90.01506395,6.541150335,21.44532907,muskmelon,48.18,7819.75,0.45,1
98,22,47,29.07265321,91.91533173,6.341400922,28.83568362,muskmelon,34.28,4273.38,0.62,0
117,25,54,28.68275966,92.50969311,6.150686363999999,29.11187663,muskmelon,33.95,2126.68,0.81,0
83,15,49,28.92705913,91.39356832,6.438008152999999,23.20076686,muskmelon,39.68,5778.0,0.35,0
120,16,51,27.99901833,91.64193051,6.547041902999999,23.28618248,muskmelon,57.6,9687.69,0.86,1
111,5,50,27.59350075,91.79742953,6.399891457000001,24.84266123,muskmelon,42.08,1857.06,0.4,1
85,21,47,29.87331077,90.60932469,6.186770318,24.69720481,muskmelon,43.0,8886.64,0.46,1
90,23,54,28.55852465,90.45773041,6.159020864,27.26588346,muskmelon,45.5,2393.93,0.33,1
99,29,55,29.19378695,91.46241065,6.660954816,26.48240255,muskmelon,50.51,1948.92,0.39,1
102,11,47,27.98780984,92.78226196,6.504906978999999,27.14509034,muskmelon,62.82,1111.7,0.62,1
80,18,51,28.05380704,91.81758779,6.706053225,20.76582087,muskmelon,59.55,2791.11,0.89,1
87,21,52,27.350629600000005,94.29119509999998,6.067665497999999,27.21244021,muskmelon,32.54,4270.21,0.52,0
114,8,52,29.34081108,94.5513539,6.419083092,28.22908103,muskmelon,56.14,3878.56,0.72,1
99,6,46,28.61475136,94.22253035,6.39637861,28.98574189,muskmelon,53.82,9368.86,0.49,1
89,25,50,27.04863538,91.34685096,6.375923383,25.08146686,muskmelon,43.23,4358.56,0.81,1
96,13,55,29.5275305,94.57459443,6.700337732,21.13545688,muskmelon,67.71,8470.83,0.35,1
82,26,47,28.50416396,93.46806467,6.565312652999999,24.20007242,muskmelon,36.98,9942.69,0.6,0
106,21,52,28.89578588,94.78993038,6.286515359,23.0362503,muskmelon,62.72,8219.6,0.37,1
90,15,52,27.04927452,91.3821731,6.448061578,23.65747461,muskmelon,35.99,1316.64,0.38,0
106,16,54,28.96017885,91.69532178,6.585872508,24.7458198,muskmelon,33.15,8051.07,0.32,0
24,128,196,22.75088787,90.69489172,5.521466996,110.4317855,apple,37.91,3619.79,0.99,0
7,144,197,23.8494014,94.34814995,6.133220586,114.0512495,apple,53.4,5402.95,0.6,0
14,128,205,22.60800988,94.58900601,6.226289556,116.0396587,apple,64.42,2707.7,0.56,0
8,120,201,21.18667419,91.13435689,6.321152192,122.233323,apple,62.47,1191.08,0.82,0
20,129,201,23.41044706,91.69913296,5.587905967,116.07779309999998,apple,42.15,8838.43,0.78,0
32,137,204,22.86006627,93.12859895,5.824151692999999,117.7296726,apple,68.18,9583.96,0.76,0
27,139,205,22.48403042,93.40819246,5.7721799460000005,105.5473627,apple,65.37,1401.95,0.98,0
0,123,205,22.02775403,92.96129462,5.790993052,121.1349176,apple,31.72,9012.76,0.8,0
22,144,196,21.91191314,91.68748063,6.4992268210000015,117.0761277,apple,32.37,4762.68,0.76,0
1,124,199,23.71059131,93.27392415,5.658473817000001,112.66765890000002,apple,47.77,4327.81,0.53,0
30,122,197,21.37784654,92.72043743,5.573241391,106.1417017,apple,42.1,7143.81,0.58,0
29,121,196,22.84852833,94.32130209,6.079497202000001,123.5977843,apple,59.74,5028.07,0.63,0
13,126,204,23.1094265,92.79630809,6.3831802710000005,108.183792,apple,36.2,8843.83,0.45,0
9,139,199,23.25230817,94.54128292,5.867420996,105.3558408,apple,55.1,7953.88,0.6,0
0,133,200,23.67287749,90.4935574,5.708418722,104.2298028,apple,51.68,7132.64,0.66,0
30,143,199,23.76881552,90.59810302,5.7983508000000015,102.2648546,apple,58.48,6472.8,0.72,0
36,140,198,23.34386401,91.47684705,6.28188384,104.4267991,apple,64.94,7007.76,0.46,0
37,137,199,22.63946441,90.18451645,5.697945522,108.3405879,apple,43.24,4458.66,0.35,0
33,121,203,22.45696744,94.76285385,5.6059340870000005,114.8407725,apple,52.93,5226.93,0.98,0
7,144,195,22.96388477,93.58065995,5.85648105,104.64729859999998,apple,60.09,1993.9,1.0,0
35,128,205,21.07273439,93.56585985,6.041053829,107.8737015,apple,53.41,4279.98,0.55,0
29,128,198,22.44075021,92.70785115,5.685062404,121.4977331,apple,52.58,2098.76,0.67,0
2,143,196,22.71271308,90.45261746,5.669489065,109.8852597,apple,49.15,8963.66,0.83,0
34,140,198,21.70416965,93.44006288,5.751707342,115.1781396,apple,42.53,2254.73,0.59,0
29,144,204,22.43324518,92.48667725,5.800448951,119.1025189,apple,31.42,8869.68,0.38,0
32,141,203,21.25941052,92.84416234,5.821347769,109.06584709999998,apple,43.05,8081.75,0.71,0
13,144,197,22.9215706,94.89613443,6.28022267,105.6941544,apple,52.7,1142.32,0.97,0
25,143,198,22.81212536,91.51861705,6.027314401,107.855225,apple,65.31,4606.12,0.4,0
9,137,200,21.12152071,90.6878768,5.636687393,102.8017203,apple,55.58,2025.2,0.95,0
6,144,198,21.11478672,90.31528693,5.559363609,104.5086618,apple,47.95,4097.08,0.34,0
37,126,196,23.59997268,90.97597665,5.596449493,107.17281909999998,apple,40.77,1930.51,0.87,0
2,120,203,23.12652652,94.71203306,5.893492998999999,108.62118329999998,apple,36.26,6724.09,0.84,0
11,143,197,22.98458907,93.3204487,5.875718516,122.1952483,apple,39.31,3571.27,0.54,0
10,141,201,22.12659387,90.97818277,6.386021424,104.5412275,apple,36.83,2718.78,0.57,0
24,142,202,22.53779727,91.48135786,5.710819862,101.8474768,apple,66.44,3852.49,0.65,0
23,138,195,22.49095104,91.70292746,5.7959857160000015,124.3915101,apple,68.8,9444.17,0.84,0
18,125,204,22.35548159,94.47811755,6.046673619,116.7366261,apple,41.14,9496.59,0.92,0
13,121,196,22.20700989,93.50574163,6.443382913,120.1593771,apple,45.2,7969.92,0.82,0
26,122,202,22.44516988,94.73763514,5.617227184,107.1843273,apple,49.28,5173.39,0.32,0
28,123,202,22.76643029,92.12438519,6.442289294,120.4359949,apple,69.74,2759.03,0.62,0
26,121,201,22.19109412,90.02575116,6.162034371,112.3126628,apple,43.89,9457.91,0.77,0
21,137,196,23.6119202,91.70293849,5.812781806,123.5900822,apple,45.79,6339.09,0.55,0
21,135,198,23.86087054,94.92048112,5.7650151260000015,105.0241329,apple,61.85,5452.13,0.6,0
5,144,205,21.42177231,92.62665309,6.184922574,102.8045658,apple,50.1,6760.1,0.84,0
2,123,205,22.36629253,90.78572467,5.739652177000001,124.9831618,apple,56.22,5773.53,0.99,0
15,133,199,23.99686172,91.61001707,5.8247786360000005,117.6102915,apple,42.38,6898.82,0.39,0
31,130,198,21.80129837,92.73446667,5.554823557000001,120.05866709999998,apple,65.61,6917.15,0.71,0
25,143,200,23.80436344,92.80441624,6.024248787,100.6192543,apple,60.51,1356.71,0.71,0
16,143,204,23.71475278,91.53331177,5.631333387000001,121.8961665,apple,31.15,1288.24,0.56,0
19,122,202,23.34467359,90.37981478,5.811975094,112.8954016,apple,60.84,2622.87,0.96,0
10,125,196,22.31253665,90.03577124,5.730557448,113.0688155,apple,32.39,6640.01,0.6,0
20,139,202,23.50201428,92.21083961,5.66999105,107.9868949,apple,55.49,1975.98,0.98,0
28,123,198,23.46260321,91.45665004,5.682751473,111.7763395,apple,69.69,1419.56,0.86,0
28,136,200,23.06204373,92.39544055,6.245858905,114.7399101,apple,51.67,3953.17,0.8,0
2,131,199,22.47420512,91.22759742,6.017370134,124.2179699,apple,59.26,9853.2,0.5,0
2,140,197,22.69780133,92.82223419,5.53456749,105.0508234,apple,66.97,7965.21,0.39,0
27,138,201,23.66682067,93.90191078,5.952367662,105.4004751,apple,42.8,2994.36,0.78,0
30,127,204,22.50050273,92.45878335,6.126436584,100.9343903,apple,32.76,3491.41,0.67,0
32,145,203,23.83053666,90.84422164,6.406818518,109.5966791,apple,39.1,9952.44,0.4,0
29,139,205,23.64142354,93.74461474,6.155939452999999,116.6912176,apple,59.54,2578.82,0.93,0
26,126,195,21.41363812,92.99124545,5.878568981,118.3979065,apple,67.21,4365.64,0.33,0
40,136,202,22.85267372,94.57645809999998,5.935336307999999,117.53140259999998,apple,39.98,1619.85,0.72,0
6,124,200,22.98208095,93.84505029,5.971332179,109.5852253,apple,60.33,1957.76,0.4,0
35,138,200,21.19909519,90.80819418,5.67130617,103.6838922,apple,39.69,3858.18,0.63,0
17,136,196,23.87192332,90.49939035,5.882155987999999,103.0548094,apple,43.45,7321.46,0.99,0
33,134,205,21.0365275,94.33919546,6.08551916,114.7412734,apple,35.79,5227.96,0.57,0
16,143,197,22.61711614,93.51978375,5.90402645,116.9256766,apple,39.48,4052.25,0.57,0
27,120,200,21.45278675,90.74531921,6.1102188260000005,116.7036582,apple,59.4,2728.34,0.53,0
29,145,205,22.81227579,92.12992101,6.212302608,109.3383552,apple,42.4,2396.98,0.84,0
3,141,197,21.98141856,91.12719303,6.142803397000001,115.4789148,apple,46.12,5876.33,0.89,0
15,123,204,22.52709326,92.54780429,6.365972687999999,115.3830068,apple,39.07,3532.79,0.6,0
5,136,195,22.35628673,91.92360477,6.264202804,107.7697413,apple,52.16,9086.0,0.71,0
10,136,204,21.19852186,92.15595143,6.276198595,105.8554351,apple,51.89,8284.46,0.83,0
7,141,195,23.8812458,93.45067555,5.514253142,104.9116663,apple,54.05,2080.7,0.43,0
2,129,201,22.78234161,94.36803516,5.682343744,122.1449949,apple,42.3,2389.46,0.34,0
29,138,197,22.19055385,92.43764169,5.830892252000001,121.6622761,apple,42.69,3387.02,0.52,0
30,137,200,22.91430043,90.70475565,5.603413172000001,118.6044645,apple,42.09,8988.95,0.83,0
29,132,204,23.08950736,90.22507299,6.0967531,108.2166601,apple,51.06,6185.65,0.5,0
14,139,197,21.72484506,92.83975602,6.056529526,121.6961761,apple,32.46,5550.98,0.5,0
18,125,203,22.44307715,91.59234006,6.160267496,102.5565807,apple,67.2,7679.56,0.38,0
33,143,204,21.1316077,91.95769858,5.814434775,122.5391946,apple,52.61,8888.78,0.42,0
40,144,196,22.71750705,92.25479855,5.987262638,107.0289866,apple,55.43,9526.97,0.76,0
9,143,197,23.75033085,92.88160462,5.570020684,117.6602827,apple,68.59,4748.79,0.66,0
38,135,203,23.76121837,93.661643,5.9655513110000005,100.825956,apple,63.94,1611.06,0.6,0
28,130,196,22.13450646,94.67695747,6.062356467000001,112.9203223,apple,36.47,1284.45,0.91,0
35,142,203,21.17089176,90.23730166,5.895319002000001,123.6495149,apple,67.7,4995.69,0.71,0
12,129,205,22.36238282,91.15761594,6.119432215,118.68327250000002,apple,51.12,5560.42,0.84,0
1,135,203,22.77856513,92.70124029,5.624203283,113.7759219,apple,36.04,1241.63,0.36,0
0,145,205,21.22503442,90.09877774,5.52078314,113.9760462,apple,62.67,4517.44,0.79,0
31,121,201,23.15791104,90.34396882,5.731535257999999,110.712841,apple,40.14,7735.09,0.43,0
35,131,203,22.42776057,93.91722423,5.893490899,102.7230739,apple,52.08,8232.66,0.45,0
29,140,195,23.64082979,90.95257927,5.560521058,116.7431319,apple,44.23,7105.63,0.71,0
33,138,198,22.29423493,90.69033986,6.222390797999999,122.7418744,apple,39.73,1747.14,0.35,0
14,140,197,23.35225078,90.90054697,6.071255131,113.0381382,apple,51.28,2035.95,0.99,0
35,145,195,22.03911546,94.58075845,6.231950009,110.9804014,apple,55.72,6777.72,0.88,0
40,120,197,23.80593812,92.48879468,5.889480679,119.6335548,apple,50.08,2829.75,0.44,0
25,132,198,22.31944084,90.85174383,5.732757516,100.1173443,apple,67.37,8619.89,0.74,0
31,137,196,22.14464104,93.82567435,6.400321212000001,120.6310784,apple,61.04,5688.44,0.4,0
36,144,196,23.65167552,94.50528753,6.496934492,115.3611268,apple,63.02,4371.58,0.95,0
10,140,197,22.16939473,90.27185592,6.229498836,124.4683112,apple,55.84,9773.77,0.33,0
22,30,12,15.78144173,92.51077745,6.354006743999999,119.035002,orange,34.66,3723.69,0.6,0
37,6,13,26.03097313,91.50819306,7.511755067999999,101.2847738,orange,45.84,1592.19,0.97,1
27,13,6,13.36050601,91.35608208,7.335158382,111.2266885,orange,32.23,1962.84,0.54,0
7,16,9,18.87957654,92.04304496,7.813916602999999,114.6659511,orange,60.48,1936.94,0.58,0
20,7,9,29.47741671,91.57802915,7.1291369410000005,111.1727497,orange,67.71,1181.27,0.55,1
26,27,10,28.06903173,92.91487288,6.079998496,114.1339416,orange,35.7,7528.15,0.49,0
5,23,15,25.66901098,92.04670813,7.408939392000001,112.5424199,orange,48.31,1926.68,0.86,1
0,18,14,29.77149434,92.00719952,7.207991261,114.41617859999998,orange,53.22,2375.69,0.45,1
39,24,14,30.55472573,90.90343769,7.189259647,106.0711985,orange,59.93,1155.06,0.4,1
13,23,6,23.96147583,90.26408017,7.365338111,102.6958703,orange,52.53,2568.91,0.34,0
21,17,15,23.98289638,91.5473145,7.455991072000001,118.4901697,orange,55.4,7091.72,0.39,0
33,12,8,25.26052689,90.31153735,6.822282114,117.36952959999998,orange,54.09,4485.87,0.7,1
6,9,12,31.08368929,90.14362642,7.028746406000002,109.6894658,orange,32.34,9263.59,0.96,0
19,7,10,14.78003032,91.22062116,6.118430299,100.1961762,orange,35.33,6139.27,0.84,0
24,18,6,26.56608303,94.45239715,6.285312759,116.3796525,orange,65.7,7554.75,0.96,1
9,11,8,24.85903405,94.39000473,6.559236744,111.78037340000002,orange,32.64,8387.64,0.82,0
31,8,7,34.51465139,93.63812684,7.163245982,103.5684926,orange,32.71,9950.8,0.33,0
22,17,5,24.12188673,90.72351622,6.945562889,102.835632,orange,65.56,4528.93,0.35,0
13,5,8,23.85340379,90.10522549,7.474710503,103.923226,orange,32.43,5001.55,0.74,0
16,8,9,24.60297538,91.28408653,7.601189842999999,111.2948115,orange,50.3,9868.74,0.62,0
4,13,6,15.63211033,94.25966183,7.5611432239999985,101.4705704,orange,34.69,5720.32,0.95,0
0,25,14,19.33516809,91.97978938,6.361671475,116.450422,orange,54.05,9772.88,0.7,0
8,7,10,28.2620488,91.98317355,6.929216014,105.2132259,orange,36.95,4473.37,0.58,0
4,23,5,22.67594476,93.36348717,7.477935216,110.3332655,orange,35.83,6241.32,0.85,0
33,14,8,21.03200078,92.9641969,7.684420446,110.6823944,orange,39.2,7443.45,0.89,0
30,7,15,33.23453301,91.06053924,7.825531916,115.7659902,orange,43.25,8713.84,0.75,1
21,29,12,22.30318989,92.15987039,6.438668989,117.3688104,orange,68.41,6113.01,0.63,0
11,14,5,11.50322938,94.8933184,6.946354724,115.56837759999998,orange,53.95,3646.81,0.36,0
9,8,15,14.34320488,94.35734702,7.994465371,110.22231229999998,orange,60.81,5828.71,0.71,0
5,18,14,33.105698100000005,93.48447453,7.434118807000001,119.1709113,orange,43.9,8850.13,0.3,1
29,25,14,30.49183837,90.4582865,7.781988584,113.3302105,orange,36.32,3631.96,0.39,0
33,12,15,30.25578031,92.03272799,6.052318465,116.7173125,orange,40.0,4472.2,0.81,0
8,16,6,12.22816189,90.26457428,7.106650373,108.4161706,orange,60.98,9598.8,0.45,0
15,14,8,10.01081312,90.22399223,6.22094286,119.3941064,orange,40.15,9934.33,0.72,0
16,7,8,22.79196751,90.60901895,6.420457311,116.5084074,orange,61.5,9748.16,0.79,0
0,12,7,20.18432263,90.65458473,6.969249676,116.8130969,orange,67.9,4587.06,0.78,0
5,25,6,30.72119881,94.01331956,6.0113021810000005,106.8118019,orange,48.66,1815.73,0.66,1
6,8,11,24.35590861,92.39651663,6.600948787999999,119.6946577,orange,36.19,9014.19,0.89,0
10,5,5,21.21306973,91.35349216,7.817846496,112.9834361,orange,61.31,3093.55,0.35,0
1,17,6,10.78689755,91.38411917,6.8198271,117.5293447,orange,31.18,4220.11,0.99,0
1,30,10,11.89925671,91.34663797,7.291405641,103.5771468,orange,44.35,4345.41,0.63,0
0,23,15,22.56664172,93.37488907,7.598729065,109.8585753,orange,42.4,7587.05,0.45,0
24,27,9,18.86883219,93.24688124,6.157135092000001,119.3936976,orange,58.61,8458.79,0.59,0
36,11,13,17.34083741,93.04897191,7.1917274,112.7194284,orange,35.98,4131.13,0.3,0
40,21,8,34.90665289,92.87820148,7.418761774,102.1906333,orange,47.4,9123.97,0.86,1
40,22,6,24.53610067,91.90997228,6.488221135,115.9787989,orange,44.45,9700.42,0.48,0
32,18,13,13.8377282,91.74780462,6.044167236,107.9873218,orange,66.49,3351.16,0.81,0
9,10,10,22.3551049,93.52211892,6.010391864,101.5164589,orange,59.23,8336.75,0.41,0
13,16,8,34.74004942,93.12316972,6.949838549,100.1967854,orange,48.24,5975.58,0.46,1
15,9,11,11.54785707,94.14861001,7.907956251,108.82891709999998,orange,30.74,7498.0,0.8,0
29,11,5,23.13338811,91.94670335,7.639788459,104.4224145,orange,48.34,4730.35,0.9,0
1,15,9,29.98364695,94.55239717,7.53350946,115.3560318,orange,30.22,2953.38,0.59,0
18,5,11,20.87947369,90.93756231,6.251586885,102.4550786,orange,57.95,5854.8,0.48,0
14,22,9,17.24944623,91.13772765,6.543191814,112.50905159999998,orange,69.7,8761.7,0.66,0
33,15,7,15.83388699,91.68293851,7.651225301,109.7571416,orange,37.92,7555.94,0.47,0
4,6,7,23.01014302,91.11764246,6.708889665,112.6738296,orange,68.01,3631.26,0.51,0
17,16,14,16.39624284,92.18151927,6.625538653,102.944161,orange,34.66,3616.67,0.63,0
12,20,10,24.45132792,93.10527686,6.528354932,109.4711098,orange,38.96,5324.68,0.89,0
34,29,8,31.87859192,91.15248149,6.450640306,105.3437825,orange,56.38,1738.85,0.72,1
39,28,10,31.34920143,91.48247612,7.181907673,109.1549823,orange,57.19,3840.25,0.7,1
31,25,12,18.05142392,90.03969587,7.016482298,111.7793889,orange,58.01,6512.05,0.83,0
12,6,8,30.84835031,92.86773675,6.388617138,107.4142681,orange,30.5,6330.88,0.55,0
12,29,13,22.45616931,91.52781832,7.57125447,118.0069295,orange,65.05,8526.27,0.9,0
26,11,11,13.70319166,90.95589386,7.609348255,106.2944879,orange,41.55,5817.33,0.68,0
19,24,15,20.48954522,93.72485075,7.137136973,111.83919509999998,orange,44.83,5646.83,0.88,0
39,21,9,13.20844373,94.02769434,6.354022554,106.2696156,orange,54.74,2338.7,0.43,0
16,29,13,32.31944397,93.67804556,6.196907944,117.6236473,orange,45.31,8292.62,0.52,1
36,29,13,20.68185224,90.91510525,7.829507245,109.7513927,orange,48.37,8635.9,0.51,0
37,23,12,31.52675982,90.50621806,6.395258356,113.1169398,orange,33.05,4813.89,0.94,0
39,9,15,25.35467646,91.81183218,7.992041984,116.7555937,orange,59.29,5239.14,0.95,1
31,5,14,17.66545409,91.69865887,6.583411671,110.6857506,orange,68.14,3364.52,0.97,0
18,12,8,12.59093977,91.81668769,6.206053072,119.39167179999998,orange,54.22,1278.6,0.34,0
20,20,10,11.86631922,93.68394562,6.976997772000001,106.060149,orange,64.21,2244.17,0.43,0
5,8,5,11.03367937,92.22706805,6.562594972,112.7715925,orange,57.21,8885.83,0.52,0
20,8,12,25.2990432,94.96419851,7.260416405,117.9733424,orange,34.53,8776.17,0.95,0
25,21,11,32.23797837,90.15406807,6.460044777999999,104.7052254,orange,36.25,6101.92,0.5,0
14,19,14,17.68408797,94.35815354,6.699164936,108.0638166,orange,51.01,2224.44,0.48,0
37,18,12,10.2708877,90.19147747,7.401121811,106.69552040000002,orange,43.3,8058.02,0.75,0
26,15,6,17.22034507,94.78797376,6.912033409,108.0054343,orange,41.72,6599.69,0.59,0
13,22,5,19.667056,90.50096668,7.764040111,100.1737964,orange,68.34,4394.14,0.86,0
32,25,9,10.35609594,93.75652041,7.796034006,101.1456947,orange,48.34,1103.34,0.31,0
19,7,9,27.255435,91.71369387,6.969883482999999,101.139435,orange,55.76,4487.53,0.7,1
28,7,9,34.591784600000004,92.13229786,6.730757538,115.5650287,orange,35.27,4575.2,0.77,0
24,30,11,32.39523995,94.51768464,6.601395755,113.25373,orange,45.73,6983.47,0.96,1
7,17,10,10.16431299,91.22320999,6.465913274,106.362551,orange,37.29,7663.64,0.96,0
18,23,8,21.49118657,93.43949693,6.41354791,101.4819888,orange,49.24,8054.44,0.4,0
7,20,12,16.53460397,94.76759975,6.475275337,110.0447896,orange,37.66,4316.22,1.0,0
20,23,11,31.8520694,90.12220323,6.407715561,109.9455062,orange,43.49,2680.96,0.49,1
18,14,11,28.04799508,90.00621688,6.550814117000001,117.1311498,orange,64.29,6190.42,0.51,1
34,11,10,31.75048899,94.59551226,7.36220835,115.1989301,orange,59.85,9770.42,0.43,1
20,29,10,29.07412717,93.27189064,7.36549204,100.7896871,orange,50.69,3843.0,0.72,1
37,24,13,19.14381903,90.71037456,7.8546243,108.0230792,orange,31.56,7187.52,0.88,0
12,8,10,16.14820285,91.4448027,7.995848977,107.4287664,orange,49.69,3422.17,0.49,0
34,10,14,34.05296914,92.05811721,6.725600855,116.8020848,orange,54.88,8615.5,0.75,1
6,13,9,34.51423957,90.56151463,7.786725333,118.32719679999998,orange,35.39,2307.83,0.65,0
27,30,5,32.71748548,90.54608254,7.656978112000001,113.328978,orange,68.19,9448.88,0.37,1
13,8,12,25.16296632,92.54736032,7.105904818,114.3117197,orange,44.45,8044.81,0.5,1
6,7,7,27.68167318,94.47316879,7.199106204,113.9995146,orange,43.76,2403.99,0.39,1
40,17,15,21.35093384,90.9492967,7.871063004,107.0862095,orange,55.39,3633.6,0.43,0
31,26,9,11.69894639,93.25638873,7.566165721,103.2005992,orange,53.17,8723.42,0.63,0
61,68,50,35.21462816,91.49725058,6.7932454170000005,243.0745066,papaya,49.32,9060.16,0.95,1
58,46,45,42.39413392,90.79028064,6.576261427,88.46607497,papaya,41.03,5247.42,0.66,1
45,47,55,38.4191628,91.14220381,6.751452932,119.2653877,papaya,46.02,8912.25,0.9,1
39,65,53,35.33294932,92.11508608,6.560743092999999,235.6133585,papaya,68.08,4814.86,0.88,1
31,68,45,42.92325255,90.07600528,6.938313356,196.2408242,papaya,46.12,5513.1,0.56,1
70,68,45,33.83508569,92.85470152,6.991626158,203.4044028,papaya,50.02,1663.25,0.42,1
68,62,50,33.20258348,92.76437927,6.977700268,197.5282582,papaya,68.82,9388.81,0.46,1
34,65,47,23.48546973,93.71043692,6.833768535,191.7760562,papaya,49.19,8776.29,0.61,0
38,68,54,29.33710543,90.81781439,6.739170045,202.0572747,papaya,31.76,5580.75,0.88,0
69,64,47,40.21199348,94.50766912,6.993473247000001,186.6762324,papaya,30.89,2749.26,0.8,0
58,51,47,42.13473976,91.70445386,6.757470637000001,197.402901,papaya,59.95,7682.37,0.41,1
59,47,53,32.86316618,91.4618874,6.8506632320000005,47.271547,papaya,46.36,1553.39,0.98,1
44,64,54,29.80744318,91.38048469,6.74274935,232.7046126,papaya,33.23,1625.86,0.4,0
56,57,48,31.56213762,93.0484859,6.506120752,63.62250788,papaya,31.3,7047.67,0.99,0
69,60,54,36.32268069,93.06134398,6.98992719,141.1736926,papaya,44.5,3422.7,0.89,1
56,58,49,37.13165026,94.60761797,6.69215564,172.47880619999995,papaya,42.45,1219.23,0.96,1
49,55,53,38.4418717,93.63739039,6.544029776,77.71566883,papaya,51.84,4144.01,0.99,1
38,51,52,32.66160599,90.78931681,6.927803911,78.85085502,papaya,65.7,9719.96,0.92,1
54,65,47,27.92765919,91.55594211,6.721835879,149.91075569999995,papaya,40.22,4845.23,0.38,1
57,57,51,39.01793345,91.48815629,6.99223441,105.8841531,papaya,66.92,4782.56,0.33,1
39,52,53,32.51247398,94.65904123,6.704204398,51.07048113,papaya,33.81,3807.48,0.47,0
58,67,45,38.72382798,91.72514851,6.702424548,62.62377075,papaya,42.56,8659.59,0.78,1
61,64,52,43.30204933,92.83405443,6.641098708,110.562229,papaya,64.52,1321.14,0.45,1
34,62,55,27.58548913,90.72526502,6.585346229,238.5008779,papaya,42.96,6246.58,0.85,1
31,48,45,40.78881819,92.90951393,6.563134737,132.7923586,papaya,38.5,3461.39,0.67,0
47,46,52,23.19451074,91.40301608,6.502289472999999,206.3999208,papaya,34.1,1448.61,0.71,0
32,68,52,32.68067385,92.61715632,6.800321319,248.8592986,papaya,48.33,7843.83,0.79,1
36,59,46,34.28879307,93.61082872,6.721130542999999,127.2509777,papaya,52.14,4431.09,0.34,1
61,51,51,39.30050027,94.16193416,6.574677594,120.9512466,papaya,30.91,4905.54,0.42,0
70,54,46,39.73149053,91.12220596,6.919342407,122.7628653,papaya,44.92,9236.24,0.37,1
44,56,49,39.23342464,91.25589286,6.519779582999999,64.4478499,papaya,35.15,3949.44,0.68,0
34,68,51,27.34734861,94.17756725,6.687088097999999,40.35153141,papaya,57.22,4041.23,0.48,1
50,59,47,40.76998685,92.09278584,6.747975732,209.8678411,papaya,64.46,5125.95,0.89,1
39,70,52,26.26559543,90.79668055,6.65149129,59.49373381,papaya,64.05,1966.5,0.82,1
34,61,49,28.12971499,93.3210737,6.502675132,117.8201907,papaya,59.54,8582.74,0.82,1
44,60,55,34.2804607,90.55561637,6.825371185,98.54047745,papaya,36.6,8640.42,0.58,0
31,62,52,33.7960155,93.00754254,6.99104104,182.026807,papaya,67.65,3987.08,0.49,1
65,62,51,31.53243779,90.87394933,6.5116248410000015,207.0735119,papaya,46.15,7341.72,0.87,1
44,57,53,42.30495821,90.51431779,6.93172108,74.876786,papaya,51.06,3297.08,0.34,1
50,47,48,24.63676897,90.61964344,6.712772332999999,218.2299187,papaya,65.09,4267.66,0.5,0
43,50,48,28.28222883,91.37059792,6.63016515,179.27208069999998,papaya,58.85,6106.48,0.54,1
60,46,53,24.48620746,92.98254537,6.761953186,183.49095,papaya,30.97,4433.94,0.52,0
70,68,55,42.84609252,94.63548176,6.691202286,78.80996390000001,papaya,30.0,1028.08,0.37,0
59,62,52,43.67549305,93.10887229,6.608667683999999,103.8235658,papaya,50.84,8552.52,0.5,1
60,58,51,42.07213781,92.92203105,6.840802254,165.7412972,papaya,56.35,8992.42,0.82,1
42,60,47,33.46873719,92.12746225,6.834808347999999,136.8277041,papaya,32.11,1704.64,0.3,0
35,66,47,31.7018373,91.66232213,6.953439161,48.83810592,papaya,50.84,4870.28,0.68,1
34,65,48,41.41968393,90.03863107,6.665024507999999,199.3096432,papaya,31.22,9546.5,0.72,0
36,54,46,42.54744013,94.94482086,6.662875839,214.41038480000003,papaya,36.1,4851.7,0.5,0
39,64,52,28.91842453,94.63676767,6.678695788,63.68794608,papaya,54.21,2279.74,0.59,1
37,52,47,43.08022702,93.90305729,6.54277684,211.8529059,papaya,31.82,6727.59,0.88,0
33,47,46,29.20300896,93.96834049,6.839443833,209.4083305,papaya,67.38,6551.29,0.77,1
34,48,48,41.04224355,91.37258067,6.805277038,181.527598,papaya,60.8,8552.09,0.88,1
49,54,50,25.62446619,93.18240298,6.762522087000001,97.26336657,papaya,50.73,4036.04,0.75,1
40,65,49,35.32876402,91.06138506,6.678449317999999,163.9069365,papaya,58.11,8953.17,0.52,1
68,52,49,24.42561272,92.27749066,6.577192175,63.35298768,papaya,54.12,1641.17,0.42,0
50,46,52,31.18298415,90.21646909,6.734005647999999,54.01872359,papaya,67.89,4563.52,0.92,1
65,63,50,31.88342554,91.3256535,6.524459342,79.27201575,papaya,34.8,9508.06,0.49,0
40,49,47,42.93368602,91.1756748,6.501521192,246.36132680000003,papaya,49.84,2814.17,0.7,1
42,53,48,23.11407669,94.31994776,6.758479569,231.5153161,papaya,47.8,8718.76,0.49,0
49,55,51,24.87212063,93.90560147,6.676578778,135.16945249999998,papaya,69.81,2306.44,0.87,0
59,62,49,43.36051537,93.35191636,6.941496806,114.778071,papaya,38.71,4042.41,0.43,0
63,58,47,26.83054058,90.75379971,6.864143752,144.66564440000005,papaya,55.66,9989.34,0.85,1
70,65,52,30.42012134,93.12659793,6.583528529,75.95295,papaya,37.17,5292.95,0.56,0
63,50,52,28.64555584,93.22642604,6.751747609,115.8163936,papaya,34.84,1142.92,0.45,0
40,64,47,32.50037548,93.47888842,6.893509446,71.73759526,papaya,66.18,7700.24,0.53,1
63,58,50,43.03714283,94.6428898,6.720744449,41.5856585,papaya,61.85,5619.42,0.73,1
45,58,49,30.10773379,90.34546355,6.827812549,75.24521981,papaya,55.33,9327.92,0.39,1
66,69,47,23.69212243,93.61055571,6.912299695,87.53393983,papaya,49.96,5156.17,0.81,0
54,67,52,35.67667332,93.30641944,6.586107335,141.3381168,papaya,59.32,4753.65,0.84,1
69,67,52,27.71948962,94.43877142,6.827305908,82.83061083,papaya,36.24,8440.61,0.4,0
67,68,49,35.26824831,92.38282957,6.821774589,149.8488208,papaya,34.06,5920.38,0.32,0
45,57,47,23.16855863,90.78821158,6.656458831,161.68920930000004,papaya,33.79,1952.12,0.61,0
56,50,52,33.08706051,92.25197542,6.770384816,88.1300769,papaya,44.77,2203.84,0.77,1
70,50,53,37.4620912,90.44967809,6.933809742999999,172.3458448,papaya,44.01,6500.75,0.37,1
44,47,45,38.73218907,94.73613484,6.579441304,218.142147,papaya,55.66,4248.38,0.91,1
50,60,47,32.57720726,92.74889453,6.92791761,93.7942847,papaya,50.19,3709.89,0.89,1
52,51,53,38.38231475,93.10378595,6.985804083,210.2735346,papaya,37.76,1185.56,0.91,0
35,68,45,42.93605359,90.09448142,6.612429546,234.8466111,papaya,66.38,3086.4,0.34,1
68,69,52,25.65492304,92.74501561,6.813383387000001,52.95477913,papaya,58.84,6940.93,0.91,1
32,55,52,37.58899717,91.99740365,6.967759599999999,159.6577388,papaya,67.97,2385.56,0.61,1
32,55,51,29.60718808,93.15642801,6.57398033,62.68710535,papaya,64.78,5365.75,0.68,1
48,62,47,25.34756111,93.02871078,6.803094965,174.40123369999995,papaya,48.38,8327.14,0.68,1
39,69,53,25.9300384,93.02357765,6.964955435,241.8202079,papaya,66.2,3953.56,0.63,1
49,61,45,32.76795887,94.57377401,6.764213299,240.4795923,papaya,61.77,4180.88,0.77,1
48,57,54,29.02328049,90.20396783,6.617703177999999,126.8069869,papaya,66.92,6495.27,0.92,1
69,66,49,40.00439101,90.17015833,6.52711001,92.11877372,papaya,30.78,2413.64,0.71,0
53,55,55,33.32315744,91.25271223,6.709668804,234.496633,papaya,31.65,2993.26,0.81,0
38,61,52,31.22790131,94.94021378,6.620729882000001,46.44279118,papaya,35.86,8888.0,0.99,0
57,64,55,26.68386496,92.9585411,6.583760498999999,62.50689682,papaya,52.35,7629.62,0.44,1
51,57,55,24.70528368,90.14732171,6.6764073370000006,108.4103158,papaya,68.41,4790.86,0.87,0
56,65,45,38.2016825,93.97379963,6.751298936,218.09088140000003,papaya,59.12,8998.46,0.93,1
54,66,52,36.56769731,93.79503425,6.867554147000001,104.4218596,papaya,54.83,2070.43,0.82,1
58,55,47,26.05375792,93.69111672,6.7424900270000006,240.6863901,papaya,44.24,8842.32,0.55,1
68,70,54,31.29986342,92.76039164,6.986228647000001,54.77830202,papaya,36.85,7246.94,0.95,0
42,59,55,40.10207731,94.35110201,6.979102243,149.1199989,papaya,57.39,4789.46,0.45,1
43,64,47,38.58954491,91.58076549,6.8256647820000005,102.2708231,papaya,53.45,5162.78,0.92,1
35,67,49,41.31330062,91.1508798,6.617066674,239.7427554,papaya,41.32,3510.48,0.83,1
56,59,55,37.03551903,91.79430166,6.551892637999999,188.5181422,papaya,49.15,5458.07,0.88,1
39,64,53,23.012401800000006,91.07355541,6.598860305,208.3357976,papaya,30.69,1573.35,0.87,0
18,30,29,26.762749300000007,92.86056895,6.4200187170000005,224.5903664,coconut,56.89,6882.98,0.74,1
37,23,28,25.61294367,94.3138837,5.7400545670000005,224.3206759,coconut,68.41,4909.34,0.94,1
13,28,33,28.130115000000004,95.64807631,5.686972967000001,151.0761899,coconut,38.98,8059.75,0.69,0
2,21,35,25.02887163,91.53720922,6.293662362999999,179.8248944,coconut,46.97,2859.62,0.44,1
10,18,35,27.79797651,99.64573002,6.381975465,181.6942283,coconut,56.5,2571.07,0.85,1
7,11,32,29.25902906,95.11294697,5.542169138999999,184.7624496,coconut,30.74,7031.47,0.63,0
39,5,31,27.10134661,93.69979946,5.551963184,150.9502632,coconut,31.34,6378.11,0.78,0
34,6,27,25.84726298,90.92669463,5.8607404810000014,147.8888994,coconut,66.31,3579.42,0.73,1
31,30,29,26.58580443,90.98617591,5.558807063,178.8116076,coconut,55.4,2702.83,0.63,1
25,7,35,28.38503882,99.18843684,5.55771171,189.67113490000003,coconut,32.8,2286.11,0.59,0
16,18,26,28.43647052,91.81320717,5.568365926,145.54144130000003,coconut,69.05,5201.3,0.76,1
26,10,33,28.27298134,96.93649473,6.07071786,198.8234862,coconut,43.52,8898.81,0.33,1
27,8,32,27.00648436,96.46168931,5.627860548999998,144.3331315,coconut,35.22,2078.37,0.41,0
37,18,30,27.63551259,99.34854917,6.38488418,157.91715369999997,coconut,36.62,1678.72,0.51,0
19,15,34,26.29644905,99.65809151,5.6858890660000005,215.9195049,coconut,69.06,7266.15,0.61,1
0,19,33,27.1326009,95.23797989,6.234458417000001,204.7206567,coconut,50.02,7523.44,0.91,1
31,20,26,25.56567803,97.61361544,6.443168642000001,199.7936345,coconut,37.96,8446.88,0.98,0
9,17,32,25.94951662,93.40548703,5.842317989,172.0540491,coconut,65.65,1860.87,0.54,1
22,11,29,28.03380598,95.01630593,5.955742971,218.0055713,coconut,45.48,4279.46,0.64,1
31,6,26,29.12859129,91.30924833,5.741367375,157.2388553,coconut,38.12,2284.72,0.85,0
34,6,30,27.0828252,97.00155491,5.948342571,171.7575545,coconut,66.24,2630.22,0.84,1
24,6,32,28.11321494,90.01734526,6.387067562,172.48136409999995,coconut,50.83,4798.25,0.76,1
1,8,26,27.5136304,94.18955816,5.562911913,156.6732553,coconut,60.57,2532.2,0.54,1
31,13,33,27.63834933,95.48763389,5.85971872,205.5463111,coconut,38.37,3446.06,0.44,0
10,9,28,29.01256899,94.01014388,6.282955072999999,150.05003119999995,coconut,51.83,7647.62,0.43,1
36,27,26,26.58413917,95.78923137,6.25449571,171.6262299,coconut,69.42,2489.5,0.72,1
38,24,33,28.28905147,97.00396405,5.973853124,142.9403233,coconut,48.67,8241.67,0.9,1
11,6,25,28.69164799,96.65248672,6.081568052000001,178.9635457,coconut,49.48,9550.37,0.5,1
16,14,30,29.70931288,96.30484325,6.37466756,209.84539930000005,coconut,33.75,1253.6,0.79,0
33,14,35,27.14865285,96.66355213,6.027707171,149.2433497,coconut,45.89,2289.37,0.95,1
16,6,29,29.28725038,91.95614918,5.868285082000001,132.1491176,coconut,32.21,6183.56,0.9,0
32,11,31,25.06871967,93.31410447,6.205931637999999,134.84190690000003,coconut,64.54,3668.04,0.91,1
38,14,30,26.92449525,91.20106019,5.5707453860000005,194.9022136,coconut,40.4,3878.62,0.82,1
8,6,33,28.27804288,93.64761266,6.095261012999999,171.9457959,coconut,67.36,2584.13,0.78,1
23,6,33,29.18032562,92.73041222,6.025789594,204.9603677,coconut,38.41,5023.24,0.54,0
29,25,35,28.3575072,91.64509299,5.542873799,160.73069909999995,coconut,58.18,4730.4,0.69,1
24,14,33,29.38072512,93.27565685,6.366219551,218.5241851,coconut,61.21,2789.29,0.9,1
32,12,30,25.39241091,98.08951196,5.579845008,218.080385,coconut,40.32,2257.85,0.52,1
30,25,31,26.31270635,98.62048026,5.804965067,208.1181381,coconut,44.99,7014.57,0.48,1
14,21,35,29.52501367,91.91185319,6.121005506,194.3100272,coconut,36.83,1899.71,0.46,0
27,22,29,28.83214859,92.17170353,6.000248647,145.41723869999996,coconut,66.82,7435.82,0.77,1
40,5,29,28.48444906,97.76865458,5.820978791,160.389421,coconut,52.95,1694.23,0.69,1
17,11,32,28.74013335,93.39676499,5.620733794,156.76508230000005,coconut,33.61,3743.36,0.71,0
30,30,35,25.00872392,95.59224018,6.001936419,165.8092179,coconut,53.6,2055.45,0.91,1
28,10,30,29.8690834,91.14723422,6.305740522000001,192.7678575,coconut,34.0,7037.1,0.36,0
39,7,29,27.54273211,94.59086121,6.362544111,150.2012138,coconut,39.79,1584.65,0.68,0
32,20,35,26.52166434,98.38227669,5.588655387,144.6261698,coconut,34.51,5021.71,0.4,0
7,15,32,25.03512351,95.89739958,6.182232762000001,174.796583,coconut,34.64,3677.14,0.32,0
29,17,29,29.20394909,95.66997327,5.959493188,211.2506267,coconut,51.11,4677.82,0.32,1
34,15,34,27.05826457,91.10510371,5.677282677999999,224.70069530000004,coconut,39.05,4799.44,0.48,0
14,23,25,26.18552389,96.96637916,5.6121227970000005,135.4186222,coconut,47.9,4795.27,0.45,1
18,19,29,27.59376845,92.48519606,6.206077742000001,162.8432736,coconut,51.94,1942.05,0.84,1
7,21,35,25.76011662,94.65830608,5.764812076,131.24514140000002,coconut,69.09,3686.12,0.75,1
24,27,34,28.87862994,95.11320315,6.203376525,145.0583117,coconut,59.06,2836.91,0.47,1
39,29,29,26.50908611,94.48414544,6.143662699,199.8778403,coconut,35.1,9495.69,0.64,0
29,8,28,26.87037587,91.72546257,6.100429497,214.4128874,coconut,44.76,1626.75,0.71,1
10,24,27,27.57283516,94.90485697,5.7084096010000005,145.9298935,coconut,63.84,2218.68,0.77,1
0,29,32,28.05912437,98.3670985,5.868255858,171.65163959999995,coconut,65.92,3313.73,0.4,1
32,11,31,29.51611558,92.56492864,6.461225827000001,131.2116167,coconut,43.87,4191.84,0.6,1
37,10,32,28.96318258,95.16333673,6.165084855,222.803013,coconut,60.78,8413.28,0.7,1
20,29,27,25.09897688,92.36099489,6.047044342,157.7592626,coconut,48.04,4665.33,0.65,1
31,29,35,27.1872282,92.19906776,6.137102505,141.3220576,coconut,49.86,3180.63,0.94,1
17,30,27,29.03065024,90.79093862,5.894027065,205.5720367,coconut,69.99,5535.21,0.99,1
1,12,30,27.754298,95.94643831,5.56222383,131.09000759999998,coconut,51.83,4948.48,0.55,1
6,13,29,27.31155708,99.96906006,5.832608027999999,201.8258633,coconut,32.57,1051.99,0.55,0
15,28,32,28.84270971,99.64328526,6.2185718739999984,224.4016682,coconut,44.22,9641.26,0.92,1
27,24,29,26.61423461,96.97300803,6.142010637,191.006688,coconut,57.89,5239.75,0.32,1
3,23,30,29.70143197,95.65754365,6.078807239,215.1968037,coconut,46.47,1854.75,0.55,1
8,26,26,25.54759871,91.64194826,5.702484758,212.867626,coconut,49.16,6230.24,0.39,1
20,28,26,26.37978453,91.49882979,5.547594847,167.0470997,coconut,68.64,9866.32,0.52,1
26,18,27,27.45907759,92.90736493,5.836075368,142.1430003,coconut,56.7,2243.19,0.68,1
1,6,35,27.02269204,95.71935435,6.231662767,147.16824590000004,coconut,61.99,7252.12,0.67,1
27,30,31,28.98545306,90.73966792,5.718120393,148.8398374,coconut,36.32,3815.88,0.75,0
23,7,34,26.1055118,91.52421214,5.852038202,134.1279669,coconut,42.33,3945.42,0.46,1
0,26,31,25.0707247,95.02156793,5.547933273,192.9036306,coconut,63.77,3805.27,0.68,1
38,6,25,25.54963273,96.92786777,6.156259104,191.2996157,coconut,59.65,5834.64,0.57,1
25,12,26,28.56973521,95.67906668,6.436314406,134.83703480000003,coconut,32.99,9855.28,0.38,0
40,5,32,26.07010807,96.7036223,5.981169595,143.533473,coconut,62.7,7270.61,0.53,1
0,19,31,25.51791333,94.38420565,6.271952832999999,178.7297725,coconut,41.52,3660.7,0.62,1
26,9,32,25.9490364,94.73860514,6.470465614,144.15711090000005,coconut,43.97,9691.51,0.87,1
35,30,34,28.2974764,95.41122824,6.141502001,182.4482352,coconut,56.54,9900.64,0.63,1
19,30,30,29.56549169,91.40896307,5.826381164,224.83157290000003,coconut,54.5,6675.7,0.45,1
31,13,33,29.69952329,95.21224392,6.342463714,148.30036919999995,coconut,30.46,5044.56,0.74,0
17,29,26,26.14162144,93.28415295,6.071897347,195.4115025,coconut,68.21,9860.24,0.94,1
2,30,30,26.00175125,94.79998418,6.331051715,209.540094,coconut,37.28,8231.56,0.86,0
30,13,25,27.15116142,91.48889469,6.413184638,164.9182225,coconut,30.13,9169.22,0.87,0
8,15,33,28.97318719,98.09861043,5.50158009,213.9011021,coconut,34.89,7290.92,0.45,0
18,12,35,26.13958446,96.38580769,6.338720873,131.3387935,coconut,47.57,4403.15,0.91,1
8,28,30,25.51618488,94.33465411,6.015672239,135.1272491,coconut,66.96,4674.34,0.68,1
40,22,29,27.55821802,99.98187601,5.735364307,174.62564809999995,coconut,64.03,2820.27,0.69,1
27,10,33,27.81132822,97.48410555,6.465906333,154.06212209999995,coconut,62.67,8966.97,0.87,1
21,20,31,25.60033702,99.7240104,5.855457599,165.82487319999996,coconut,57.9,6569.99,0.37,1
3,9,35,26.91641934,99.84671638,6.318552972999999,225.6323656,coconut,33.05,3632.58,0.65,0
22,16,27,29.1797902,90.27214288,6.006784979,188.9252083,coconut,44.08,1899.85,0.98,1
27,8,30,26.44600063,98.29937782,6.008386282999999,221.2258168,coconut,60.21,1582.05,0.77,1
22,8,33,28.43572863,95.8840407,5.665785202,203.9283708,coconut,63.19,2720.13,0.78,1
28,27,32,28.94099669,93.00109012,5.764615485,191.7723087,coconut,58.66,8974.75,0.76,1
23,21,26,26.45488737,93.45042636,5.901495543999999,149.2220255,coconut,38.67,7163.54,0.65,0
37,5,34,25.79490531,93.84150618,5.779032666,152.42387119999995,coconut,32.88,9906.01,0.52,0
19,26,29,26.93141945,98.80313612,5.67154928,166.5712879,coconut,46.04,2555.0,0.44,1
133,47,24,24.40228894,79.19732001,7.231324765,90.8022356,cotton,40.28,8015.43,0.92,0
136,36,20,23.09595631,84.86275707,6.925412377000001,71.29581071,cotton,65.84,7479.49,0.32,0
104,47,18,23.9656349,76.97696717,7.633437412,90.75616738,cotton,61.7,6163.73,0.6,0
133,47,23,24.88738107,75.62137159,6.827354668,89.76050416,cotton,67.68,1801.03,0.99,0
126,38,23,25.36243778,83.63276077,6.176716425,88.43618918,cotton,55.76,2535.45,0.81,1
126,50,19,24.69457084,81.7358876,6.6287228360000015,78.58494391,cotton,56.17,1515.55,0.62,0
113,41,20,25.0017188,80.53965818,7.256877571,96.32600992,cotton,40.5,8912.73,0.92,1
121,45,22,22.45942937,81.30681027,6.443785385,64.23026638,cotton,66.56,4781.54,0.45,0
121,47,16,23.60564038,79.29573149,7.7232401510000015,72.49800885,cotton,33.12,8080.99,0.89,0
129,60,22,24.58453146,79.12404171,5.947448589,71.94608134,cotton,64.73,9967.97,0.34,0
107,45,25,23.0865933,83.55546146,7.2277455160000015,71.84080724,cotton,31.57,6039.7,0.61,0
122,59,18,23.5000992,83.63488952,6.219469084,79.81328183,cotton,41.73,5850.89,0.49,0
140,38,15,24.1472953,75.88298598,6.021439523,69.91563467,cotton,47.91,8558.25,0.55,0
102,49,21,24.69315538,84.84422454,6.253343655,89.799462,cotton,46.23,8676.31,0.57,0
111,40,25,24.48469200000001,84.44932014,6.187455798999999,90.94342484,cotton,30.18,4653.44,0.73,0
131,35,18,24.49112609,82.24415809,7.0576933660000005,64.02949379,cotton,52.43,8587.54,0.45,0
135,43,16,23.47986888,81.73049149,6.720449769,86.76287924,cotton,34.53,7081.21,0.98,0
100,46,18,24.18586246,76.04203958,6.4316895060000006,69.08056728,cotton,43.47,5786.33,0.67,0
123,39,24,25.00755095,78.17952126,7.453106264,86.06411872,cotton,33.49,1517.6,0.84,0
117,56,15,25.99237426,77.0543546,7.368258226,89.1188212,cotton,34.61,3274.2,0.68,0
121,36,24,23.66457347,81.69105088,7.352401887,99.36898373,cotton,32.74,3525.95,0.93,0
101,58,18,25.66891439,81.38103349,6.652143699,78.59595817,cotton,48.6,4061.6,0.39,1
107,42,24,22.04612876,84.62978302,6.144631795,86.00758678,cotton,48.9,7928.35,0.68,0
100,41,22,22.4204752,84.55794703,7.318802162000001,93.46595573,cotton,62.57,1473.87,0.56,0
125,39,21,25.03149561,82.21276599,7.954629324,95.0191318,cotton,41.52,3821.95,0.31,1
105,60,23,23.53371386,77.21705554,6.207652157,87.54004943,cotton,34.28,7794.65,0.74,0
102,46,19,22.77076388,82.5993307,6.631005298,81.49543437,cotton,42.02,4320.07,0.86,0
131,49,22,25.49848236,79.9751579,7.306918817000001,67.05961949,cotton,41.62,7000.43,0.55,1
139,35,15,25.248679,83.4630147,5.898293044,86.55517751,cotton,39.03,4541.1,0.96,0
108,36,19,22.78249615,77.51235009,7.238566893,64.61444234,cotton,36.27,8245.59,0.88,0
118,45,23,23.37044424,77.43198948,7.977651226,71.67870701,cotton,68.09,5320.8,0.81,0
107,51,22,24.86560781,78.22080815,5.983075895,79.56866268,cotton,55.76,5939.24,0.84,0
125,60,17,24.14386157,84.51591287,6.785723961,80.36146974,cotton,51.29,4247.23,0.81,0
113,37,20,25.03300222,79.04368718,7.393441155,97.10087029,cotton,46.0,1478.51,0.41,1
131,52,16,23.65724079,84.47601498,6.486068274,88.54479121,cotton,67.54,8037.84,0.63,0
115,48,16,25.54359718,84.09229796,7.175934962,88.94245493,cotton,53.36,2237.11,0.37,1
113,38,25,22.00085141,79.47270984,7.388265887999999,90.42224164,cotton,31.57,7401.04,0.35,0
111,41,18,23.64328417,78.1258666,6.10539819,80.96157332,cotton,63.94,4938.64,0.49,0
111,53,19,23.96436009,78.02763149,6.419536555,84.63148859,cotton,34.17,9383.16,0.85,0
122,48,16,24.65425757,75.6350708,6.307585854,61.82980133,cotton,68.59,5649.16,0.93,0
108,46,17,24.3017998,84.87668973,6.93221485,65.0247867,cotton,34.22,9367.73,0.45,0
132,41,22,24.29144926,81.02453404,7.810865753,90.41694635,cotton,68.44,6794.09,0.69,0
103,42,17,24.29470232,84.61527627,6.527541661,81.05902285,cotton,55.33,9143.3,0.91,0
133,50,25,25.72180042,81.19666206,7.569454601,99.93100821,cotton,58.74,1846.9,0.81,1
127,37,18,24.87663664,76.30050373,7.041065585,91.9223468,cotton,65.61,8184.06,0.34,0
110,39,25,22.60612115,77.34264002,7.208795456,75.13617229,cotton,30.76,9287.53,0.88,0
131,38,19,23.86814008,75.68339729,6.814341946,90.4547185,cotton,47.28,3073.12,0.32,0
108,38,24,23.41022496,76.43836957,7.442217061,78.82199603,cotton,40.76,7231.92,0.65,0
122,40,17,24.96440768,81.31677618,6.854558957,80.03995829,cotton,32.03,2978.12,0.49,0
111,50,15,25.16820129,80.30351815,7.884550475,84.62419032,cotton,54.75,7512.7,0.42,1
140,40,17,22.72767171,77.07598065,6.006085786,77.55176318,cotton,57.04,7165.04,0.71,0
100,40,20,22.45145981,76.25674874,7.432043735,86.84998693,cotton,39.1,3547.46,0.98,0
123,50,16,23.04920461,75.53835214,6.498052108,70.65644296,cotton,52.25,2067.85,0.96,0
107,36,21,25.29250148,75.66653335,6.205263534,62.64174227,cotton,67.11,9566.95,0.9,1
118,50,19,22.95604064,82.33733678,6.360812227,66.48339303,cotton,31.49,6751.25,0.71,0
103,51,20,22.80213132,84.14668447,7.0466074339999984,91.6389565,cotton,52.23,3451.23,0.73,0
133,57,19,23.54234715,75.98203329,7.947011366,84.12536744,cotton,56.0,9807.88,0.56,0
129,47,20,24.41212325,80.80343786,6.281913857999999,98.60457373,cotton,64.74,4762.99,0.67,0
116,52,19,22.94276687,75.37170612,6.114525877,67.08022574,cotton,67.43,6317.73,0.46,0
114,40,23,25.53676123,81.13668716,6.7539780610000015,95.4262599,cotton,35.72,5725.26,0.31,0
131,60,17,25.32023717,81.79475917,7.4250413160000015,83.46532547,cotton,51.6,3093.84,0.67,1
107,43,18,22.426733,81.53480799,6.745104394,65.54475812,cotton,53.34,7315.86,0.75,0
123,44,21,25.78544484,75.00539324,7.6411165689999985,91.39578861,cotton,31.84,8453.45,0.38,0
112,49,25,25.68959532,77.90621048,6.470135478,66.19426787,cotton,42.96,8777.39,0.42,1
119,44,15,22.14593688,82.85975490000001,7.091992365,60.65381719,cotton,39.89,3459.49,0.56,0
130,59,19,25.07278712,82.50257909,6.520403794,93.51042684,cotton,55.6,7116.94,0.76,1
127,53,24,22.21506982,76.17851932,6.127939627999999,70.40557612,cotton,35.48,1020.6,0.84,0
134,52,18,23.9643129,76.59175937,7.994679507000001,76.13090645,cotton,69.76,7799.42,0.64,0
109,36,18,25.40059227,76.53237965,7.524707577,62.51388670000001,cotton,41.26,1667.72,0.66,1
100,48,17,23.7805123,83.03878838,7.827877817999999,66.26555904,cotton,63.21,3770.02,0.89,0
132,52,19,24.16402322,76.7433897,6.436691764,61.94626051,cotton,50.18,4267.72,0.63,0
102,37,25,25.31468463,77.91757121,5.907930899,72.82902109,cotton,35.14,4271.68,1.0,0
111,39,22,22.60361557,80.35090459999998,6.135025006,88.57395505,cotton,38.79,4279.66,0.59,0
117,51,15,22.9535715,78.71555832,6.044556594,99.75336197,cotton,34.3,8736.12,0.89,0
136,36,24,22.74446976,80.41198458,7.59781958,90.07326633,cotton,56.26,8459.96,0.8,0
134,56,18,23.80834611,83.91902605,6.691268104,70.97358303,cotton,63.35,4891.56,0.59,0
112,54,15,25.46228792,81.56641891,6.1754923060000015,76.88582484,cotton,35.97,6281.69,0.6,0
105,56,15,25.96779712,81.97904282,7.272316208999999,74.14169043,cotton,58.97,2440.8,0.76,1
140,45,15,25.5308271,80.04662756,5.801047545,99.39557151,cotton,52.58,2269.07,0.81,1
126,46,25,24.43847399,81.69801729,6.757457943,60.79645852,cotton,31.48,9637.04,0.56,0
106,49,24,23.03887865,76.47039772,6.983395572999999,90.64770699,cotton,53.57,1841.09,0.59,0
121,53,19,23.51308653,76.72621429,7.976889497999999,80.11272117,cotton,45.64,2182.35,0.54,0
108,60,17,22.75805656,76.75768356,6.558902588,97.76600619,cotton,40.37,2042.54,0.51,0
116,56,17,24.71252544,77.7293114,7.979090365,85.24963302,cotton,37.93,6935.7,0.53,0
100,52,19,23.45969093,82.44777468,7.903528672999999,93.50153555,cotton,43.66,3321.44,0.57,0
129,43,16,25.5503704,77.85055621,6.73210948,78.58488484,cotton,56.94,7495.9,0.46,1
118,44,23,22.08458267,82.82904143,6.6916904760000016,67.06459777,cotton,33.67,3703.01,0.77,0
117,43,25,24.68854799,78.51206972,7.839849298,69.31153566,cotton,44.1,4437.81,0.58,0
126,37,21,25.84997269,84.16855231,6.61448588,77.03421249,cotton,56.2,2959.26,0.92,1
120,48,16,22.46054478,75.40989245,7.456971816,71.85436078,cotton,58.85,6644.88,0.68,0
102,45,16,23.65629976,77.52425987,7.2942193,74.8984994,cotton,34.96,8782.4,0.39,0
131,56,20,22.00817088,81.83896111,7.762647875,92.23645249,cotton,59.81,2147.42,0.72,0
114,40,17,24.32630461,80.13456404,6.363406102000001,69.45072055,cotton,59.2,4770.61,0.43,0
101,37,18,22.92360984,82.68738535,7.63737841,92.91915074,cotton,55.04,7640.34,0.68,0
106,46,20,23.43821725,78.63388824,6.2006719760000015,81.15072105,cotton,54.42,2912.45,0.43,0
113,38,20,22.10718988,78.58320116,6.364729934,74.94136567,cotton,33.28,7237.41,0.36,0
102,53,21,23.03814028,76.11021529,6.913678684,91.49697481,cotton,55.01,5975.39,0.58,0
110,39,18,24.54795322,75.39752705,7.766259768999999,63.88079866,cotton,55.88,8315.35,0.46,0
107,58,15,23.73868041,75.77503808,7.55606399,76.63669195,cotton,41.84,9828.53,0.57,0
120,60,15,22.31871914,83.86129998,7.288377241,65.35747011,cotton,46.72,3201.14,0.35,0
89,47,38,25.52468965,72.24850829,6.002524871,151.8869972,jute,50.84,9317.45,0.84,1
60,37,39,26.59104992,82.94164078,6.033485257000001,161.2469997,jute,40.4,6487.36,0.34,1
63,41,45,25.29781791,86.88705350000002,7.121933578999999,196.6249511,jute,57.71,6724.92,0.82,1
86,40,39,25.72100868,88.16513579,6.207459637,175.60866969999995,jute,64.8,8676.66,0.45,1
96,41,40,23.58419277,72.00460848,6.090060478,190.4242157,jute,36.62,8573.02,0.52,0
100,35,36,25.31042337,72.01364411,6.346715209,190.5577618,jute,47.81,6932.89,0.57,1
63,37,43,23.41798979,85.08640476,6.661957897000001,185.7446728,jute,53.17,5994.54,0.67,0
70,43,40,24.35564134,88.80391021,6.176860192,169.11680280000004,jute,50.8,3177.68,0.99,0
67,55,44,26.284017,75.14640198,7.251847296,182.2685447,jute,45.31,6676.03,0.3,1
74,40,40,25.13842773,83.12053888,6.386259977999999,169.33884650000005,jute,60.31,7748.84,0.94,1
89,53,44,24.88692811,71.91711523,7.319735475,150.2498675,jute,69.76,8061.04,0.69,0
74,46,45,25.75734909,88.36668522,6.025028997000001,189.4263485,jute,69.4,8666.87,0.33,1
89,41,38,23.12844351,74.68322732,6.344751947000001,199.83629130000003,jute,35.42,9525.38,0.48,0
60,55,40,24.9949957,88.95692783,7.02777956,151.4935635,jute,40.24,4361.88,0.78,0
67,43,38,25.21622704,70.88259632,7.299304715,195.8645552,jute,66.94,4008.13,0.99,1
70,38,35,24.39736241,79.26861738,7.014063944,164.2697011,jute,37.34,3580.39,0.31,0
74,49,38,23.31410442,71.4509053,7.4880144039999985,164.49703730000004,jute,45.35,9366.86,0.59,0
90,40,39,25.72668885,81.86171563,6.626503893,191.9649389,jute,31.33,9678.04,0.56,0
82,35,44,26.96656378,78.21047693,6.239011,169.8391177,jute,45.63,5490.08,0.67,1
73,45,37,23.70467146,74.63745355,6.742688094,181.2783964,jute,35.9,7491.85,0.87,0
85,53,38,24.90075709,73.84186449,6.588017308,153.8990984,jute,65.38,1432.82,0.47,0
81,56,36,23.39605743,72.60512854,7.097586415,174.78764109999997,jute,45.91,8338.39,0.63,0
84,55,38,26.8748389,79.78725152,6.956682742999999,173.1017097,jute,36.13,5284.66,0.85,0
80,45,42,23.1426498,74.99739774,7.380396262,151.9035477,jute,65.6,8832.84,0.65,0
76,54,45,24.29496635,77.62976013,6.176618831,184.9800516,jute,41.43,9598.03,0.4,0
76,56,39,24.39459498,89.89106506,6.551130445,197.1220049,jute,44.12,2068.93,0.92,0
81,40,45,25.7629429,80.76238215,6.427726565,174.5071843,jute,50.87,7605.22,0.31,1
76,44,45,25.4879684,84.48235878,6.740947635,168.7848886,jute,59.68,8100.8,0.35,1
69,47,40,25.37122686,76.2403666,6.130136384,183.8270791,jute,66.21,5669.83,0.95,1
82,40,45,26.21312799,81.70476368,6.667633355,180.1237765,jute,57.49,5669.78,0.39,1
69,57,35,24.30748599,78.54340987,6.1868143920000005,186.2337571,jute,34.86,5859.22,0.79,0
81,36,38,23.76554749,87.98329901,6.334837865,150.31661519999997,jute,34.22,1551.44,0.93,0
67,60,38,24.79853023,78.53037059,7.16214284,162.2847429,jute,55.77,6635.36,0.76,0
72,51,40,23.20683504,74.09956958,7.422318499,199.4766779,jute,42.05,7209.03,0.54,0
65,39,45,23.66805429,70.89000744,6.768001309,184.4633281,jute,57.06,2067.88,0.37,0
78,50,43,25.12417673,85.72530641,6.348441469,159.5718087,jute,39.56,7113.72,0.42,0
77,52,41,23.89069041,83.46409075,6.097294061,167.72306319999996,jute,56.05,5375.65,0.86,0
89,52,42,23.09433785,81.45139295,6.14132902,196.6587013,jute,55.23,9354.03,0.89,0
62,49,37,24.21744605,82.85284045,7.479248124,166.13658859999995,jute,55.44,9546.4,0.52,0
90,48,45,24.06475727,71.31342851,6.509174788999999,153.63902119999997,jute,51.62,9301.85,0.65,0
66,47,36,24.85441411,74.44070479999998,6.57256106,175.572958,jute,36.03,1766.79,0.51,0
80,52,39,26.41915161,76.85691248,7.165696848,197.2101782,jute,52.55,7317.85,0.86,1
89,52,45,24.89326318,77.01222585,7.207457207999999,196.469984,jute,34.94,2692.39,0.78,0
77,51,44,23.25583402,82.7015932,7.124333547000001,166.2160846,jute,36.45,3186.3,0.4,0
94,37,41,24.7634518,87.06071115,6.4635387070000005,179.1630865,jute,54.18,4813.4,0.36,0
75,41,35,24.97042599,78.62697699,6.856833064,166.6415254,jute,47.99,5901.53,0.56,0
60,55,36,26.12797248,80.49172597,7.132389299,150.6326874,jute,44.92,5889.42,0.75,1
62,56,35,25.97825807,81.65769588,6.235357637999999,163.3488091,jute,49.07,7252.83,0.37,1
84,40,42,26.2830571,73.35763537,6.704273839,186.6898282,jute,46.44,8161.07,0.81,1
100,56,40,26.38905406,83.31240346,7.433313409,176.1516409,jute,34.19,5053.15,0.66,0
75,56,44,25.2746335,73.7459581,6.109478059,168.0432282,jute,54.6,9345.63,0.65,1
78,46,42,23.09499564,78.45959697,7.095413294,155.3851533,jute,41.22,1431.61,0.96,0
82,48,36,25.79351957,81.76904006,6.352076782999999,193.2418382,jute,42.17,1928.65,0.74,1
100,58,41,23.17403323,87.88255345,6.6587699910000016,160.6217342,jute,43.54,5130.33,0.41,0
88,50,40,25.63215038,79.95150917,7.0518224720000005,182.2582277,jute,52.57,6410.54,0.97,1
67,41,40,25.84879500000001,87.81661683,7.333143205,152.6194403,jute,35.43,1669.89,0.78,0
72,42,43,26.56767277,80.90424543,6.352771037,181.2915605,jute,51.06,2750.09,0.57,1
89,40,43,26.24532085,72.97198375,7.124050134,189.9711184,jute,61.84,2524.38,0.9,1
89,57,43,26.91515043,73.19897535,6.998787171,177.22330480000005,jute,59.68,7786.32,0.7,1
61,41,44,24.36972377,82.11319791,6.537914957999999,159.92109340000005,jute,58.11,5842.65,0.48,0
79,45,43,25.71901283,79.15532398,7.171054239,187.1735424,jute,53.02,9587.53,0.62,1
84,40,43,25.01157559,88.33130229999998,7.228268227999999,169.4168014,jute,30.02,4019.76,0.45,0
98,43,35,25.40785911,76.44048625,7.319952206,188.6372826,jute,68.06,6648.18,0.63,1
75,36,44,23.28081,74.27607475,6.613341342999999,153.7447398,jute,41.68,1720.18,0.65,0
89,58,35,23.98651719,82.09053379,6.096838784,167.0576456,jute,57.42,8208.22,0.53,0
91,41,37,24.48556447,83.20630007,6.132570522999999,192.2316221,jute,43.44,8970.09,0.97,0
77,48,36,25.86705009,84.09985284,7.36008498,154.83908469999997,jute,55.41,1874.22,0.53,1
66,58,35,23.5643831,79.46283115,7.321619041,185.25947,jute,31.4,1759.46,0.86,0
62,59,41,24.2248758,74.89465426,7.175170657000001,192.4931257,jute,66.17,5757.91,0.49,0
82,35,35,25.49386782,86.97061481,7.299076163,176.5268267,jute,52.59,7511.29,0.98,1
61,41,35,24.97178693,79.47557931,6.842966478999998,195.7571622,jute,51.35,6216.46,0.49,0
99,57,38,24.80624984,82.09281674,6.356295567999999,156.3616174,jute,50.12,5674.82,0.36,0
70,42,43,23.16814977,76.66724969,6.508342839,157.1215052,jute,59.64,9733.25,0.53,0
90,59,35,24.25133493,89.86454053,7.098227926,175.1742112,jute,57.37,3187.78,0.65,0
73,43,42,26.58361011,78.00774772,6.310699968,154.8238864,jute,45.07,4236.39,0.57,1
67,46,44,26.82489244,78.20392774,7.093328631,153.91998069999997,jute,30.45,9708.01,0.66,0
84,37,42,25.49674786,81.13449097,6.691074249,169.92882340000003,jute,33.0,7223.31,0.54,0
72,41,36,24.09874353,80.57226761,6.187746776,176.8604109,jute,67.27,7478.55,0.45,0
71,56,37,23.18866654,86.20899734,6.491506245,176.103677,jute,61.8,8160.02,0.52,0
64,53,38,26.24347471,78.51063754,6.855362875,183.4065252,jute,40.69,5329.07,0.75,1
65,54,39,23.75091572,71.14782585,7.124571593,160.0889553,jute,49.24,8657.16,0.52,0
60,58,37,26.13871511,79.1188943,6.067302109,171.4892533,jute,65.71,2794.59,0.51,1
86,39,43,26.14576648,71.23690851,6.432051512,193.1007598,jute,47.32,3568.25,0.6,1
90,50,44,26.91643698,73.48655995,6.253408852000001,171.4716375,jute,56.79,4323.41,0.6,1
91,38,36,26.5232969,77.17331847,7.287318722999999,157.8548562,jute,33.43,8583.17,0.43,0
87,48,38,23.81579631,80.94023552,7.161865733,190.312216,jute,30.48,6291.05,0.8,0
72,41,36,26.50838667,86.84264005,6.065898282999999,152.9801697,jute,32.31,1314.76,0.58,0
71,54,35,26.63952463,70.95705996,7.311077075,199.3355744,jute,39.7,2488.88,0.37,0
82,46,41,23.325013100000003,79.79609448,6.581693772,187.3096148,jute,43.73,1881.17,0.97,0
71,52,43,26.47549543,73.96164569,6.732826127,180.2513601,jute,30.31,4828.27,0.61,0
80,43,43,23.78756036,74.36794079,6.014572075,172.64426540000005,jute,35.35,2330.55,0.41,0
77,55,43,25.49941707,75.99987588,6.663559451,193.71418280000003,jute,61.04,6156.83,0.31,1
95,57,41,23.24925555,73.65346838,6.434610995,184.7674863,jute,68.23,9994.82,0.38,0
63,47,35,26.98582182,89.05587886,7.432768147000001,193.8778713,jute,34.92,1585.68,0.83,0
93,43,38,23.61475336,86.14290267,6.987332927000001,150.2355238,jute,57.72,6847.35,0.99,0
87,44,43,23.87484465,86.79261344,6.718725189,177.5147313,jute,65.35,1326.16,0.73,0
88,52,39,23.92887902,88.07112278,6.880204617,154.6608736,jute,57.46,7957.29,0.86,0
90,39,37,24.81441246,81.68688879,6.86106911,190.7886386,jute,51.84,1758.69,0.44,0
90,39,43,24.44743944,82.286484,6.7693455,190.9684885,jute,40.44,1623.2,0.82,0
84,38,43,26.57421679,73.81994896,7.26158085,159.3223075,jute,32.8,1116.47,0.84,0
91,21,26,26.33377983,57.36469955,7.261313694,191.6549412,coffee,43.59,9727.33,0.39,1
107,21,26,26.45288458,55.32222678,7.235070264,144.68613359999995,coffee,37.86,6372.49,0.84,0
83,38,35,25.70822684,52.88667115,7.18915558,136.73250919999998,coffee,54.57,2224.26,0.5,1
108,24,31,24.12832546,56.18107663,6.431899747999999,147.27578180000003,coffee,33.63,2575.43,0.31,0
116,28,34,23.44372334,60.39523266,6.42321105,122.2103248,coffee,67.6,3647.29,0.75,0
116,23,25,23.4123707,52.26994674,6.869720196,139.3670753,coffee,69.29,3081.73,0.9,0
109,31,27,23.05951896,50.40609436,6.973839707000001,164.4971875,coffee,50.7,6564.81,0.3,0
89,25,34,23.07895447,63.65861483,7.184801627000001,129.8765443,coffee,56.93,8272.0,0.38,0
118,18,32,27.6496114,51.11044023,6.351823783,122.8392822,coffee,54.97,6987.46,0.42,1
111,32,34,25.46743689,69.35161206,6.392048018,171.37644619999998,coffee,66.73,5548.08,0.34,1
84,36,28,26.7350622,55.55164819,6.119892347,140.63052130000003,coffee,48.8,3658.48,0.94,1
85,33,25,26.20811417,52.50987966,6.910823945,189.0944824,coffee,43.84,1079.47,0.35,1
99,15,27,27.0424167,57.27927475,6.501157208,165.6872119,coffee,43.54,4708.78,0.56,1
81,30,31,24.65090184,51.93952357,7.027585558999999,135.1386537,coffee,52.03,9229.08,0.41,0
95,39,29,27.35152643,55.99375012,7.13411409,148.98125249999995,coffee,67.17,4264.67,0.68,1
81,34,30,25.17787724,62.26244581,6.6477659970000005,135.0119649,coffee,44.91,8487.31,0.75,1
80,15,28,23.11438731,68.00096043,6.703270635,161.8944624,coffee,37.81,5223.97,0.43,0
104,20,26,27.22783677,52.95261751,7.493191968,175.7260273,coffee,57.96,6357.06,0.9,1
109,29,28,23.26316991,60.51600210000001,6.724688502999999,194.1755471,coffee,56.43,1295.39,0.36,0
100,32,26,25.234661,57.53161469,6.043485685,124.2261737,coffee,65.28,1164.1,0.9,1
100,24,28,25.59535262,57.72920846,7.101661011,195.7733251,coffee,68.43,7560.29,0.69,1
83,21,28,25.5674832,60.49244602,7.466900682999999,190.2257843,coffee,51.44,4081.76,0.99,1
120,23,28,25.67324193,51.29043632,6.877799264,196.2736367,coffee,39.21,7542.73,0.31,0
104,26,30,24.40726724,62.65692638,6.410992833,148.6977358,coffee,67.99,7850.64,0.32,0
108,33,31,23.69287069,66.76090123,7.393825704,144.6576424,coffee,60.74,6620.62,0.47,0
91,25,26,24.53460016,66.99765375,7.482414225,180.5059257,coffee,44.66,1931.67,0.35,0
86,26,27,27.13140403,52.89368299,6.081172981,192.4280381,coffee,62.06,1385.74,0.74,1
98,18,27,27.56088634,68.49299897,6.516312148,167.43580749999995,coffee,53.25,6487.46,0.67,1
111,27,31,23.59302313,55.27564977,6.0433309510000015,191.3980675,coffee,34.11,3586.32,0.62,0
84,39,35,23.17714381,52.13864034,6.959404135,117.3113562,coffee,60.21,7755.26,0.38,0
98,27,27,24.71384065,51.29142534,7.238109556,197.6439711,coffee,53.15,8049.8,0.65,0
118,21,34,24.38534644,64.72543073,7.234258375,119.6324109,coffee,48.44,7993.24,0.88,0
103,27,31,27.15998538,51.59100753,6.691541233,126.1752206,coffee,56.5,4679.49,0.36,1
82,24,33,26.53543168,67.09608099,6.809593554,120.6494434,coffee,64.01,4804.99,0.8,1
86,31,35,27.01207284,60.76645256,6.485761419,191.4508931,coffee,36.13,4757.79,0.4,0
88,35,35,27.55906475,58.45742907,6.784460602,117.9389993,coffee,43.0,5273.04,0.35,1
84,27,29,23.32293161,53.00366334,7.167092586,168.26442869999997,coffee,53.13,3954.06,0.58,0
120,40,33,24.23850608,54.30329632,6.73410539,115.1564012,coffee,36.57,8970.13,0.4,0
106,40,30,23.42611644,64.10651528,6.779984384,122.6847408,coffee,39.65,4543.37,0.68,0
113,21,33,26.02241444,55.83288958,7.277422737999999,176.90209240000004,coffee,65.93,9658.84,0.54,1
117,34,25,24.83846178,56.7685316,7.21270048,124.4135035,coffee,43.76,4678.91,0.47,0
80,30,25,26.24092174,65.64381357,7.487266991,148.37712019999995,coffee,58.56,9815.82,0.69,1
88,21,27,24.43011925,66.02411187,7.231166546,181.6368274,coffee,49.48,7776.23,0.94,0
113,33,34,26.00373964,62.144510200000006,6.559817161000002,153.477776,coffee,48.61,8811.57,0.42,1
87,23,28,26.22367404,62.26594559,6.979590627,193.7461968,coffee,41.49,5067.21,0.96,1
113,15,29,27.09617155,63.55324262,6.779230041,190.2440566,coffee,31.87,2325.64,0.58,0
98,29,30,25.64004392,61.03273481,6.217974349,199.4735636,coffee,39.91,6580.08,0.3,0
97,29,27,27.74576987,54.36976075,7.205078785,139.8619431,coffee,51.56,2494.71,0.43,1
85,35,32,26.24928198,54.28617819,6.854011265,133.1120232,coffee,43.89,1011.24,0.48,1
82,29,35,26.67377159,52.24226285,6.246872394,156.15438980000005,coffee,51.4,7725.14,0.64,1
103,33,25,27.10210397,55.74973320000001,6.911066044,139.5013171,coffee,45.67,2265.57,0.33,1
112,17,28,27.62975458,61.26002598,6.777417989,196.6492664,coffee,57.81,3709.26,0.87,1
99,19,33,27.536454700000004,55.51673151,6.273741983,130.6377143,coffee,48.47,7812.41,0.83,1
120,20,34,23.56960509,50.56339727,6.906124587000001,130.3797119,coffee,54.13,8412.3,0.57,0
114,27,28,24.99451759,57.93250202,7.162802357,192.8736822,coffee,65.4,6492.74,0.33,0
100,40,35,27.56441788,54.41094079,6.9557873510000015,177.816092,coffee,33.73,5173.74,0.85,0
108,35,25,23.98143338,61.10935084,6.971963169,161.5279095,coffee,51.19,7632.09,0.94,0
115,31,30,24.22984659,67.37768353,6.840927967000001,122.4073418,coffee,34.36,3053.99,0.52,0
87,28,30,25.60153969,68.66257977,6.536676653,168.8383605,coffee,60.02,4611.19,0.72,1
82,24,26,24.31274458,53.57285558,6.089443602999999,184.4103931,coffee,64.4,7671.47,0.93,0
94,26,27,26.36629861,52.25738495,7.456460375,177.31761609999995,coffee,42.49,3458.67,0.78,1
87,28,35,26.5602777,57.1621814,6.759211911,152.0616227,coffee,33.26,4619.15,0.78,0
118,40,35,26.35034208,58.50650238,7.460174812000001,121.5586297,coffee,68.16,2758.43,0.36,1
87,38,29,25.20406808,57.88370456,6.652642579,156.1457255,coffee,32.08,6863.11,0.59,0
92,40,30,23.35723208,55.18792166,6.026287448,171.6976946,coffee,45.54,1935.88,0.56,0
97,22,26,23.60567546,59.68849145,6.074190142000001,185.1568059,coffee,45.03,9444.99,0.72,0
99,40,32,24.18471151,69.94807345,7.0455430560000005,163.27087319999995,coffee,31.29,6227.16,0.67,0
89,28,33,26.44414097,53.83876189,6.9932360010000005,175.3723314,coffee,33.05,9705.33,0.76,0
112,39,29,26.12492233,63.37479229,6.726528895,147.8035305,coffee,48.14,7043.63,0.81,1
111,28,26,27.77363343,64.47858698,6.937352845,192.7121236,coffee,64.93,3903.7,0.59,1
114,20,26,25.55656667,62.67087838,7.27905689,193.5866233,coffee,57.92,7250.51,0.49,1
117,26,30,27.92374437,67.96910852,7.079850922,115.2325531,coffee,33.48,1567.23,0.86,0
111,29,31,26.05968403,52.31098539,6.136286518,161.3432535,coffee,67.38,3089.03,0.95,1
119,30,28,26.35770906,64.57578034,6.5052036960000015,163.62694960000005,coffee,42.14,1187.97,0.75,1
116,40,33,24.91370487,54.15319242,7.042089492000001,129.5481144,coffee,37.91,6952.84,0.91,0
95,37,35,27.31317116,68.42333909999999,6.348337518999998,192.4288139,coffee,42.01,4089.08,0.58,1
86,40,33,26.1387869,52.26311691,7.432322234,136.3027766,coffee,66.71,2950.35,0.31,1
117,37,32,23.1069385,67.06230539,6.787658922,162.57696059999995,coffee,43.52,7370.52,0.48,0
105,18,35,23.52648086,68.44030686,6.743417121,171.8839938,coffee,69.63,9230.54,0.32,0
109,23,25,25.11711046,68.48030408,7.00733163,194.8773479,coffee,34.56,7144.48,0.36,0
80,18,31,24.02952505,58.84880599,7.303033217,134.6803969,coffee,30.44,3263.88,0.61,0
101,31,26,26.70897548,69.71184111,6.861235184,158.86088869999998,coffee,49.6,6758.13,0.58,1
103,33,33,26.71717393,50.50148528,7.131435858,126.8073984,coffee,31.65,9318.82,0.54,0
93,26,27,24.59245684,56.46829641,7.288211994,137.70440469999997,coffee,67.49,7091.38,0.32,0
104,35,28,27.51006055,50.66687215,6.983732393,143.9955548,coffee,58.04,1161.97,0.44,1
116,36,25,27.57847581,58.52534263,6.172090205,156.6810374,coffee,39.45,6837.84,0.81,0
107,38,29,26.65069302,57.56695719,6.35118177,145.105065,coffee,44.26,1079.31,0.37,1
101,33,33,26.97251562,62.0183627,6.908671378999999,142.8610793,coffee,59.58,5502.04,0.75,1
107,31,31,23.17124551,52.97841162,6.766184468,153.12016440000005,coffee,49.9,4217.66,0.91,0
99,16,30,23.52652084,65.44340921,6.392791654,186.1728203,coffee,65.13,4381.27,0.38,0
103,40,30,27.30901814,55.196224,6.3483162570000005,141.48316440000005,coffee,54.96,4113.46,0.54,1
118,31,34,27.54823036,62.88179198,6.123796057000001,181.4170812,coffee,46.47,8813.36,0.54,1
106,21,35,25.627355,57.04151119,7.4285236339999985,188.5506536,coffee,57.7,8392.42,0.95,1
116,38,34,23.29250318,50.04557009,6.020947179,183.468585,coffee,52.78,3309.71,0.51,0
97,35,26,24.91461008,53.74144743,6.334610249,166.2549307,coffee,42.4,9128.73,0.4,0
107,34,32,26.77463708,66.4132686,6.78006386,177.7745075,coffee,59.88,3324.44,0.36,1
99,15,27,27.41711238,56.63636248,6.086922359,127.92461000000002,coffee,67.21,8802.09,0.64,1
118,33,30,24.13179691,67.22512329,6.362607851,173.32283859999995,coffee,58.94,5697.7,0.69,0
117,32,34,26.2724184,52.12739421,6.758792552,127.1752928,coffee,41.57,3211.01,0.47,1
104,18,30,23.60301571,60.39647474,6.779832611000002,140.9370415,coffee,46.12,7616.25,0.45,0


--- END FILE: cleaned_sensor_data.csv ---

--- START FILE: combine_project.py ---

import os

def combine_files_to_single_file(root_dir, output_filename="combined_project_files.txt"):
    """
    Combines the content of all files in a directory into a single file,
    excluding 'node_modules' directories and 'package-lock.json' files.

    Args:
        root_dir (str): The root directory of the project.
        output_filename (str): The name of the output file.
    """
    combined_content = []
    excluded_dirs = ['node_modules', '.git', '.vscode', '.idea', 'dist', 'build']
    excluded_files = ['package-lock.json', 'yarn.lock', 'bun.lockb', '.env'] # Added .env as it might contain sensitive info

    print(f"Starting to combine files from: {root_dir}")
    print(f"Excluding directories: {excluded_dirs}")
    print(f"Excluding files: {excluded_files}")

    for dirpath, dirnames, filenames in os.walk(root_dir):
        # Modify dirnames in-place to skip excluded directories
        dirnames[:] = [d for d in dirnames if d not in excluded_dirs]

        for filename in filenames:
            if filename in excluded_files:
                print(f"Skipping excluded file: {os.path.join(dirpath, filename)}")
                continue

            file_path = os.path.join(dirpath, filename)
            # Make path relative to root_dir for the header
            relative_file_path = os.path.relpath(file_path, root_dir)

            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                combined_content.append(f"\n--- START FILE: {relative_file_path} ---\n\n")
                combined_content.append(content)
                combined_content.append(f"\n\n--- END FILE: {relative_file_path} ---\n")
                print(f"Included file: {relative_file_path}")
            except UnicodeDecodeError:
                print(f"Skipping binary or undecodable file (UnicodeDecodeError): {relative_file_path}")
            except Exception as e:
                print(f"Error reading file {relative_file_path}: {e}")

    output_path = os.path.join(root_dir, output_filename)
    try:
        with open(output_path, 'w', encoding='utf-8') as outfile:
            outfile.write("".join(combined_content))
        print(f"\nSuccessfully combined all files into: {output_path}")
    except Exception as e:
        print(f"Error writing output file {output_path}: {e}")

if __name__ == "__main__":
    # Get the current working directory where the script is run
    # This assumes you run the script from your project's root directory
    project_root = os.getcwd()
    combine_files_to_single_file(project_root)


--- END FILE: combine_project.py ---

--- START FILE: convert.py ---

# convert.py
import base64
with open("agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json", "rb") as f:
    encoded = base64.b64encode(f.read()).decode()

with open("firebase_key_b64.txt", "w") as f:
    f.write(encoded)

print("Done. Copy firebase_key_b64.txt content into FIREBASE_KEY_B64 env var on Render.")


--- END FILE: convert.py ---

--- START FILE: csv-handler.py ---

import duckdb

# Path to your CSV file
csv_path = "cleaned_sensor_data.csv"

# Query: Select distinct crop labels
query = f"""
    SELECT DISTINCT label
    FROM read_csv_auto('{csv_path}')
"""

# Run query
result = duckdb.query(query).to_df()

# Display result
print(result)


--- END FILE: csv-handler.py ---

--- START FILE: firebase_key_b64.txt ---

ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiYWdyaWFzdHJheC13ZWJzaXRlIiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiZDk4YWMxZDhlYWU2OTc5ZGRkOTU3ZjZiZjgzNjM3OTA2N2E5MTE1MCIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZnSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2d3Z2dTa0FnRUFBb0lCQVFEcEhJWWFOM0tTSkx3VFxuUEZBN0k5ME5nVVZLNjBXZ2xNMlFxcVJaK2JNWlMxMGw4NWRXcnI1M3BVbEZNcnFIVU5MMzh2YU8zdU5qdVZ1TFxueTJoUjVnWkRVSTRwanRvMU9jSXpaRUVJQzdiYzNPR0hNS1gxY3Ixb1NkZ3k5QVV6MXhROGJGcW1lc1NDSER2SVxueUVMT09UVVJoNG51V1ZFYW94dUVWbFROc3JGR3haeURSUGExdURGbWpPbEltcXN2TFVDdEZ3akw5Rzk3K0VSSFxubmZmZnB4cFBILzJZbUNPSEd1UCtwNUczMUQzdWtJUkJFbTlmd09qNzI1TVhlUHh6ZWhRdG1wVjdYc2FxSVg3elxuelF1UmlXajdXZ1I4R1BwNGpVTDdPODU0MVQzemNqRHU4Z1VlQXd3elVGOFlhMzdJd2ZHZUZZamszY1E2RUtaYlxuYm1VeVhMVGxBZ01CQUFFQ2dnRUFTWDlEek1wRXBrMU11eWZlQi9kenY4bE5ScVROVENiK2RTbElMbElySk1OOVxuTi9VSWR6MGJNbS83blFTMGlPdHp5TmRpNDRMazRORlZTc3MwTmZZM2JVdmR0cjZpai91SS9sa1NvKzNGbHZkUlxuYUNWdmZlYlNUeXBSTHlkKzZHeGNwZnhuekd1U3Y0OFZUbVhOb21XcEZNRE9QVWNONmo4WTh1MmhTVVdZM1QzZ1xueDZHOGN4U2JwWXRXd20rZ1pUVlNFcTd2VkFlOWRBZERsNnVsckdUQlpzb3p4a095d0RkTXE5R0VFTCtweW9OZ1xudkJrOXplTnhNanNTVmhaRUlFKzh1VUdIRG82cVNucUhDOGVQUk5NdVFGdjAxYVZtcTM5RFdWZEdYZUdHQXVXS1xuNm9tbDZVVHcrVkMyT29FdEp0dW02NDF2clg5SWllc3FVTWlHTlN1Yk5RS0JnUUQ5Z3l6bFozSU5Hb2ZEamN1YVxuejBWMThtMmw1WTE2bGZ6TUJLUWhkcjRYUStraCtpdm01UWdFK1UxajhpNjJSWE9aMy8yV0JRZlZVOUFrVW5TcFxub1VwanNTNzBJKzFSUG1sS1RmcVRzc1hjeEtUbktNTWVKZUxRYWJVY002cU1mV2NubGVWWXNmbDZjdVVtUXdpRVxuWG45YlloQ2hPZ0VoaUJmQ0RSaFh4QTZlbHdLQmdRRHJaaG5nSERJY2xzUFFtd3pnVVkvcFFaNC9pcGkrUTdMTVxuZ25mVkdKWElmRGpTSDNPU05QOXIzNU15SGc5YVE1Zk5TSU9HR01KaFRkOCsxVjBBNGl1UU5rVGx2ZWYyMHo4clxuQ3MvcVd0bDJveUxSd1hrcWpOakY1REV6azBoYXdXLy95M0g4MUY2VTZHRFNGaURKVkFsQWYzeWgyc1dRODRQb1xud1IvOFZtSXo0d0tCZ1FDczd1aVhiT09PTU1UZ0QwQU8wTW1QVmRxYVNtY2ljbUpLUWZnOG82VzBkU3o1Y3BDMFxuSnhRN1lGejhpdDUybEJYeHA2eHl3K2UrRERoMkxwRktqYTRUSjNEaU5nZlRYZ0d4SUZTSW9IRDgwbCt6R0VsUlxucllKMXJVWlFnS1ljeEFhMEtEcVZNSU1BbHBQZWIrZkZkRGpvZTVMZ2lKTHc3c2RXSmx5dXNoMU83UUtCZ1FDMFxucHVPZXVTVEFDZmYyeExjcUE0NFU3Wlc3bitxK3dZZWJLVms3Z2FXWmViUEZsZnVFcmdXRFRNNVMvUHk5UWZoaVxudzQ2a1A2WVZOTVRxSEtaR1FrdzZYVnVja0pSUE9TbFdKL01PSUhDWmVuTURWSjVmU0Q0b0NJcTEwUWNMRno2VFxucVJjdWQvQ3FDSGdkWW53QTVldy93bGJzZzg5eEFXRXZJOThmTVZBbUR3S0JnRWdDRkxYQlVHMnJQNndxZ3cyZ1xuL041bE5QUVp5dGkxWk1ndkhYMFBXY3g0NG1aYjRydXVSZmVDc1ZFY21CZXhoa3RaMzFZa0lBT0k5OXpFcUZFb1xuM0h4S1FsRng0VFg4VVNSemRFM0E5LzNCQVJyUFR4NmlMSnI5TlJTcHhTdHdKM2pOUmNPWVl1eUVUZzkwazhqRVxuTi92Zy90Uk1ZQkZGb2M0Y3JnMXEyVjU4XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAiZmlyZWJhc2UtYWRtaW5zZGstZmJzdmNAYWdyaWFzdHJheC13ZWJzaXRlLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjExMTE1MDY1NDMwNzQ1NDg2NjI5NSIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZmlyZWJhc2UtYWRtaW5zZGstZmJzdmMlNDBhZ3JpYXN0cmF4LXdlYnNpdGUuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0K

--- END FILE: firebase_key_b64.txt ---

--- START FILE: insert-sample-data.py ---

import firebase_admin
from firebase_admin import credentials, db
import datetime
import random
import time

# Firebase Init
# Ensure 'agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json' is in the same directory
try:
    cred = credentials.Certificate("agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json")
    if not firebase_admin._apps: # Prevent double initialization
        firebase_admin.initialize_app(cred, {
            'databaseURL': 'https://agriastrax-website-default-rtdb.firebaseio.com/'
        })
    print("Firebase initialized successfully.")
except Exception as e:
    print(f"❌ Error initializing Firebase: {e}")
    exit() # Exit if Firebase fails to initialize

ref = db.reference('sensors/farm1')

# Define possible crop stages
CROP_STAGES = ['seed', 'sprout', 'vegetative', 'flowering', 'mature']

# Insert 10 past samples
print("Inserting 10 enhanced dummy sensor readings with all 12 features (including crop_stage and growth_factor)...")
for i in range(10):
    sample_data = {
        'timestamp': (datetime.datetime.now() - datetime.timedelta(minutes=(10 - i)*5)).isoformat(),
        'soil_moisture': round(random.uniform(20, 80), 2),
        'temperature': round(random.uniform(25, 40), 2),
        'humidity': round(random.uniform(40, 90), 2),
        'pH': round(random.uniform(5.5, 7.5), 2), # Corrected to 'pH' for consistency with dashboard
        'light_intensity': random.randint(300, 800),
        'N': random.randint(0, 120),
        'P': random.randint(0, 60),
        'K': random.randint(0, 200),
        'rainfall': round(random.uniform(0, 200), 2),
        'crop_stage': random.choice(CROP_STAGES),
        'growth_factor': round(random.uniform(0.3, 1.0), 2)  # simulating energy/photosynthesis score
    }
    ref.push(sample_data)

print("Successfully inserted 10 enhanced dummy sensor readings.")

# Simulate live updates every 10s
print("\nSimulating live updates. New data will be inserted every 10 seconds. Press Ctrl+C to stop.")
while True:
    current_timestamp = datetime.datetime.now().isoformat()
    
    # Introduce some realistic variations
    current_soil_moisture = round(random.uniform(20, 60), 2)
    current_temperature = round(random.uniform(28, 35), 2)
    current_humidity = round(random.uniform(50, 80), 2)
    current_pH = round(random.uniform(6.0, 7.2), 2)
    current_light_intensity = random.randint(400, 700)
    current_N = random.randint(20, 100)
    current_P = random.randint(10, 50)
    current_K = random.randint(30, 150)
    current_rainfall = round(random.uniform(0, 120), 2)
    
    # Simulate a progression in crop stage over time (very basic simulation)
    # You might want a more sophisticated logic here based on actual time or growth_factor
    # For now, it will pick a random stage, but you could make it sequential.
    current_crop_stage = random.choice(CROP_STAGES) 
    
    # Growth factor could be influenced by light, temperature, moisture
    # A simple example: higher light, temp, and moisture might lead to higher growth_factor
    current_growth_factor = round(
        random.uniform(0.3, 1.0) * (current_light_intensity / 800) * (current_temperature / 40) * (current_soil_moisture / 80), 2
    )
    # Clamp growth_factor to [0.3, 1.0] if the above calculation goes outside.
    current_growth_factor = max(0.3, min(1.0, current_growth_factor))


    ref.push({
        'timestamp': current_timestamp,
        'soil_moisture': current_soil_moisture,
        'temperature': current_temperature,
        'humidity': current_humidity,
        'pH': current_pH, # Corrected to 'pH' for consistency with dashboard
        'light_intensity': current_light_intensity,
        'N': current_N,
        'P': current_P,
        'K': current_K,
        'rainfall': current_rainfall,
        'crop_stage': current_crop_stage,
        'growth_factor': current_growth_factor
    })
    print(f"Inserted real-time enriched sensor data at {current_timestamp}. Data: {current_crop_stage}, {current_growth_factor}")
    time.sleep(10)

--- END FILE: insert-sample-data.py ---

--- START FILE: phase-1.py ---

import time
import random
import firebase_admin
from firebase_admin import credentials, db
import os
import base64
import tempfile

# --- Load Firebase Key from Environment ---
firebase_key_b64 = os.getenv("FIREBASE_KEY_B64")
if not firebase_key_b64:
    # Fallback for local development if environment variable is not set
    # Ensure 'agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json' is in your project root
    try:
        cred = credentials.Certificate("agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json")
        if not firebase_admin._apps:
            firebase_admin.initialize_app(cred, {
                'databaseURL': 'https://agriastrax-website-default-rtdb.firebaseio.com/'
            })
        print("Firebase initialized using local credentials file.")
    except Exception as e:
        raise ValueError(f"❌ Environment variable 'FIREBASE_KEY_B64' not set and local credentials file not found or invalid: {e}")
else:
    # Decode and write to temp file for environment variable
    firebase_key_json = base64.b64decode(firebase_key_b64).decode('utf-8')
    with tempfile.NamedTemporaryFile(delete=False, suffix=".json", mode="w") as f:
        f.write(firebase_key_json)
        key_path = f.name

    # --- Initialize Firebase ---
    if not firebase_admin._apps:
        cred = credentials.Certificate(key_path)
        firebase_admin.initialize_app(cred, {
            'databaseURL': 'https://agriastrax-website-default-rtdb.firebaseio.com/'
        })
    # Clean up the temporary file after initialization
    os.remove(key_path)
    print("Firebase initialized using environment variable.")


# --- Simulate or Read Sensor Data ---
def read_sensor_data():
    """
    Generates simulated sensor data, including soil temperature, soil moisture,
    and a 'growth_trigger' based on these two parameters.
    """
    soil_temp = round(random.uniform(20, 35), 2)
    soil_moisture = round(random.uniform(20, 80), 2)
    
    # Simulate plant decision to grow based on soil temp + moisture
    # growth_trigger is 1 if soil_temp > 22 and soil_moisture > 30, otherwise 0
    growth_trigger = 1 if soil_temp > 22 and soil_moisture > 30 else 0

    return {
        'timestamp': time.strftime("%Y-%m-%d %H:%M:%S"),
        'soil_moisture': soil_moisture,
        'temperature': soil_temp, # Renamed to 'temperature' for consistency with dashboard
        'humidity': round(random.uniform(30, 80), 2),
        'pH': round(random.uniform(5.5, 7.5), 2),
        'light_intensity': round(random.uniform(100, 1000), 2),
        'growth_trigger': growth_trigger # New field added
    }

# --- Push to Firebase ---
def push_to_firebase(sensor_data):
    """Pushes the given sensor data to the Firebase Realtime Database."""
    ref = db.reference('sensors/farm1')
    ref.push(sensor_data)
    print(f"Uploaded: {sensor_data}")

# --- Main Loop ---
if __name__ == '__main__':
    print("Starting live sensor data simulation. Data will be uploaded to Firebase every 10 seconds.")
    print("Press Ctrl+C to stop the script.")
    while True:
        data = read_sensor_data()
        push_to_firebase(data)
        time.sleep(10)  # 10-second interval

--- END FILE: phase-1.py ---

--- START FILE: phase-2.py ---

import pandas as pd
import firebase_admin
from firebase_admin import credentials, db
import matplotlib.pyplot as plt
import seaborn as sns
import os
import base64
import tempfile

# --- Load Firebase credentials securely from base64 env variable ---
firebase_key_b64 = os.getenv("FIREBASE_KEY_B64")
if not firebase_key_b64:
    # Fallback for local development if environment variable is not set
    try:
        cred = credentials.Certificate("agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json")
        if not firebase_admin._apps:
            firebase_admin.initialize_app(cred, {
                'databaseURL': 'https://agriastrax-website-default-rtdb.firebaseio.com/'
            })
        print("Firebase initialized using local credentials file.")
    except Exception as e:
        raise ValueError(f"❌ FIREBASE_KEY_B64 environment variable not set and local credentials file not found or invalid: {e}")
else:
    decoded = base64.b64decode(firebase_key_b64).decode("utf-8")
    with tempfile.NamedTemporaryFile(delete=False, suffix=".json", mode="w") as f:
        f.write(decoded)
        key_path = f.name

    # --- Firebase Setup ---
    if not firebase_admin._apps:
        cred = credentials.Certificate(key_path)
        firebase_admin.initialize_app(cred, {
            'databaseURL': 'https://agriastrax-website-default-rtdb.firebaseio.com/'
        })
    # Clean up the temporary file after initialization for security
    os.remove(key_path)
    print("Firebase initialized using environment variable.")


# --- Fetch Data ---
def fetch_data():
    """Fetches all sensor data from Firebase Realtime Database."""
    ref = db.reference('sensors/farm1')
    snapshot = ref.get()
    if not snapshot:
        print("❌ No data found in Firebase.")
        return pd.DataFrame()
    
    # Convert Firebase snapshot to DataFrame, transpose to get columns as features
    df = pd.DataFrame(snapshot).T
    return df

# --- Preprocessing ---
def preprocess(df):
    """
    Cleans and prepares the DataFrame for EDA.
    Converts timestamp, sorts, and attempts to convert all columns to numeric,
    handling errors gracefully.
    """
    if 'timestamp' in df.columns:
        df['timestamp'] = pd.to_datetime(df['timestamp'], errors='coerce')
        df = df.dropna(subset=['timestamp']) # Drop rows where timestamp conversion failed
        df = df.sort_values('timestamp')
    else:
        print("Warning: 'timestamp' column not found.")

    # Attempt to convert all relevant columns to numeric, ignoring errors
    # This is crucial for plotting and analysis
    numeric_cols = ['soil_moisture', 'temperature', 'humidity', 'pH', 'light_intensity', 
                    'N', 'P', 'K', 'rainfall', 'growth_factor', 'growth_trigger']
    for col in numeric_cols:
        if col in df.columns:
            df[col] = pd.to_numeric(df[col], errors='coerce')
            
    df = df.reset_index(drop=True)
    return df

# --- EDA Plotting ---
def plot_eda(df):
    """
    Generates time-series plots for sensor data, growth factors, and crop stages.
    Uses subplots for better clarity.
    """
    sns.set(style="darkgrid")
    
    # Create a figure with multiple subplots
    fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(14, 18), sharex=True)
    fig.suptitle('Smart AgriTech Sensor Data Analysis', fontsize=16)

    # Plot 1: Core IoT Sensor Time Series
    ax1 = axes[0]
    core_sensor_cols = ['soil_moisture', 'temperature', 'humidity', 'pH', 'light_intensity']
    for col in core_sensor_cols:
        if col in df.columns and not df[col].isnull().all():
            ax1.plot(df['timestamp'], df[col], label=col, marker='.', markersize=4, linestyle='-')
    ax1.legend(title='Sensor Metric', loc='upper left', bbox_to_anchor=(1, 1))
    ax1.set_title('Core IoT Sensor Readings Over Time')
    ax1.set_ylabel('Value')
    ax1.grid(True)

    # Plot 2: Biological Behavior - Growth Factor and Growth Trigger
    ax2 = axes[1]
    if 'growth_factor' in df.columns and not df['growth_factor'].isnull().all():
        sns.lineplot(data=df, x='timestamp', y='growth_factor', label='Growth Factor', ax=ax2, color='green', marker='o', markersize=4)
    else:
        print("Warning: 'growth_factor' column not found or is empty. Skipping plot.")

    if 'growth_trigger' in df.columns and not df['growth_trigger'].isnull().all():
        # Plot growth_trigger as steps for binary changes
        sns.lineplot(data=df, x='timestamp', y='growth_trigger', label='Growth Trigger (Binary)', ax=ax2, color='purple', drawstyle='steps-post', marker='x', markersize=6)
        ax2.set_yticks([0, 1]) # Ensure y-axis shows 0 and 1 clearly
        ax2.set_yticklabels(['No Growth', 'Growth Triggered'])
    else:
        print("Warning: 'growth_trigger' column not found or is empty. Skipping plot.")
        
    ax2.legend(title='Biological Metric', loc='upper left', bbox_to_anchor=(1, 1))
    ax2.set_title('Simulated Biological Behaviors: Growth Factor & Trigger')
    ax2.set_ylabel('Value / State')
    ax2.grid(True)

    # Plot 3: Categorical Biological Behavior - Crop Stage
    ax3 = axes[2]
    if 'crop_stage' in df.columns and not df['crop_stage'].isnull().all():
        # Use scatter plot for categorical data over time
        sns.scatterplot(data=df, x='timestamp', y='crop_stage', ax=ax3, hue='crop_stage', s=100, alpha=0.7, legend='full')
        ax3.set_title('Simulated Crop Stage Over Time')
        ax3.set_ylabel('Crop Stage')
        ax3.legend(title='Crop Stage', loc='upper left', bbox_to_anchor=(1, 1))
    else:
        print("Warning: 'crop_stage' column not found or is empty. Skipping plot.")
        
    ax3.set_xlabel('Timestamp')
    ax3.grid(True)

    # Rotate x-axis labels for better readability
    for ax in axes:
        plt.setp(ax.get_xticklabels(), rotation=45, ha="right")

    plt.tight_layout(rect=[0, 0.03, 1, 0.96]) # Adjust layout to prevent title overlap
    plt.show()

# --- Run the Script ---
if __name__ == '__main__':
    df_raw = fetch_data()
    if not df_raw.empty:
        df_clean = preprocess(df_raw)
        print("\n--- Cleaned Data Head ---")
        print(df_clean.head())
        
        print("\n--- Data Info ---")
        df_clean.info()

        print("\n--- Plotting EDA ---")
        plot_eda(df_clean)
        print("EDA plots displayed.")
    else:
        print("No sensor data available to perform EDA.")

--- END FILE: phase-2.py ---

--- START FILE: phase-3.py ---

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, LSTM, Dropout
from sklearn.preprocessing import MinMaxScaler
import matplotlib.pyplot as plt
import os

# --- Constants & Configuration ---
DATA_FILE = "cleaned_sensor_data.csv"
MODEL_SAVE_PATH = "tdann_pnsm_model.keras"
LOOKBACK_WINDOW = 5
EPOCHS = 50 # Increased epochs for better training potentially
BATCH_SIZE = 16
VALIDATION_SPLIT = 0.2

# --- Load & Prepare Data ---
try:
    df = pd.read_csv(DATA_FILE)
    print(f"Loaded {len(df)} rows from {DATA_FILE}")
except FileNotFoundError:
    print(f"❌ Error: {DATA_FILE} not found. Please ensure Phase 2 has generated this file.")
    exit() # Exit if data file is not found
except Exception as e:
    print(f"❌ Error loading data: {e}")
    exit()

# Convert timestamp and set as index (optional for sequence creation, but good practice)
df['timestamp'] = pd.to_datetime(df['timestamp'], errors='coerce')
df = df.dropna(subset=['timestamp']) # Drop rows with invalid timestamps
df = df.sort_values('timestamp') # Ensure data is time-ordered

# Drop original 'ph' if 'pH' is the correct one used consistently in dashboard/sim
# Or, if both exist and are distinct, keep them and decide which to use.
# For consistency with the dashboard and `insert-sample-data.py` I'll assume 'pH' is preferred.
if 'ph' in df.columns and 'pH' in df.columns and 'ph' != 'pH':
    # If both exist and are different, you might want to choose one or combine them
    print("Warning: Both 'ph' and 'pH' columns exist. Using 'pH' and dropping 'ph'.")
    df = df.drop(columns=['ph'])
elif 'ph' in df.columns and 'pH' not in df.columns:
    print("Renaming 'ph' to 'pH' for consistency.")
    df = df.rename(columns={'ph': 'pH'})

# Convert all relevant columns to numeric, coercing errors to NaN
# This is crucial as Firebase data might come in as strings
numeric_cols = ['N', 'P', 'K', 'temperature', 'humidity', 'pH', 'rainfall',
                'soil_moisture', 'light_intensity', 'growth_factor', 'growth_trigger']
for col in numeric_cols:
    if col in df.columns:
        df[col] = pd.to_numeric(df[col], errors='coerce')

# Handle missing values: fill with forward fill then back fill to handle initial NaNs
# This is a simple strategy; more advanced imputation might be needed for real data
df = df.fillna(method='ffill').fillna(method='bfill')
if df.isnull().sum().sum() > 0:
    print("Warning: Some NaN values remain after fillna. Consider more robust imputation if data is sparse.")
    # For now, drop rows with any remaining NaNs if critical features are missing
    df = df.dropna(subset=numeric_cols + ['label', 'crop_stage'])


# One-hot encode categorical features: 'label' (crop type) and 'crop_stage'
# Ensure df['label'] is correctly populated from 'cleaned_sensor_data.csv'
if 'label' in df.columns:
    crop_dummies = pd.get_dummies(df['label'], prefix='crop')
    df = pd.concat([df, crop_dummies], axis=1)
    print(f"One-hot encoded {len(crop_dummies.columns)} crop types.")
else:
    print("Warning: 'label' column not found for crop one-hot encoding.")
    crop_dummies = pd.DataFrame() # Create empty if not found

if 'crop_stage' in df.columns:
    # Handle potential non-string values by converting to string before get_dummies
    df['crop_stage'] = df['crop_stage'].astype(str) 
    stage_dummies = pd.get_dummies(df['crop_stage'], prefix='stage')
    df = pd.concat([df, stage_dummies], axis=1)
    print(f"One-hot encoded {len(stage_dummies.columns)} crop stages.")
else:
    print("Warning: 'crop_stage' column not found for stage one-hot encoding.")
    stage_dummies = pd.DataFrame() # Create empty if not found

# Define Input Features for the TDANN model
base_sensor_features = ['N', 'P', 'K', 'temperature', 'humidity', 'pH', 'rainfall']
# Add new biological signals as input features
biological_features = ['growth_factor', 'growth_trigger'] # Ensure these exist in your cleaned_sensor_data.csv
# Combine all input features
input_features = [col for col in base_sensor_features + biological_features + crop_dummies.columns.tolist() + stage_dummies.columns.tolist() if col in df.columns]

# Define Output Targets
# For "N, P, K balance", we'll create a simple sum as a proxy for general nutrient levels/health
df['nutrient_sum_proxy'] = df['N'] + df['P'] + df['K']
output_targets = ['soil_moisture', 'light_intensity', 'nutrient_sum_proxy']

# Filter DataFrame to only include necessary columns for scaling and sequence creation
df_model_input = df[input_features + output_targets].copy()

# Drop rows with any remaining NaNs in the selected features/targets
df_model_input = df_model_input.dropna()

if df_model_input.empty:
    print("❌ Error: No complete data rows available after preprocessing for model training.")
    exit()

print(f"DataFrame for model training has {len(df_model_input)} rows and {len(df_model_input.columns)} columns.")

# Separate features (X) and targets (Y)
X_data_raw = df_model_input[input_features].values
y_data_raw = df_model_input[output_targets].values

# --- Scaling ---
# Scale input features
input_scaler = MinMaxScaler()
X_scaled = input_scaler.fit_transform(X_data_raw)

# Scale output targets
output_scaler = MinMaxScaler()
y_scaled = output_scaler.fit_transform(y_data_raw)

print(f"Input features scaled. Shape: {X_scaled.shape}")
print(f"Output targets scaled. Shape: {y_scaled.shape}")

# --- Time-Delay Setup (TDANN: lookback window) ---
def create_sequences(input_data, output_data, lookback):
    """
    Creates sequences for TDANN (LSTM) model.
    :param input_data: Scaled input features (2D numpy array)
    :param output_data: Scaled target outputs (2D numpy array)
    :param lookback: Number of previous timesteps to consider for prediction
    :return: X (input sequences), y (corresponding targets)
    """
    X, y = [], []
    for i in range(lookback, len(input_data)):
        X.append(input_data[i - lookback:i])
        y.append(output_data[i]) # Append the entire row of targets for the current timestep
    return np.array(X), np.array(y)

X, y = create_sequences(X_scaled, y_scaled, LOOKBACK_WINDOW)

print(f"Created sequences. X shape: {X.shape}, y shape: {y.shape}")

# --- TDANN Model (LSTM-based) ---
model = Sequential()
# Input shape: (timesteps, features) -> (LOOKBACK_WINDOW, number_of_input_features)
model.add(LSTM(64, return_sequences=True, input_shape=(X.shape[1], X.shape[2])))
model.add(Dropout(0.2))
model.add(LSTM(32)) # No return_sequences=True for the last LSTM layer before Dense
model.add(Dropout(0.2)) # Added another Dropout layer
# Final Dense layer for multi-output prediction
model.add(Dense(len(output_targets))) # Output: [moisture_pred, light_pred, nutrient_pred]

model.compile(optimizer='adam', loss='mse')
model.summary()

# --- Model Training ---
print("\n--- Training Model ---")
history = model.fit(X, y, epochs=EPOCHS, batch_size=BATCH_SIZE, validation_split=VALIDATION_SPLIT, shuffle=False)

# --- Plot Loss ---
plt.figure(figsize=(10, 6))
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title('TDANN Training and Validation Loss (Multi-Output)')
plt.xlabel('Epoch')
plt.ylabel('Mean Squared Error (MSE)')
plt.legend()
plt.grid(True)
plt.show()

# --- Save Model ---
print(f"\nSaving model to {MODEL_SAVE_PATH}...")
model.save(MODEL_SAVE_PATH)
print("Model saved successfully.")

# --- Optional: Make a prediction and inverse transform to see raw values ---
if X.shape[0] > 0:
    sample_input = X[-1].reshape(1, X.shape[1], X.shape[2]) # Get last sequence
    predicted_scaled = model.predict(sample_input)
    predicted_raw = output_scaler.inverse_transform(predicted_scaled)
    actual_raw = output_scaler.inverse_transform(y[-1].reshape(1, -1))

    print("\n--- Sample Prediction ---")
    print(f"Predicted (Raw): Soil Moisture={predicted_raw[0][0]:.2f}%, "
          f"Light Intensity={predicted_raw[0][1]:.2f}, "
          f"Nutrient Sum Proxy={predicted_raw[0][2]:.2f}")
    print(f"Actual (Raw):    Soil Moisture={actual_raw[0][0]:.2f}%, "
          f"Light Intensity={actual_raw[0][1]:.2f}, "
          f"Nutrient Sum Proxy={actual_raw[0][2]:.2f}")
else:
    print("Not enough data to make a sample prediction.")

# You might want to save the scalers as well if you plan to use them for live predictions
# from joblib import dump, load
# dump(input_scaler, 'input_scaler.joblib')
# dump(output_scaler, 'output_scaler.joblib')

--- END FILE: phase-3.py ---

--- START FILE: phase-4.py ---

import numpy as np
from deap import base, creator, tools, algorithms
import skfuzzy as fuzz
import skfuzzy.control as ctrl
import matplotlib.pyplot as plt # Added for plotting fitness evolution

# --- Fuzzy Logic Controller (pH, Light → Irrigation Level) ---
# Antecedents (Input variables)
# Expanded range for pH and irrigation to be more robust
ph = ctrl.Antecedent(np.arange(4, 9.1, 0.1), 'pH')
light = ctrl.Antecedent(np.arange(100, 1001, 1), 'light')
# Consequent (Output variable) - Using 0-100 scale for irrigation percentage
irrigation = ctrl.Consequent(np.arange(0, 101, 1), 'irrigation')

# Auto-membership functions for simplicity (can be customized for finer control)
ph.automf(3) # Labels: 'poor', 'average', 'good'
light.automf(3) # Labels: 'poor', 'average', 'good'

# Custom membership functions for irrigation for better clarity and range
irrigation['low'] = fuzz.trimf(irrigation.universe, [0, 0, 30])
irrigation['medium'] = fuzz.trimf(irrigation.universe, [20, 50, 80])
irrigation['high'] = fuzz.trimf(irrigation.universe, [70, 100, 100])

# Fuzzy Rules: Define how inputs map to the output
# Rule 1: If pH is poor OR Light is poor, then irrigation should be high
rule1 = ctrl.Rule(ph['poor'] | light['poor'], irrigation['high'])
# Rule 2: If pH is average AND Light is average, then irrigation should be medium
rule2 = ctrl.Rule(ph['average'] & light['average'], irrigation['medium'])
# Rule 3: If pH is good AND Light is good, then irrigation should be low
rule3 = ctrl.Rule(ph['good'] & light['good'], irrigation['low'])

# Create the control system and simulation
irrigation_ctrl = ctrl.ControlSystem([rule1, rule2, rule3])
irrigation_sim = ctrl.ControlSystemSimulation(irrigation_ctrl)

def fuzzy_decision(ph_val, light_val):
    """
    Computes the recommended irrigation level based on pH and light intensity
    using the defined fuzzy logic system.
    """
    try:
        irrigation_sim.input['pH'] = ph_val
        irrigation_sim.input['light'] = light_val
        irrigation_sim.compute()
        return irrigation_sim.output['irrigation']
    except ValueError as e:
        # Handle cases where input values are out of defined ranges, or rules don't fire.
        # This can happen if GA explores extreme values. Return a neutral/default.
        # print(f"Fuzzy computation error for pH={ph_val}, light={light_val}: {e}. Returning 50.")
        return 50 # Default to medium irrigation if computation fails

# --- Genetic Algorithm for Optimal Growth Settings ---

# In DEAP, you define your fitness strategy (e.g., maximize or minimize) and individual structure.
# We want to MINIMIZE irrigation level, as lower irrigation (when conditions are good) indicates optimal settings.
creator.create("FitnessMin", base.Fitness, weights=(-1.0,)) # (-1.0,) means minimization
creator.create("Individual", list, fitness=creator.FitnessMin) # Individual linked to FitnessMin

toolbox = base.Toolbox()

# Attribute generators for the individual's genes (pH and Light intensity)
# pH range: 5.5 to 7.5 (common optimal range for many crops)
toolbox.register("attr_ph", np.random.uniform, 5.5, 7.5)
# Light intensity range: 100 to 1000 (example range for crop lighting)
toolbox.register("attr_light", np.random.uniform, 100, 1000)

# Individual creator: a list containing one pH and one light intensity value
def create_individual():
    return [
        toolbox.attr_ph(),    # Index 0: pH
        toolbox.attr_light()  # Index 1: Light intensity
    ]
toolbox.register("individual", tools.initIterate, creator.Individual, create_individual)
# Population creator: a list of individuals
toolbox.register("population", tools.initRepeat, list, toolbox.individual)

# Evaluation Function: how to assess the "fitness" of an individual
def evaluate(individual):
    """
    Evaluates an individual (pH, light) by using the fuzzy logic controller
    to determine the 'irrigation level' required.
    
    The goal is to find pH and Light conditions that minimize the required irrigation.
    Therefore, the fitness is the negative of the irrigation level.
    """
    ph_val, light_val = individual
    irrigation_level = fuzzy_decision(ph_val, light_val)
    return irrigation_level, # Return as a tuple, DEAP expects this. Since FitnessMin has weight -1.0, this value will be minimized.

toolbox.register("evaluate", evaluate) # Register the evaluation function

# Genetic Operators
toolbox.register("mate", tools.cxBlend, alpha=0.5) # Blended Crossover
toolbox.register("select", tools.selTournament, tournsize=3) # Tournament Selection

# --- Adaptive Mutation Rate Function ---
def adaptive_mutation_rate(current_soil_moisture):
    """
    Calculates an adaptive independent mutation probability (indpb)
    based on the current soil moisture level (representing environmental stress).
    
    - Low soil moisture (<30): High stress, increase mutation rate (0.35) for broader exploration.
    - High soil moisture (>70): Low stress (or potentially over-watering), decrease mutation rate (0.1)
                                to converge on existing good solutions.
    - Moderate soil moisture (30-70): Balanced stress, moderate mutation rate (0.2).
    """
    if current_soil_moisture < 30: # High stress (e.g., drought conditions)
        return 0.35  # Higher mutation to encourage diverse solutions
    elif current_soil_moisture > 70: # Low stress (e.g., potential waterlogging)
        return 0.1   # Lower mutation to fine-tune existing solutions
    else: # Moderate stress (optimal range)
        return 0.2   # Standard mutation rate

# --- CURRENT_SOIL_MOISTURE: This would typically come from your live sensor feed ---
# For demonstration, we'll use a hardcoded value. In a real system, you'd fetch
# the latest soil moisture reading from Firebase (Phase 1).
CURRENT_SOIL_MOISTURE = 45 # Example: Assume current soil moisture is 45%

# Calculate the adaptive independent probability of mutation for the current run
adaptive_indpb = adaptive_mutation_rate(CURRENT_SOIL_MOISTURE)

# Register the mutate operator using the calculated adaptive probability
# mu: mean of the gaussian distribution
# sigma: standard deviation of the gaussian distribution
# indpb: independent probability for each attribute (gene) to be mutated
toolbox.register("mutate", tools.mutGaussian, mu=0, sigma=0.5, indpb=adaptive_indpb)
print(f"Adaptive Mutation Probability (indpb) set to: {adaptive_indpb:.2f} based on current soil moisture {CURRENT_SOIL_MOISTURE}%.")


# --- Run Genetic Algorithm ---
pop_size = 50 # Number of individuals in the population
num_generations = 100 # Number of generations to run the GA

# Initialize the population
pop = toolbox.population(n=pop_size)

# Hall of Fame to store the best individual found during the evolution
hof = tools.HallOfFame(1)

# Statistics to track fitness evolution
stats = tools.Statistics(lambda ind: ind.fitness.values)
stats.register("avg", np.mean)
stats.register("std", np.std)
stats.register("min", np.min) # Min fitness (best individual for minimization)
stats.register("max", np.max) # Max fitness (worst individual for minimization)

print("\n--- Running Fuzzy-Adaptive Genetic Algorithm ---")
# The eaSimple algorithm (Evolutionary Algorithm Simple)
# cxpb: Probability of two individuals to crossover.
# mutpb: Probability for an individual to be mutated. (Here set to 1.0 to ensure all individuals get a chance at mutation, then indpb controls gene-level mutation)
pop, log = algorithms.eaSimple(pop, toolbox, cxpb=0.7, mutpb=1.0, ngen=num_generations,
                               stats=stats, halloffame=hof, verbose=True)

# --- Best Solution ---
best_ind = hof[0] # The best individual is in the Hall of Fame
print(f"\n✅ Optimization Complete.")
print(f"Optimal pH: {best_ind[0]:.2f}")
print(f"Optimal Light Intensity: {best_ind[1]:.2f} lux")

# Calculate the irrigation level for the best found settings using the fuzzy system
optimal_irrigation_level = fuzzy_decision(best_ind[0], best_ind[1])
print(f"Fuzzy-calculated Irrigation Level for Optimal Settings: {optimal_irrigation_level:.2f}% (Lower is better)")
print(f"Corresponding Fitness Value (Negative Irrigation Level): {best_ind.fitness.values[0]:.2f}")


# --- Optional: Visualize the fitness evolution ---
gen, avg, std, min_fit, max_fit = log.select("gen", "avg", "std", "min", "max")
plt.figure(figsize=(10, 6))
plt.plot(gen, avg, label="Average Fitness")
plt.plot(gen, min_fit, label="Minimum Fitness (Best Individual)") # For minimization, min fitness is best
plt.fill_between(gen, avg - std, avg + std, color='blue', alpha=0.1, label="Std Dev")
plt.xlabel("Generation")
plt.ylabel("Fitness (Irrigation Level - Lower is Better)")
plt.title("Genetic Algorithm Fitness Evolution (Minimizing Irrigation Level)")
plt.legend()
plt.grid(True)
plt.show()

--- END FILE: phase-4.py ---

--- START FILE: phase-5-final-dashboard.py ---

import random
import streamlit as st
import pandas as pd
import numpy as np
import tensorflow as tf
from sklearn.preprocessing import MinMaxScaler, OneHotEncoder
from sklearn.linear_model import LinearRegression
import firebase_admin
from firebase_admin import credentials, db
import datetime
import plotly.express as px
import base64
import tempfile
import os
import json
import joblib # For saving/loading scalers

# For Voice Alerts
from gtts import gTTS

# Check for playsound availability
PLAYSOUND_AVAILABLE = False
try:
    import playsound
    PLAYSOUND_AVAILABLE = True
except ImportError:
    st.warning("`playsound` library not found. Voice alerts will be generated but not played. "
               "Install with `pip install playsound` for local playback. "
               "For cloud deployment, consider embedding HTML audio.")
except Exception as e:
    st.warning(f"Error importing playsound: {e}. Voice alerts might not work.")

# --- Firebase Secure Setup (Render-Compatible) ---
firebase_key_b64 = os.getenv("FIREBASE_KEY_B64")
firebase_cred_path = None # Initialize to None

try:
    if firebase_key_b64:
        decoded_json = base64.b64decode(firebase_key_b64).decode('utf-8')
        with tempfile.NamedTemporaryFile(delete=False, mode='w', suffix='.json') as f:
            f.write(decoded_json)
        firebase_cred_path = f.name
        cred = credentials.Certificate(firebase_cred_path)
    else:
        # Fallback for local development if environment variable is not set
        # Ensure 'agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json' is in your project root
        cred = credentials.Certificate("agriastrax-website-firebase-adminsdk-fbsvc-36cdff39c2.json")

    # Prevent double initialization
    if not firebase_admin._apps:
        firebase_admin.initialize_app(cred, {
            'databaseURL': 'https://agriastrax-website-default-rtdb.firebaseio.com/'
        })
    st.success("✅ Firebase initialized successfully.")
except Exception as e:
    st.error(f"❌ Firebase initialization failed: {e}")
    st.stop() # Stop the app if Firebase fails to initialize
finally:
    # Clean up the temporary file if created from environment variable
    if firebase_key_b64 and firebase_cred_path and os.path.exists(firebase_cred_path):
        os.remove(firebase_cred_path)

# --- Load Real Crop Labels from CSV ---
all_crop_labels = []
crop_encoder = None
try:
    crop_df_for_labels = pd.read_csv("cleaned_sensor_data.csv")
    all_crop_labels = sorted(crop_df_for_labels['label'].unique().tolist())
    
    # Initialize OneHotEncoder for crop type for consistent encoding
    crop_encoder = OneHotEncoder(handle_unknown='ignore', sparse_output=False)
    crop_encoder.fit(np.array(all_crop_labels).reshape(-1, 1)) # Fit with all known crop labels
    st.success(f"✅ Crop labels loaded: {len(all_crop_labels)} unique crops found.")
except FileNotFoundError:
    st.error("❌ 'cleaned_sensor_data.csv' not found. Please ensure it's in the same directory.")
    all_crop_labels = [] # Initialize as empty to prevent errors later
    # Fallback encoder, might not be fully representative without actual data
    crop_encoder = OneHotEncoder(handle_unknown='ignore', sparse_output=False) 
except Exception as e:
    st.error(f"❌ Error loading 'cleaned_sensor_data.csv': {e}")
    all_crop_labels = []
    # Fallback encoder
    crop_encoder = OneHotEncoder(handle_unknown='ignore', sparse_output=False) 

# --- Load AI Model ---
model = None
try:
    model = tf.keras.models.load_model("tdann_pnsm_model.keras")
    st.success("✅ AI model (tdann_pnsm_model.keras) loaded successfully.")
except Exception as e:
    st.error(f"❌ Error loading AI model (tdann_pnsm_model.keras): {e}")
    st.stop() # Stop the app if the model cannot be loaded

# --- Load Scalers ---
# IMPORTANT: These scalers MUST be the ones fitted during the model training phase.
input_scaler = None
output_scaler = None
try:
    input_scaler = joblib.load('tdann_input_scaler.joblib')
    output_scaler = joblib.load('tdann_output_scaler.joblib')
    st.success("✅ Input and Output scalers loaded successfully.")
except FileNotFoundError:
    st.error("❌ Scaler files (tdann_input_scaler.joblib, tdann_output_scaler.joblib) not found. "
             "The model predictions might be inaccurate without the correct scalers. "
             "Please ensure they are saved during model training and placed in the same directory.")
    # In a real production environment, you might want to stop the app here or handle robustly.
    input_scaler = MinMaxScaler() # Fallback: Initialize new scalers, but warn the user.
    output_scaler = MinMaxScaler() # Fallback: Initialize new scalers, but warn the user.
    st.warning("⚠️ Proceeding with newly initialized scalers. Predictions may be inaccurate.")
except Exception as e:
    st.error(f"❌ Error loading scalers: {e}")
    input_scaler = MinMaxScaler() # Fallback
    output_scaler = MinMaxScaler() # Fallback
    st.warning("⚠️ Proceeding with newly initialized scalers. Predictions may be inaccurate.")


# --- Market Price Predictor Setup ---
# Simulate Market Price Data
def generate_market_price_data(num_samples=1000):
    data = []
    crops = all_crop_labels if all_crop_labels else ['wheat', 'rice', 'maize']
    
    for _ in range(num_samples):
        crop_type = random.choice(crops)
        N = random.uniform(50, 150)
        P = random.uniform(20, 60)
        K = random.uniform(50, 200)
        temperature = random.uniform(20, 35)
        humidity = random.uniform(30, 80)
        
        base_price = 100
        
        if crop_type == 'wheat':
            price = base_price * 1.2
        elif crop_type == 'rice':
            price = base_price * 1.5
        elif crop_type == 'maize':
            price = base_price * 1.1
        else: 
            price = base_price * 1.0
            
        price += (N / 10) + (P / 5) + (K / 10)
        price += (temperature - 25) * 2
        price += (humidity - 50) * 1.5
        
        price += random.uniform(-10, 10)
        price = max(50, price)
        
        data.append([N, P, K, temperature, humidity, crop_type, price])
        
    df_prices = pd.DataFrame(data, columns=['N', 'P', 'K', 'temperature', 'humidity', 'crop_type', 'price'])
    return df_prices

@st.cache_data 
def train_market_price_model():
    if crop_encoder is None:
        st.error("Cannot train market price model: Crop encoder not initialized.")
        return None, None, None

    df_prices = generate_market_price_data(num_samples=2000)
    
    market_price_features = ['N', 'P', 'K', 'temperature', 'humidity']
    
    # Ensure crop_encoder is fitted with 'crop_type' if it's used here
    # The `all_crop_labels` used to fit the main crop_encoder should be sufficient.
    X_categorical = crop_encoder.transform(df_prices[['crop_type']])
    X_categorical_df = pd.DataFrame(X_categorical, columns=crop_encoder.get_feature_names_out(['crop_type']))
    
    X_numerical = df_prices[market_price_features]
    
    X_train_market = pd.concat([X_numerical, X_categorical_df], axis=1)
    y_train_market = df_prices['price']
    
    market_model = LinearRegression()
    market_model.fit(X_train_market, y_train_market)
    
    return market_model, crop_encoder, market_price_features

market_price_model, market_crop_encoder, market_price_features = train_market_price_model()
if market_price_model:
    st.success("✅ Market price prediction model trained (simulated data).")
else:
    st.error("❌ Market price prediction model could not be trained.")


# --- Fetch Live Sensor Data ---
@st.cache_data(ttl=10) # Cache data for 10 seconds to reduce Firebase reads
def fetch_sensor_data():
    """Fetches sensor data from Firebase Realtime Database."""
    ref = db.reference('sensors/farm1')
    snapshot = ref.get()
    if not snapshot:
        return pd.DataFrame()
    
    # Firebase data often comes as a dict of dicts, where keys are timestamps
    # Convert to a list of dicts, then DataFrame
    if isinstance(snapshot, dict):
        data_list = []
        for key, value in snapshot.items():
            if isinstance(value, dict):
                data_list.append(value)
            else:
                st.warning(f"Skipping non-dict entry in Firebase: {key}: {value}")
        df = pd.DataFrame(data_list)
    else: # If snapshot is already a list of dicts or single dict
        df = pd.DataFrame(snapshot)

    if df.empty:
        return pd.DataFrame()

    # Convert relevant columns to numeric, coercing errors
    # Note: 'pH' is used here as per Firebase, 'ph' was used in training script
    # Ensure consistency or handle both if they might appear.
    numeric_cols = ['N', 'P', 'K', 'pH', 'rainfall', 'temperature', 'humidity', 
                    'soil_moisture', 'light_intensity', 'growth_factor', 'growth_trigger']
    for col in numeric_cols:
        if col in df.columns:
            df[col] = pd.to_numeric(df[col], errors='coerce')
        else:
            df[col] = np.nan # Ensure missing columns are added as NaN to align with expected features
    
    # Handle 'pH' column name consistency: Firebase might send 'pH', trainer expects 'ph'
    # Do this early to ensure subsequent processing uses 'ph'
    if 'pH' in df.columns and 'ph' not in df.columns:
        df['ph'] = df['pH']
    if 'pH' in df.columns: # Optionally drop the 'pH' column if 'ph' is preferred
        df = df.drop(columns=['pH'])

    # --- NEW: Impute specific problematic columns if NaN with a sensible default ---
    # Apply this AFTER initial numeric conversion and pH/ph mapping
    if 'ph' in df.columns and df['ph'].isnull().any():
        # Use a common neutral pH (6.5) as default if NaN
        df['ph'] = df['ph'].fillna(6.5) 
        st.warning("pH value missing/NaN from Firebase. Imputing with default pH 6.5 for prediction.")
    # --- END NEW ---

    df['timestamp'] = pd.to_datetime(df['timestamp'], errors='coerce')
    df = df.dropna(subset=['timestamp'])
    df = df.sort_values('timestamp')
    return df.reset_index(drop=True)

# --- Predict Growth (Multi-Output TDANN) ---
def predict_growth(df_latest_data, selected_crop_type):
    """
    Predicts soil moisture, light intensity, and nutrient sum using the loaded AI model.
    Assumes the model was trained with specific input features and multiple outputs.
    """
    if model is None or input_scaler is None or output_scaler is None or crop_encoder is None:
        st.error("AI model or scalers or encoder not loaded. Cannot predict growth.")
        return None, None, None

    LOOKBACK_WINDOW = 5
    
    # Define input features as per trainer script
    base_sensor_features = ['N', 'P', 'K', 'temperature', 'humidity', 'ph', 'rainfall']
    biological_features = ['growth_factor'] # 'growth_trigger' was removed from trainer
    
    # Determine which biological features are actually present in the data
    # Filter out features that are not in the dataframe's columns
    present_biological_features = [f for f in biological_features if f in df_latest_data.columns]

    final_tdann_input_features = base_sensor_features + present_biological_features

    # Ensure all columns in final_tdann_input_features are in df_latest_data before subsetting
    available_tdann_features = [f for f in final_tdann_input_features if f in df_latest_data.columns]
    
    if len(available_tdann_features) != len(final_tdann_input_features):
        missing = set(final_tdann_input_features) - set(available_tdann_features)
        st.error(f"Missing expected TDANN input features in sensor data: {missing}. Cannot predict growth.")
        st.info("Ensure Firebase is sending all required sensor data: N, P, K, temperature, humidity, pH/ph, rainfall, growth_factor.")
        return None, None, None

    # Try to get enough data for the lookback window.
    # Use fillna() with ffill() to propagate last valid observation forward for missing values.
    # Use bfill() to fill leading NaNs if ffill has nothing to propagate.
    # IMPORTANT: df_latest_data is already pre-processed by fetch_sensor_data including pH imputation.
    processed_data_for_prediction = df_latest_data[available_tdann_features].tail(LOOKBACK_WINDOW)
    
    # A final fillna(0) as a safeguard, for any remaining NaNs, or if a whole row is NaN initially.
    # It's better to ensure data quality at the source or during fetch_sensor_data.
    processed_data_for_prediction = processed_data_for_prediction.fillna(method='ffill').fillna(method='bfill').fillna(0)


    if len(processed_data_for_prediction) < LOOKBACK_WINDOW:
        st.info(f"Not enough complete data points ({len(processed_data_for_prediction)} < {LOOKBACK_WINDOW}) even after filling NaNs. Need at least {LOOKBACK_WINDOW} consecutive entries with non-NaNs initially.")
        st.info("Please ensure enough historical sensor data is available in Firebase for the lookback window.")
        return None, None, None

    # Get encoded crop features column names (from the model's crop_encoder)
    encoded_crop_feature_names = crop_encoder.get_feature_names_out(['label']) # Changed from 'crop_type' to 'label' to match trainer
    
    # Combine all input features that the TDANN model expects
    # This must match the order and number of features during model training
    expected_full_input_features_order = final_tdann_input_features + encoded_crop_feature_names.tolist()

    full_input_features_sequence = []
    
    # One-hot encode the selected crop type once
    crop_type_input = np.array([selected_crop_type]).reshape(-1, 1)
    encoded_crop_single = crop_encoder.transform(crop_type_input)

    for i in range(LOOKBACK_WINDOW):
        # Get numerical features for the current timestep in the window
        numerical_features_at_timestep = processed_data_for_prediction.iloc[i][available_tdann_features].values
        
        # Combine numerical features with the *static* one-hot encoded crop type
        # Assuming crop type is static for the entire prediction window
        combined_features_at_timestep = np.hstack((numerical_features_at_timestep, encoded_crop_single[0]))
        full_input_features_sequence.append(combined_features_at_timestep)

    full_input_features_sequence_np = np.array(full_input_features_sequence)

    # --- Debugging: Print shapes and feature lists ---
    st.write(f"DEBUG: Scaler expects {input_scaler.n_features_in_} features.")
    st.write(f"DEBUG: Current input sequence shape: {full_input_features_sequence_np.shape}")
    st.write(f"DEBUG: Expected full input features order: {expected_full_input_features_order}")

    # Scale the combined input features
    scaled_input_sequence = input_scaler.transform(full_input_features_sequence_np)
    
    # Reshape for LSTM input: (1, lookback, num_features)
    X_predict = scaled_input_sequence.reshape(1, LOOKBACK_WINDOW, scaled_input_sequence.shape[1])
    
    try:
        predicted_scaled_outputs = model.predict(X_predict)
        
        # Inverse transform the predictions to get original scale
        predicted_raw_outputs = output_scaler.inverse_transform(predicted_scaled_outputs)
        
        soil_moisture_pred = round(float(predicted_raw_outputs[0][0]), 2)
        light_intensity_pred = round(float(predicted_raw_outputs[0][1]), 2)
        nutrient_sum_pred = round(float(predicted_raw_outputs[0][2]), 2) # Assuming NPK sum is the third output
        
        return soil_moisture_pred, light_intensity_pred, nutrient_sum_pred
    except Exception as e:
        st.error(f"Error during AI prediction: {e}")
        st.exception(e) # Display full traceback for debugging
        return None, None, None

# --- Predict Market Price ---
def predict_market_price(latest_data, selected_crop_type, market_model, market_crop_encoder, market_price_features):
    """
    Predicts the market price based on latest sensor data and crop type.
    """
    if market_model is None or market_crop_encoder is None:
        st.error("Market prediction model or encoder not initialized.")
        return None

    if not latest_data:
        return None

    # Prepare input for the market price model
    input_values = {}
    for feature in market_price_features:
        # Use .get() and check for pd.isna as Firebase data might not have all keys or they might be NaN
        val = latest_data.get(feature)
        if val is not None and not pd.isna(val):
            input_values[feature] = val
        else:
            st.warning(f"Missing or NaN feature '{feature}' for market price prediction. Imputing with 0.")
            input_values[feature] = 0 # Impute with 0 for market price model if missing
    
    input_df_numerical = pd.DataFrame([input_values])
    
    # One-hot encode crop type for prediction
    crop_type_input = np.array([selected_crop_type]).reshape(-1, 1)
    encoded_crop = market_crop_encoder.transform(crop_type_input)
    # Ensure column names match what the market model was trained on
    encoded_crop_df = pd.DataFrame(encoded_crop, columns=market_crop_encoder.get_feature_names_out(['crop_type']))
    
    # Combine all features for prediction
    X_predict_market = pd.concat([input_df_numerical, encoded_crop_df], axis=1)
    
    try:
        predicted_price = market_model.predict(X_predict_market)[0]
        return round(predicted_price, 2)
    except Exception as e:
        st.error(f"Error during market price prediction: {e}")
        st.exception(e) # Display full traceback for debugging
        return None


# --- Crop Care Advice Function ---
def crop_care_advice(df, crop_type):
    """Provides crop-specific care advice based on latest sensor readings."""
    if df.empty:
        return ["No sensor data available to provide advice."]
    
    latest = df.iloc[-1].to_dict()
    tips = []
    
    ct = crop_type.lower()

    npk_advice = {
        'N': {'min': 50, 'max': 150, 'low_msg': "Consider applying nitrogen-rich fertilizer.", 'high_msg': "Excess nitrogen can promote leafy growth over fruit/flower development."},
        'P': {'min': 20, 'max': 60, 'low_msg': "Consider applying phosphorus fertilizer for root development.", 'high_msg': "High phosphorus can lock up other nutrients."},
        'K': {'min': 50, 'max': 200, 'low_msg': "Consider applying potassium fertilizer for overall plant health and fruit quality.", 'high_msg': "Excess potassium can interfere with calcium and magnesium uptake."},
    }

    for nutrient, thresholds in npk_advice.items():
        if nutrient in latest and not pd.isna(latest.get(nutrient)):
            value = latest[nutrient]
            if value < thresholds['min']:
                tips.append(f"🌱 **{nutrient} is low ({value:.1f})**: {thresholds['low_msg']}")
            elif value > thresholds['max']:
                tips.append(f"🌱 **{nutrient} is high ({value:.1f})**: {thresholds['high_msg']}")

    # Specific crop advice
    if 'soil_moisture' in latest and not pd.isna(latest.get('soil_moisture')):
        sm = latest['soil_moisture']
        if ct == 'wheat':
            if sm < 35: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Irrigate lightly – wheat needs 35–50% soil moisture.")
        elif ct == 'rice':
            if sm < 60: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Rice needs high moisture. Ensure proper irrigation.")
        elif ct == 'maize':
            if sm < 40: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Maize needs moderate soil moisture levels.")
        elif ct == 'banana':
            if sm < 50: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Keep soil consistently moist for banana.")
        elif ct == 'mango':
            if sm > 60: tips.append(f"💧 **Soil Moisture is high ({sm:.1f}%)**: Avoid waterlogging. Mango needs well-drained soil.")
        elif ct == 'grapes':
            if sm > 50: tips.append(f"💧 **Soil Moisture is high ({sm:.1f}%)**: Grapes prefer drier soil – avoid overwatering.")
        elif ct == 'cotton':
            if sm < 30: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Cotton requires moderate moisture during flowering.")
        elif ct == 'millet' or ct == 'sorghum':
            if sm < 25: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: These are drought-resistant crops but still need minimal moisture.")
        elif ct == 'jute':
            if sm < 50: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Jute requires ample moisture during growth.")
        elif ct == 'pomegranate':
            if sm > 50: tips.append(f"💧 **Soil Moisture is high ({sm:.1f}%)**: Avoid overwatering pomegranate.")
        elif ct == 'muskmelon' or ct == 'watermelon':
            if sm < 30: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Melons need consistent watering, especially during fruiting.")
        elif ct == 'coconut':
            if sm < 50: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Coconut palms need high moisture levels.")
        elif ct == 'mothbeans':
            if sm < 25: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Mothbeans are drought-tolerant but need minimal irrigation during flowering.")
        elif ct == 'mungbean':
            if sm < 30: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Ensure regular irrigation during flowering and pod formation.")
        elif ct == 'blackgram':
            if sm < 35: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Maintain moderate moisture especially during flowering.")
        elif ct == 'lentil':
            if sm < 25: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: Lentils need low to moderate moisture.")
        # General advice if not crop-specific
        if sm < 30: tips.append(f"💧 **Soil Moisture is low ({sm:.1f}%)**: General advice: Consider irrigation to prevent drought stress.")
        elif sm > 70: tips.append(f"💧 **Soil Moisture is high ({sm:.1f}%)**: General advice: Ensure good drainage to prevent waterlogging.")

    if 'temperature' in latest and not pd.isna(latest.get('temperature')):
        temp = latest['temperature']
        if ct == 'wheat':
            if temp > 32: tips.append(f"🌡️ **Temperature is high ({temp:.1f}°C)**: Provide shade or irrigate in evening – temp is too high for wheat.")
        elif ct == 'rice':
            if temp > 38: tips.append(f"🌡️ **Temperature is high ({temp:.1f}°C)**: Too hot for rice. Consider evening irrigation or shade.")
        elif ct == 'maize':
            if temp < 20: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Maize prefers warm weather (20–30°C).")
        elif ct == 'banana':
            if temp < 15: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Banana is sensitive to cold – ensure warm conditions.")
        elif ct == 'mango':
            if temp < 20: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Mango requires warmer temperatures (>20°C).")
        elif ct == 'cotton':
            if temp < 20: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Cotton thrives in warm temperatures.")
        elif ct == 'millet' or ct == 'sorghum':
            if temp < 20: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Warm climate is ideal for millet/sorghum.")
        elif ct == 'coffee':
            if temp < 18: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Coffee thrives in 18–24°C range.")
        elif ct == 'jute':
            if temp < 25: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Jute grows well in 25–30°C.")
        elif ct == 'papaya':
            if temp < 20: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Papaya prefers 21–33°C range.")
        elif ct == 'pomegranate':
            if temp < 20: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Ideal temperature is above 20°C.")
        elif ct == 'muskmelon' or ct == 'watermelon':
            if temp < 25: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Ensure temperature is warm (>25°C).")
        elif ct == 'coconut':
            if temp < 25: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Ideal temperature for coconut is above 25°C.")
        elif ct == 'mothbeans':
            if temp < 22: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Temperature should be above 22°C.")
        elif ct == 'mungbean':
            if temp < 20: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Mungbean requires warm conditions for optimal growth.")
        elif ct == 'blackgram':
            if temp < 18: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Ideal temperature range is 25–35°C.")
        elif ct == 'lentil':
            if temp < 15: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: Lentils grow well in 18–30°C.")
        # General advice
        if temp < 18: tips.append(f"🌡️ **Temperature is low ({temp:.1f}°C)**: General advice: Cold temperatures can stunt growth. Consider protective measures.")
        elif temp > 35: tips.append(f"🌡️ **Temperature is high ({temp:.1f}°C)**: General advice: High temperatures can cause heat stress. Ensure adequate water and shade.")

    if 'humidity' in latest and not pd.isna(latest.get('humidity')):
        hum = latest['humidity']
        if ct == 'wheat':
            if hum > 70: tips.append(f"💨 **Humidity is high ({hum:.1f}%)**: Watch out for fungal infections – ensure airflow.")
        elif ct == 'rice':
            if hum < 60: tips.append(f"💨 **Humidity is low ({hum:.1f}%)**: Increase ambient humidity or use mulch.")
        elif ct == 'banana':
            if hum < 60: tips.append(f"💨 **Humidity is low ({hum:.1f}%)**: Banana requires high humidity. Consider misting or mulching.")
        elif ct == 'grapes':
            if hum > 70: tips.append(f"💨 **Humidity is high ({hum:.1f}%)**: High humidity may lead to fungal infections.")
        elif ct == 'coffee':
            if hum < 60: tips.append(f"💨 **Humidity is low ({hum:.1f}%)**: Coffee prefers high humidity.")
        elif ct == 'orange':
            if hum > 70: tips.append(f"💨 **Humidity is high ({hum:.1f}%)**: Prune trees to improve airflow and prevent fungal issues.")
        # General advice
        if hum < 40: tips.append(f"💨 **Humidity is low ({hum:.1f}%)**: General advice: Low humidity can cause wilting. Consider misting or increasing soil moisture.")
        elif hum > 80: tips.append(f"💨 **Humidity is high ({hum:.1f}%)**: General advice: High humidity increases risk of fungal diseases. Ensure good ventilation.")

    # Note: Using 'ph' from fetched data after consistency handling
    if 'ph' in latest and not pd.isna(latest.get('ph')):
        ph_val = latest['ph']
        if ct == 'wheat':
            if ph_val < 6.0: tips.append(f"🧪 **pH is low ({ph_val:.1f})**: Slightly acidic – consider applying lime to raise pH.")
        elif ct == 'rice':
            if ph_val < 5.5 or ph_val > 6.5: tips.append(f"🧪 **pH is off ({ph_val:.1f})**: Maintain slightly acidic soil for rice (pH 5.5–6.5).")
        elif ct == 'maize':
            if ph_val < 5.8 or ph_val > 7: tips.append(f"🧪 **pH is off ({ph_val:.1f})**: Maintain soil pH between 5.8–7.0.")
        elif ct == 'papaya':
            if ph_val < 6: tips.append(f"🧪 **pH is low ({ph_val:.1f})**: Slightly acidic to neutral soil is best for papaya.")
        elif ct == 'orange':
            if ph_val < 6 or ph_val > 7.5: tips.append(f"🧪 **pH is off ({ph_val:.1f})**: Ideal soil pH for orange is 6.0–7.5.")
        # General advice
        if ph_val < 5.5: tips.append(f"🧪 **pH is very low ({ph_val:.1f})**: General advice: Soil is too acidic. Apply lime to increase pH and improve nutrient availability.")
        elif ph_val > 7.5: tips.append(f"🧪 **pH is very high ({ph_val:.1f})**: General advice: Soil is too alkaline. Apply sulfur or organic matter to decrease pH.")
        elif not (5.5 <= ph_val <= 7.5): tips.append(f"🧪 **pH is off ({ph_val:.1f})**: General advice: Optimal pH range for most crops is 5.5-7.5. Adjust as needed.")

    if 'light_intensity' in latest and not pd.isna(latest.get('light_intensity')):
        light = latest['light_intensity']
        if ct == 'wheat':
            if light < 400: tips.append(f"☀️ **Light Intensity is low ({light:.1f} lux)**: Ensure the crop gets enough sunlight.")
        elif ct == 'rice':
            if light < 500: tips.append(f"☀️ **Light Intensity is low ({light:.1f} lux)**: Ensure rice gets full sun exposure.")
        # General advice
        if light < 300: tips.append(f"☀️ **Light Intensity is very low ({light:.1f} lux)**: General advice: Insufficient light can hinder photosynthesis. Consider supplemental lighting or pruning.")
        elif light > 800: tips.append(f"☀️ **Light Intensity is very high ({light:.1f} lux)**: General advice: Excessive light can cause scorching. Consider shading during peak hours.")
            
    if 'rainfall' in latest and not pd.isna(latest.get('rainfall')):
        rain = latest['rainfall']
        if rain < 50: 
            tips.append(f"🌧️ **Rainfall is low ({rain:.1f} mm)**: Consider supplementary irrigation, especially for water-intensive crops.")
        elif rain > 200: 
            tips.append(f"🌧️ **Rainfall is high ({rain:.1f} mm)**: Ensure good drainage to prevent waterlogging and root rot.")
        
    return tips if tips else ["✅ All major parameters look good! Keep monitoring regularly for optimal growth."]

# --- Voice Alert Function (Updated for Streamlit Cloud + Local) ---
def speak_tip(tip_text, lang='en'):
    try:
        tts = gTTS(text=tip_text, lang=lang)
        with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as f:
            file_path = f.name
            tts.save(file_path)
        
        if PLAYSOUND_AVAILABLE:
            try:
                playsound.playsound(file_path)
            except Exception as e:
                st.error(f"Error playing voice alert with playsound: {e}. Attempting in-browser playback.")
                # Fallback to in-browser playback if playsound fails
                audio_file = open(file_path, "rb")
                audio_bytes = audio_file.read()
                st.audio(audio_bytes, format="audio/mp3", autoplay=True)
        else:
            audio_file = open(file_path, "rb")
            audio_bytes = audio_file.read()
            st.audio(audio_bytes, format="audio/mp3", autoplay=True)
    except Exception as e:
        st.error(f"Error generating or playing voice alert: {e}")
        st.info("This might be due to missing audio backend (e.g., `ffplay` on Linux) or `playsound` limitations on web servers.")
    finally:
        if 'file_path' in locals() and os.path.exists(file_path):
            os.remove(file_path) # Clean up the temporary file

# --- Seed Recommender Function ---
def recommend_seeds(ph, temperature, rainfall, soil_moisture=None):
    """
    Suggests suitable crops based on environmental conditions.
    Args:
        ph (float): Current pH value of the soil.
        temperature (float): Current temperature in Celsius.
        rainfall (float): Recent rainfall in mm.
        soil_moisture (float, optional): Current soil moisture percentage.
                                        If available, provides more specific advice.
    Returns:
        str: Recommended crops or general advice.
    """
    recommendations = []

    # pH based recommendations
    if ph < 5.5:
        recommendations.append("acid-tolerant crops like blueberries, potatoes, or specific rice varieties")
    elif ph > 7.5:
        recommendations.append("alkaline-tolerant crops such as asparagus, spinach, or specific varieties of alfalfa")
    else:
        recommendations.append("a wide range of crops thrive in neutral to slightly acidic pH (5.5-7.5), including wheat, maize, and most vegetables")

    # Temperature based recommendations
    if temperature > 35:
        recommendations.append("heat-tolerant crops like millet, sorghum, cotton, or some varieties of beans")
    elif temperature < 15:
        recommendations.append("cold-hardy crops such as wheat (winter varieties), barley, oats, or peas")
    else:
        recommendations.append("warm-season crops like maize, rice (tropical), most vegetables, and fruits")

    # Rainfall based recommendations
    if rainfall < 50: # Low rainfall
        recommendations.append("drought-resistant crops like millet, sorghum, chickpeas, or certain types of beans (e.g., mothbeans)")
    elif rainfall > 200: # High rainfall, potentially waterlogging
        recommendations.append("water-loving crops such as rice, sugarcane, jute, or crops that tolerate temporary waterlogging")
    else:
        recommendations.append("crops suitable for moderate rainfall, including wheat, maize, and many vegetables")

    # Soil Moisture based recommendations (more granular if available)
    if soil_moisture is not None:
        if soil_moisture < 30: # Very dry
            recommendations.append("very drought-tolerant crops (e.g., desert-adapted melons or some herbs)")
        elif soil_moisture > 80: # Very wet, prone to waterlogging
            recommendations.append("semi-aquatic crops or those highly tolerant to waterlogging (e.g., taro, some rice varieties if poorly drained)")

    if not recommendations:
        return "No specific recommendations, as current conditions are unusual or general."
    
    return "Based on current conditions, you might consider: " + ", ".join(recommendations) + ". Please consult local agricultural experts for precise recommendations."


# --- Streamlit UI ---
st.set_page_config(layout="wide")
st.title("🌿 Smart AgriTech Dashboard")

# Refresh button
if st.button("🔄 Refresh Data"):
    st.cache_data.clear() # Clear cache to fetch fresh data
    st.rerun()

# Language selector for voice alerts
voice_lang = st.selectbox("Choose Alert Language", ["en", "hi"], index=0, help="English (en) or Hindi (hi)")

# --- Load and Display Sensor Data ---
df = fetch_sensor_data()

if df.empty:
    st.warning("No data available from Firebase. Please ensure your sensor sends data or check Firebase connection.")
else:
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("📈 Sensor Trends")
        # Ensure 'ph' is used for plotting if it was consistently mapped from 'pH'
        plot_features = ['soil_moisture', 'temperature', 'humidity', 'ph', 'light_intensity', 'N', 'P', 'K', 'rainfall', 'growth_factor'] # Removed 'growth_trigger' as per trainer
        existing_plot_features = [f for f in plot_features if f in df.columns]
        
        plot_df_melted = df.dropna(subset=existing_plot_features + ['timestamp']).melt(
            id_vars=['timestamp'], 
            value_vars=existing_plot_features,
            var_name='Sensor Metric',
            value_name='Reading'
        )

        if not plot_df_melted.empty and len(existing_plot_features) > 0:
            try:
                fig = px.line(
                    plot_df_melted,
                    x='timestamp',
                    y='Reading',
                    color='Sensor Metric', 
                    labels={'Reading': 'Sensor Reading', 'timestamp': 'Time'},
                    title="Sensor Readings Over Time"
                )
                fig.update_layout(hovermode="x unified")
                st.plotly_chart(fig, use_container_width=True)
            except Exception as e:
                st.error(f"Error plotting sensor trends: {e}")
                st.warning("⚠️ Could not plot all sensor trends. Check data types or missing values, or if the data is too sparse.")
        else:
            st.warning("⚠️ Not enough complete data available for plotting sensor trends. Check if sensors are reporting data for these features.")

    with col2:
        st.subheader("🌿 Crop Care Recommendations")
        selected_crop_type = st.selectbox("Select Growing Crop", all_crop_labels if all_crop_labels else ["No crops found"], key="crop_select")
        
        if df is not None and not df.empty and selected_crop_type:
            # Display latest sensor data summary
            latest_data_summary = df.iloc[-1].to_dict()
            # Ensure 'ph' is displayed if it's the processed column
            display_data_summary = {k: f"{v:.1f}" if isinstance(v, (int, float)) else v for k, v in latest_data_summary.items() if k not in ['timestamp', 'index', 'pH']}
            st.markdown(f"📊 **Latest Data**: {', '.join([f'{k}: {v}' for k, v in display_data_summary.items()])}")

            care_tips = crop_care_advice(df, selected_crop_type)
            st.markdown("---")
            for tip in care_tips:
                st.write(tip)
            
            if st.button(f"🔊 Play Top Alerts ({'Hindi' if voice_lang=='hi' else 'English'})"):
                if care_tips:
                    for i, tip in enumerate(care_tips[:2]): # Play up to 2 alerts
                        st.info(f"Playing alert {i+1}: {tip}")
                        speak_tip(tip.replace('**', ''), lang=voice_lang) # Remove markdown for better speech
                else:
                    st.info("No specific alerts to play.")

        elif not selected_crop_type:
            st.info("Please select a crop to get recommendations.")
        else:
            st.info("No sensor data available for crop care recommendations.")

        st.subheader("🤖 AI-Based Growth Prediction")
        soil_moisture_pred, light_intensity_pred, nutrient_sum_pred = None, None, None
        if df is not None and not df.empty and selected_crop_type and model is not None and input_scaler is not None and output_scaler is not None and crop_encoder is not None:
            soil_moisture_pred, light_intensity_pred, nutrient_sum_pred = predict_growth(df, selected_crop_type)
            if soil_moisture_pred is not None:
                if 0 <= soil_moisture_pred <= 100:
                    st.success(f"📊 Predicted Soil Moisture: **{soil_moisture_pred:.2f}%**")
                else:
                    st.warning(f"📊 Predicted Soil Moisture: **{soil_moisture_pred:.2f}%**. This value seems unusual (Expected between 0-100%).")
                st.info(f"💡 Predicted Light Intensity: **{light_intensity_pred:.2f} lux**")
                st.info(f"🌿 Predicted NPK Nutrient Sum: **{nutrient_sum_pred:.2f}**")
            else:
                st.info("Not enough data or issue with model prediction. Check logs above for details.")
        else:
            st.info("Select a crop, ensure sensor data is available, and all AI components are loaded for prediction.")

        st.subheader("📉 Market Price Forecast")
        if df is not None and not df.empty and selected_crop_type and market_price_model is not None and market_crop_encoder is not None:
            latest_sensor_data_for_price = df.iloc[-1].to_dict()
            predicted_price = predict_market_price(latest_sensor_data_for_price, selected_crop_type, market_price_model, market_crop_encoder, market_price_features)
            if predicted_price is not None:
                st.success(f"💰 Estimated Market Price for {selected_crop_type}: **₹ {predicted_price:.2f} / unit**")
            else:
                st.info("Cannot forecast market price. Ensure all required sensor data is available and market model is trained.")
        else:
            st.info("Select a crop, ensure sensor data is available, and market model is trained for market price forecast.")


        st.subheader("🌾 Crop Suggestion Based on Predicted Conditions")
        if soil_moisture_pred is not None and not pd.isna(soil_moisture_pred) and 0 <= soil_moisture_pred <= 100:
            latest_sensor_data_for_suggestion = df.iloc[-1].to_dict()
            # Ensure 'ph' is used from the processed data for the recommender
            current_ph = latest_sensor_data_for_suggestion.get('ph') 
            current_temp = latest_sensor_data_for_suggestion.get('temperature')
            current_rainfall = latest_sensor_data_for_suggestion.get('rainfall')

            if all(v is not None and not pd.isna(v) for v in [current_ph, current_temp, current_rainfall]):
                seed_recommendation = recommend_seeds(current_ph, current_temp, current_rainfall, soil_moisture_pred)
                st.write(seed_recommendation)
            else:
                st.info("Missing essential current sensor data (pH, temperature, rainfall) for crop suggestions.")
        else:
            st.info("Predicted soil moisture is out of typical range or not available, hindering specific crop suggestions.")

    st.markdown("---")
    st.subheader("📋 Latest Sensor Readings (Raw Data)")
    if not df.empty:
        st.dataframe(df.tail(10))
    else:
        st.info("No sensor data to display.")

--- END FILE: phase-5-final-dashboard.py ---

--- START FILE: README.md ---

Check out the website here: https://smart-agritech-streamlit-dashbard.onrender.com


--- END FILE: README.md ---

--- START FILE: retrain_crop_aware_model.py ---

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Input, LSTM, Dropout, Dense
from sklearn.preprocessing import MinMaxScaler
import matplotlib.pyplot as plt

# --- Load Your Full Crop Dataset ---
df = pd.read_csv("cleaned_sensor_data.csv")

# --- Ensure Timestamp Index ---
if 'timestamp' not in df.columns:
    df['timestamp'] = pd.date_range(start='2024-01-01', periods=len(df), freq='h')
df.set_index('timestamp', inplace=True)

# --- One-Hot Encode Crop Labels ---
df['label'] = df['label'].str.lower().str.strip()
crop_dummies = pd.get_dummies(df['label'], prefix='crop')
df = pd.concat([df, crop_dummies], axis=1)

# --- Final Feature Columns ---
base_features = ['N', 'P', 'K', 'temperature', 'humidity', 'ph', 'rainfall']
final_features = base_features + crop_dummies.columns.tolist()

# --- Scaling ---
scaler = MinMaxScaler()
data_scaled = scaler.fit_transform(df[final_features])

# --- Sequence Generation ---
def create_sequences(data, lookback=5):
    X, y = [], []
    for i in range(lookback, len(data)):
        X.append(data[i-lookback:i])
        y.append(data[i, base_features.index('temperature')])  # Predicting temperature as example
    return np.array(X), np.array(y)

lookback = 5
X, y = create_sequences(data_scaled, lookback)

# --- Build Model ---
model = Sequential()
model.add(Input(shape=(X.shape[1], X.shape[2])))
model.add(LSTM(64, return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(32))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mse')

# --- Train ---
history = model.fit(X, y, epochs=30, batch_size=16, validation_split=0.2)

# --- Save ---
model.save("tdann_pnsm_model.keras")
print("New model trained and saved as tdann_pnsm_model.keras")

# --- Optional: Plot Loss ---
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Val Loss')
plt.title("Training Loss")
plt.legend()
plt.show()


--- END FILE: retrain_crop_aware_model.py ---

--- START FILE: retrain_tdann_model_final.py ---

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Input, LSTM, Dropout, Dense
from sklearn.preprocessing import MinMaxScaler, OneHotEncoder
import matplotlib.pyplot as plt
import os
import joblib

# Ensure reproducible results (optional)
tf.random.set_seed(42)
np.random.seed(42)

# --- Configuration ---
DATA_FILE = "cleaned_sensor_data.csv"
MODEL_SAVE_PATH = "tdann_pnsm_model.keras"
INPUT_SCALER_SAVE_PATH = "tdann_input_scaler.joblib"
OUTPUT_SCALER_SAVE_PATH = "tdann_output_scaler.joblib"
CROP_ENCODER_SAVE_PATH = "tdann_crop_encoder.joblib"
LOOKBACK_WINDOW = 5
EPOCHS = 50
BATCH_SIZE = 32
VALIDATION_SPLIT = 0.2

# --- Load Your Full Crop Dataset ---
try:
    df = pd.read_csv(DATA_FILE)
    print(f"Data loaded from {DATA_FILE}")
except FileNotFoundError:
    print(f"Error: {DATA_FILE} not found. Please ensure the CSV file is in the same directory.")
    exit()
except Exception as e:
    print(f"Error loading data: {e}")
    exit()

# --- Preprocessing ---

# Ensure 'timestamp' index
if 'timestamp' not in df.columns:
    print("'timestamp' column not found. Generating synthetic timestamps.")
    df['timestamp'] = pd.date_range(start='2024-01-01', periods=len(df), freq='h')
df.set_index('timestamp', inplace=True)

# Ensure 'label' column exists for crop awareness
if 'label' not in df.columns:
    print("Error: 'label' (crop type) column not found. Cannot perform crop-aware training.")
    print("Please ensure your CSV has a 'label' column indicating crop types.")
    exit()

# Convert label to lowercase and strip whitespace
df['label'] = df['label'].str.lower().str.strip()

# One-Hot Encode Crop Labels using sklearn's OneHotEncoder
crop_encoder = OneHotEncoder(handle_unknown='ignore', sparse_output=False)
# Fit the encoder on the unique crop labels present in the training data
crop_encoder.fit(df[['label']])
joblib.dump(crop_encoder, CROP_ENCODER_SAVE_PATH) # Save the fitted encoder
print(f"Crop encoder saved to {CROP_ENCODER_SAVE_PATH}")

# Transform the 'label' column into one-hot encoded features
crop_encoded_data = crop_encoder.transform(df[['label']])
# Create a DataFrame from the encoded data with meaningful column names
crop_dummies = pd.DataFrame(crop_encoded_data, columns=crop_encoder.get_feature_names_out(['label']), index=df.index)
df = pd.concat([df, crop_dummies], axis=1)
print(f"Generated {len(crop_dummies.columns)} crop dummy variables using OneHotEncoder.")


# --- Define Features and Targets ---

# Input Features for the TDANN model (these must match the dashboard's `predict_growth` inputs)
base_sensor_features = ['N', 'P', 'K', 'temperature', 'humidity', 'ph', 'rainfall']
additional_features = []
if 'growth_factor' in df.columns:
    additional_features.append('growth_factor')
# if 'growth_trigger' in df.columns: # Commented out to align with 30 features currently from Firebase
#     additional_features.append('growth_trigger')

# Use the column names generated by the OneHotEncoder
final_input_features = base_sensor_features + additional_features + crop_encoder.get_feature_names_out(['label']).tolist()


# Target Features for Multi-task output
target_columns = ['soil_moisture', 'light_intensity']
if 'N' in df.columns and 'P' in df.columns and 'K' in df.columns:
    df['npk_sum'] = df['N'] + df['P'] + df['K']
    target_columns.append('npk_sum')
else:
    print("N, P, or K columns missing. NPK sum target will not be used.")

# Ensure all selected features and targets exist in the DataFrame
missing_inputs = [f for f in final_input_features if f not in df.columns]
missing_targets = [t for t in target_columns if t not in df.columns]

if missing_inputs:
    print(f"Missing input features in CSV: {missing_inputs}. Please check your data.")
    exit()
if missing_targets:
    print(f"Missing target features in CSV: {missing_targets}. Please check your data.")
    exit()

print(f"Input features: {final_input_features}")
print(f"Target features: {target_columns}")

# Drop rows with any NaN values in the selected features or targets
df_cleaned = df[final_input_features + target_columns].dropna()
print(f"Original rows: {len(df)}. Rows after dropping NaNs: {len(df_cleaned)}")

if df_cleaned.empty:
    print("No clean data available after dropping NaNs for training. Exiting.")
    exit()

# --- Scaling ---
# Input Scaler
input_scaler = MinMaxScaler()
data_scaled_inputs = input_scaler.fit_transform(df_cleaned[final_input_features])
joblib.dump(input_scaler, INPUT_SCALER_SAVE_PATH)
print(f"Input scaler saved to {INPUT_SCALER_SAVE_PATH}")

# Output Scaler (separate scaler for targets is crucial for multi-output inverse transform)
output_scaler = MinMaxScaler()
data_scaled_targets = output_scaler.fit_transform(df_cleaned[target_columns])
joblib.dump(output_scaler, OUTPUT_SCALER_SAVE_PATH)
print(f"Output scaler saved to {OUTPUT_SCALER_SAVE_PATH}")


# --- Sequence Generation for Multi-Output ---
def create_sequences_multi_output(inputs, targets, lookback=5):
    X, y = [], []
    for i in range(lookback, len(inputs)):
        X.append(inputs[i-lookback:i])
        y.append(targets[i])
    return np.array(X), np.array(y)

X, y = create_sequences_multi_output(data_scaled_inputs, data_scaled_targets, LOOKBACK_WINDOW)

print(f"Generated sequences: X.shape={X.shape}, y.shape={y.shape}")

if X.shape[0] == 0:
    print(f"Not enough data to create sequences with lookback window {LOOKBACK_WINDOW}. Need more than {LOOKBACK_WINDOW} rows.")
    exit()

# --- Build TDANN (LSTM-based) Model with Multi-Output ---
model = Sequential()
model.add(Input(shape=(X.shape[1], X.shape[2])))
model.add(LSTM(128, return_sequences=True, activation='relu'))
model.add(Dropout(0.3))
model.add(LSTM(64, activation='relu'))
model.add(Dropout(0.3))
model.add(Dense(len(target_columns), activation='linear'))
model.compile(optimizer='adam', loss='mse')
model.summary()

# --- Train ---
print(f"\n--- Training Model for {EPOCHS} Epochs ---")
history = model.fit(X, y, epochs=EPOCHS, batch_size=BATCH_SIZE, validation_split=VALIDATION_SPLIT, verbose=1)

# --- Save Model ---
model.save(MODEL_SAVE_PATH)
print(f"New multi-output model trained and saved as {MODEL_SAVE_PATH}")

# --- Optional: Plot Loss ---
plt.figure(figsize=(10, 6))
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title("TDANN Training Loss (Multi-Output)")
plt.xlabel("Epoch")
plt.ylabel("Mean Squared Error")
plt.legend()
plt.grid(True)
plt.show()


# ==============================================================================
# 🌾 New Component Suggestion: Seed Recommender (Already in your dashboard, just for completeness)
# This part is a standalone function that can be integrated into your Streamlit dashboard.
# It doesn't require retraining the TDANN model itself.
# ==============================================================================

def recommend_seeds(ph, temperature, rainfall, soil_moisture=None):
    """
    Suggests suitable crops based on environmental conditions.
    Args:
        ph (float): Current pH value of the soil.
        temperature (float): Current temperature in Celsius.
        rainfall (float): Recent rainfall in mm.
        soil_moisture (float, optional): Current soil moisture percentage.
                                        If available, provides more specific advice.
    Returns:
        str: Recommended crops or general advice.
    """
    recommendations = []

    # pH based recommendations
    if ph < 5.5:
        recommendations.append("acid-tolerant crops like blueberries, potatoes, or specific rice varieties")
    elif ph > 7.5:
        recommendations.append("alkaline-tolerant crops such as asparagus, spinach, or specific varieties of alfalfa")
    else:
        recommendations.append("a wide range of crops thrive in neutral to slightly acidic pH (5.5-7.5), including wheat, maize, and most vegetables")

    # Temperature based recommendations
    if temperature > 35:
        recommendations.append("heat-tolerant crops like millet, sorghum, cotton, or some varieties of beans")
    elif temperature < 15:
        recommendations.append("cold-hardy crops such as wheat (winter varieties), barley, oats, or peas")
    else:
        recommendations.append("warm-season crops like maize, rice (tropical), most vegetables, and fruits")

    # Rainfall based recommendations
    if rainfall < 50: # Low rainfall
        recommendations.append("drought-resistant crops like millet, sorghum, chickpeas, or certain types of beans (e.g., mothbeans)")
    elif rainfall > 200: # High rainfall, potentially waterlogging
        recommendations.append("water-loving crops such as rice, sugarcane, jute, or crops that tolerate temporary waterlogging")
    else:
        recommendations.append("crops suitable for moderate rainfall, including wheat, maize, and many vegetables")

    # Soil Moisture based recommendations (more granular if available)
    if soil_moisture is not None:
        if soil_moisture < 30: # Very dry
            recommendations.append("very drought-tolerant crops (e.g., desert-adapted melons or some herbs)")
        elif soil_moisture > 80: # Very wet, prone to waterlogging
            recommendations.append("semi-aquatic crops or those highly tolerant to waterlogging (e.g., taro, some rice varieties if poorly drained)")

    # Consolidate advice
    if not recommendations:
        return "No specific recommendations, as current conditions are unusual or general."
    return "Based on your conditions, consider: " + ", ".join(recommendations) + ". Please consult local agricultural experts for precise recommendations."

if __name__ == "__main__":
    print("\n--- Seed Recommender Test ---")
    # Simulate some current conditions
    current_ph = 6.2
    current_temp = 28.5
    current_rainfall = 75
    current_soil_moisture = 55 # Optional

    print(f"Conditions: pH={current_ph}, Temp={current_temp}°C, Rainfall={current_rainfall}mm, Soil Moisture={current_soil_moisture}%")
    recommended = recommend_seeds(current_ph, current_temp, current_rainfall, current_soil_moisture)
    print(f"Recommendation: {recommended}")

    current_ph_dry = 5.8
    current_temp_dry = 32
    current_rainfall_dry = 20
    current_soil_moisture_dry = 25
    print(f"\nConditions: pH={current_ph_dry}, Temp={current_temp_dry}°C, Rainfall={current_rainfall_dry}mm, Soil Moisture={current_soil_moisture_dry}%")
    recommended_dry = recommend_seeds(current_ph_dry, current_temp_dry, current_rainfall_dry, current_soil_moisture_dry)
    print(f"Recommendation: {recommended_dry}")

    current_ph_wet = 7.0
    current_temp_wet = 25
    current_rainfall_wet = 250
    current_soil_moisture_wet = 90
    print(f"\nConditions: pH={current_ph_wet}, Temp={current_temp_wet}°C, Rainfall={current_rainfall_wet}mm, Soil Moisture={current_soil_moisture_wet}%")
    recommended_wet = recommend_seeds(current_ph_wet, current_temp_wet, current_rainfall_wet, current_soil_moisture_wet)
    print(f"Recommendation: {recommended_wet}")

--- END FILE: retrain_tdann_model_final.py ---

--- START FILE: runtime.txt ---

python-3.10.13


--- END FILE: runtime.txt ---

--- START FILE: train_tdann_model.py ---

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout
from tensorflow.keras.layers import Input
from sklearn.preprocessing import MinMaxScaler
import matplotlib.pyplot as plt

# Load cleaned data
df = pd.read_csv("cleaned_sensor_data.csv")

# If timestamp is missing, generate synthetic ones
df['timestamp'] = pd.date_range(start='2024-01-01', periods=len(df), freq='h')
df.set_index('timestamp', inplace=True)
print("Columns in CSV:", df.columns.tolist())


# Features used for prediction
features = ['N', 'P', 'K', 'temperature', 'humidity', 'ph', 'rainfall']
scaler = MinMaxScaler()
data_scaled = scaler.fit_transform(df[features])

# Create sequences for LSTM (lookback window = 5)
def create_sequences(data, lookback=5):
    X, y = [], []
    for i in range(lookback, len(data)):
        X.append(data[i-lookback:i])
        y.append(data[i, 3])  # Predicting temperature (index 3), or choose another
    return np.array(X), np.array(y)

X, y = create_sequences(data_scaled)

# TDANN (LSTM-based) Model
model = Sequential()
model.add(Input(shape=(X.shape[1], X.shape[2])))
model.add(LSTM(64, return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(32))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mse')

# Train the model
history = model.fit(X, y, epochs=30, batch_size=16, validation_split=0.2)

# Save the model
model.save("tdann_pnsm_model.keras")
print("Model saved as tdann_pnsm_model.keras")

# Optional: Plot training loss
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Val Loss')
plt.title("TDANN Training Loss")
plt.legend()
plt.show()


--- END FILE: train_tdann_model.py ---
